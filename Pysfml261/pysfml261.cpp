/* Generated by Cython 3.1.0 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Audio\\AlResource.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Audio\\Music.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Audio\\Sound.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Audio\\SoundBuffer.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Audio\\SoundSource.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Audio\\SoundStream.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\CircleShape.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Color.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Drawable.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Font.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Image.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\RectangleShape.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\RenderStates.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\RenderTarget.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\RenderWindow.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Shader.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Shape.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Sprite.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Text.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Texture.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\Transformable.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Graphics\\View.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\System\\Clock.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\System\\NonCopyable.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\System\\String.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\System\\Time.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Window\\Event.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Window\\GlResource.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Window\\Keyboard.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Window\\Mouse.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Window\\VideoMode.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Window\\Window.hpp",
            "C:\\Program Files\\SFML\\SFML-2.6.1\\include\\SFML\\Window\\WindowBase.hpp"
        ],
        "extra_compile_args": [
            "/EHsc",
            "/std:c++14",
            "/O2",
            "/Oi",
            "/GL",
            "/Gy",
            "/Zi",
            "/MT",
            "/GS",
            "/W4"
        ],
        "include_dirs": [
            "C:/Program Files/SFML/SFML-2.6.1/include"
        ],
        "language": "c++",
        "libraries": [
            "sfml-graphics",
            "sfml-window",
            "sfml-system",
            "sfml-audio"
        ],
        "library_dirs": [
            "C:/Program Files/SFML/SFML-2.6.1/lib"
        ],
        "name": "pysfml261",
        "sources": [
            "C:\\Users\\CoffeeTortoise\\Desktop\\MyFiles\\CompFiles\\Projects\\Python\\Pysfml261\\Pysfml261\\pysfml261.pyx"
        ]
    },
    "module_name": "pysfml261"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
/* InitLimitedAPI */
#if defined(Py_LIMITED_API) && !defined(CYTHON_LIMITED_API)
  #define CYTHON_LIMITED_API 1
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x03080000
    #error Cython requires Python 3.8+.
#else
#define __PYX_ABI_VERSION "3_1_0"
#define CYTHON_HEX_VERSION 0x030100F0
#define CYTHON_FUTURE_DIVISION 1
/* CModulePreamble */
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
  #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_ASSUME_SAFE_SIZE
  #define CYTHON_ASSUME_SAFE_SIZE 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_AM_SEND
  #define CYTHON_USE_AM_SEND 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 1
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 1
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
  #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #ifndef CYTHON_ASSUME_SAFE_SIZE
    #define CYTHON_ASSUME_SAFE_SIZE 1
  #endif
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PYPY_VERSION_NUM >= 0x07030C00)
  #endif
  #undef CYTHON_USE_AM_SEND
  #define CYTHON_USE_AM_SEND 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC (PYPY_VERSION_NUM >= 0x07031100)
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(CYTHON_LIMITED_API)
  #ifdef Py_LIMITED_API
    #undef __PYX_LIMITED_VERSION_HEX
    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API
  #endif
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_ASSUME_SAFE_SIZE
  #define CYTHON_ASSUME_SAFE_SIZE 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL (__PYX_LIMITED_VERSION_HEX >= 0x030C0000)
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #endif
  #ifndef CYTHON_USE_AM_SEND
    #define CYTHON_USE_AM_SEND (__PYX_LIMITED_VERSION_HEX >= 0x030A0000)
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #ifdef Py_GIL_DISABLED
    #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 1
  #else
    #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #endif
  #if PY_VERSION_HEX < 0x030A0000
    #undef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #elif !defined(CYTHON_USE_TYPE_SLOTS)
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLIST_INTERNALS)
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #elif !defined(CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS)
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_ASSUME_SAFE_SIZE
    #define CYTHON_ASSUME_SAFE_SIZE 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL 0
  #elif !defined(CYTHON_FAST_GIL)
    #define CYTHON_FAST_GIL (PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #ifndef CYTHON_USE_SYS_MONITORING
    #define CYTHON_USE_SYS_MONITORING (PY_VERSION_HEX >= 0x030d00B1)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #ifndef CYTHON_USE_AM_SEND
    #define CYTHON_USE_AM_SEND 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5 && !CYTHON_USE_MODULE_STATE)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS (!CYTHON_COMPILING_IN_CPYTHON_FREETHREADING)
  #endif
#endif
#ifndef CYTHON_FAST_PYCCALL
#define CYTHON_FAST_PYCCALL  CYTHON_FAST_PYCALL
#endif
#ifndef CYTHON_VECTORCALL
#if CYTHON_COMPILING_IN_LIMITED_API
#define CYTHON_VECTORCALL  (__PYX_LIMITED_VERSION_HEX >= 0x030C0000)
#else
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_USE_CPP_STD_MOVE
  #if defined(__cplusplus) && (\
    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))
    #define CYTHON_USE_CPP_STD_MOVE 1
  #else
    #define CYTHON_USE_CPP_STD_MOVE 0
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifndef Py_UNREACHABLE
  #define Py_UNREACHABLE()  assert(0); abort()
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

/* CppInitCode */
#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(const U& other) const { return *ptr == other; }
    template<typename U> bool operator !=(const U& other) const { return *ptr != other; }
    template<typename U> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }
    template<typename U> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }
  private:
    T *ptr;
};

/* PythonCompatibility */
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#define __Pyx_BUILTIN_MODULE_NAME "builtins"
#define __Pyx_DefaultClassType PyType_Type
#if CYTHON_COMPILING_IN_LIMITED_API
    #ifndef CO_OPTIMIZED
    static int CO_OPTIMIZED;
    #endif
    #ifndef CO_NEWLOCALS
    static int CO_NEWLOCALS;
    #endif
    #ifndef CO_VARARGS
    static int CO_VARARGS;
    #endif
    #ifndef CO_VARKEYWORDS
    static int CO_VARKEYWORDS;
    #endif
    #ifndef CO_ASYNC_GENERATOR
    static int CO_ASYNC_GENERATOR;
    #endif
    #ifndef CO_GENERATOR
    static int CO_GENERATOR;
    #endif
    #ifndef CO_COROUTINE
    static int CO_COROUTINE;
    #endif
#else
    #ifndef CO_COROUTINE
      #define CO_COROUTINE 0x80
    #endif
    #ifndef CO_ASYNC_GENERATOR
      #define CO_ASYNC_GENERATOR 0x200
    #endif
#endif
static int __Pyx_init_co_variables(void);
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#ifndef METH_FASTCALL
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #if PY_VERSION_HEX >= 0x030d00A4
  #  define __Pyx_PyCFunctionFast PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords
  #else
  #  define __Pyx_PyCFunctionFast _PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
  #endif
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_VERSION_HEX >= 0x030900B1
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)
#else
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)
#endif
#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)
#elif !CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)
static CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {
    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;
}
#endif
static CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void (*cfunc)(void)) {
#if CYTHON_COMPILING_IN_LIMITED_API
    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
#else
    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
#endif
}
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)
#if __PYX_LIMITED_VERSION_HEX < 0x03090000
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#elif CYTHON_COMPILING_IN_GRAAL
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) _PyFrame_SetLineNumber((frame), (lineno))
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#endif
#if CYTHON_USE_MODULE_STATE
static CYTHON_INLINE void *__Pyx__PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#define __Pyx_PyModule_GetState(o) (__pyx_mstatetype *)__Pyx__PyModule_GetState(o)
#else
#define __Pyx_PyModule_GetState(op) ((void)op,__pyx_mstate_global)
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE((PyObject *) obj), name, func_ctype)
#define __Pyx_PyObject_TryGetSlot(obj, name, func_ctype) __Pyx_PyType_TryGetSlot(Py_TYPE(obj), name, func_ctype)
#define __Pyx_PyObject_GetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_GetSubSlot(Py_TYPE(obj), sub, name, func_ctype)
#define __Pyx_PyObject_TryGetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_TryGetSubSlot(Py_TYPE(obj), sub, name, func_ctype)
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
  #define __Pyx_PyType_TryGetSlot(type, name, func_ctype) __Pyx_PyType_GetSlot(type, name, func_ctype)
  #define __Pyx_PyType_GetSubSlot(type, sub, name, func_ctype) (((type)->sub) ? ((type)->sub->name) : NULL)
  #define __Pyx_PyType_TryGetSubSlot(type, sub, name, func_ctype) __Pyx_PyType_GetSubSlot(type, sub, name, func_ctype)
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
  #define __Pyx_PyType_TryGetSlot(type, name, func_ctype)\
    ((__PYX_LIMITED_VERSION_HEX >= 0x030A0000 ||\
     (PyType_GetFlags(type) & Py_TPFLAGS_HEAPTYPE) || __Pyx_get_runtime_version() >= 0x030A0000) ?\
     __Pyx_PyType_GetSlot(type, name, func_ctype) : NULL)
  #define __Pyx_PyType_GetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_GetSlot(obj, name, func_ctype)
  #define __Pyx_PyType_TryGetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_TryGetSlot(obj, name, func_ctype)
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
#define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif !CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
#endif
#define __Pyx_PyObject_GetIterNextFunc(iterator)  __Pyx_PyObject_GetSlot(iterator, tp_iternext, iternextfunc)
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE((PyObject*)obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#else
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains)
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS || !CYTHON_ASSUME_SAFE_MACROS
  #if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
    #define __Pyx_PyList_GetItemRef(o, i) PyList_GetItemRef(o, i)
  #else
    #define __Pyx_PyList_GetItemRef(o, i) PySequence_GetItem(o, i)
  #endif
#else
  #define __Pyx_PyList_GetItemRef(o, i) __Pyx_NewRef(PyList_GET_ITEM(o, i))
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
#define __Pyx_PyDict_GetItemRef(dict, key, result) PyDict_GetItemRef(dict, key, result)
#elif CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
static CYTHON_INLINE int __Pyx_PyDict_GetItemRef(PyObject *dict, PyObject *key, PyObject **result) {
  *result = PyObject_GetItem(dict, key);
  if (*result == NULL) {
    if (PyErr_ExceptionMatches(PyExc_KeyError)) {
      PyErr_Clear();
      return 0;
    }
    return -1;
  }
  return 1;
}
#else
static CYTHON_INLINE int __Pyx_PyDict_GetItemRef(PyObject *dict, PyObject *key, PyObject **result) {
  *result = PyDict_GetItemWithError(dict, key);
  if (*result == NULL) {
    return PyErr_Occurred() ? -1 : 0;
  }
  Py_INCREF(*result);
  return 1;
}
#endif
#if defined(CYTHON_DEBUG_VISIT_CONST) && CYTHON_DEBUG_VISIT_CONST
  #define __Pyx_VISIT_CONST(obj)  Py_VISIT(obj)
#else
  #define __Pyx_VISIT_CONST(obj)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyTuple_GET_ITEM(o, i) PyTuple_GET_ITEM(o, i)
  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyList_GET_ITEM(o, i) PyList_GET_ITEM(o, i)
#else
  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)
  #define __Pyx_PyTuple_GET_ITEM(o, i) PyTuple_GetItem(o, i)
  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)
  #define __Pyx_PyList_GET_ITEM(o, i) PyList_GetItem(o, i)
#endif
#if CYTHON_ASSUME_SAFE_SIZE
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)
  #define __Pyx_PyUnicode_GET_LENGTH(o) PyUnicode_GET_LENGTH(o)
#else
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
  #define __Pyx_PyUnicode_GET_LENGTH(o) PyUnicode_GetLength(o)
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
#else
  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
      PyObject *module = PyImport_AddModule(name);
      Py_XINCREF(module);
      return module;
  }
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_InternFromString)
  #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
#endif
#define __Pyx_PyLong_FromHash_t PyLong_FromSsize_t
#define __Pyx_PyLong_AsHash_t   __Pyx_PyIndex_AsSsize_t
#if __PYX_LIMITED_VERSION_HEX >= 0x030A0000
    #define __Pyx_PySendResult PySendResult
#else
    typedef enum {
        PYGEN_RETURN = 0,
        PYGEN_ERROR = -1,
        PYGEN_NEXT = 1,
    } __Pyx_PySendResult;
#endif
#if CYTHON_COMPILING_IN_LIMITED_API || PY_VERSION_HEX < 0x030A00A3
  typedef __Pyx_PySendResult (*__Pyx_pyiter_sendfunc)(PyObject *iter, PyObject *value, PyObject **result);
#else
  #define __Pyx_pyiter_sendfunc sendfunc
#endif
#if !CYTHON_USE_AM_SEND
#define __PYX_HAS_PY_AM_SEND 0
#elif __PYX_LIMITED_VERSION_HEX >= 0x030A0000
#define __PYX_HAS_PY_AM_SEND 1
#else
#define __PYX_HAS_PY_AM_SEND 2  // our own backported implementation
#endif
#if __PYX_HAS_PY_AM_SEND < 2
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#else
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
        __Pyx_pyiter_sendfunc am_send;
    } __Pyx_PyAsyncMethodsStruct;
    #define __Pyx_SlotTpAsAsync(s) ((PyAsyncMethods*)(s))
#endif
#if CYTHON_USE_AM_SEND && PY_VERSION_HEX < 0x030A00F0
    #define __Pyx_TPFLAGS_HAVE_AM_SEND (1UL << 21)
#else
    #define __Pyx_TPFLAGS_HAVE_AM_SEND (0)
#endif
#if PY_VERSION_HEX >= 0x03090000
#define __Pyx_PyInterpreterState_Get() PyInterpreterState_Get()
#else
#define __Pyx_PyInterpreterState_Get() PyThreadState_Get()->interp
#endif
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030A0000
#ifdef __cplusplus
extern "C"
#endif
PyAPI_FUNC(void *) PyMem_Calloc(size_t nelem, size_t elsize);
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_init_co_variable(PyObject *inspect, const char* name, int *write_to) {
    int value;
    PyObject *py_value = PyObject_GetAttrString(inspect, name);
    if (!py_value) return 0;
    value = (int) PyLong_AsLong(py_value);
    Py_DECREF(py_value);
    *write_to = value;
    return value != -1 || !PyErr_Occurred();
}
static int __Pyx_init_co_variables(void) {
    PyObject *inspect;
    int result;
    inspect = PyImport_ImportModule("inspect");
    result =
#if !defined(CO_OPTIMIZED)
        __Pyx_init_co_variable(inspect, "CO_OPTIMIZED", &CO_OPTIMIZED) &&
#endif
#if !defined(CO_NEWLOCALS)
        __Pyx_init_co_variable(inspect, "CO_NEWLOCALS", &CO_NEWLOCALS) &&
#endif
#if !defined(CO_VARARGS)
        __Pyx_init_co_variable(inspect, "CO_VARARGS", &CO_VARARGS) &&
#endif
#if !defined(CO_VARKEYWORDS)
        __Pyx_init_co_variable(inspect, "CO_VARKEYWORDS", &CO_VARKEYWORDS) &&
#endif
#if !defined(CO_ASYNC_GENERATOR)
        __Pyx_init_co_variable(inspect, "CO_ASYNC_GENERATOR", &CO_ASYNC_GENERATOR) &&
#endif
#if !defined(CO_GENERATOR)
        __Pyx_init_co_variable(inspect, "CO_GENERATOR", &CO_GENERATOR) &&
#endif
#if !defined(CO_COROUTINE)
        __Pyx_init_co_variable(inspect, "CO_COROUTINE", &CO_COROUTINE) &&
#endif
        1;
    Py_DECREF(inspect);
    return result ? 0 : -1;
}
#else
static int __Pyx_init_co_variables(void) {
    return 0;  // It's a limited API-only feature
}
#endif

/* MathInitCode */
#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #ifndef _USE_MATH_DEFINES
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#ifndef CYTHON_CLINE_IN_TRACEBACK_RUNTIME
#define CYTHON_CLINE_IN_TRACEBACK_RUNTIME 0
#endif
#ifndef CYTHON_CLINE_IN_TRACEBACK
#define CYTHON_CLINE_IN_TRACEBACK CYTHON_CLINE_IN_TRACEBACK_RUNTIME
#endif
#if CYTHON_CLINE_IN_TRACEBACK
#define __PYX_MARK_ERR_POS(f_index, lineno)  { __pyx_filename = __pyx_f[f_index]; (void) __pyx_filename; __pyx_lineno = lineno; (void) __pyx_lineno; __pyx_clineno = __LINE__; (void) __pyx_clineno; }
#else
#define __PYX_MARK_ERR_POS(f_index, lineno)  { __pyx_filename = __pyx_f[f_index]; (void) __pyx_filename; __pyx_lineno = lineno; (void) __pyx_lineno; (void) __pyx_clineno; }
#endif
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#define __PYX_HAVE__pysfml261
#define __PYX_HAVE_API__pysfml261
/* Early includes */
#include <string.h>
#include <string_view>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <string>
#include <math.h>
#include "SFML/Audio/AlResource.hpp"
#include "SFML/Audio/SoundBuffer.hpp"
#include "SFML/Audio/SoundSource.hpp"
#include "SFML/Audio/Sound.hpp"
#include "SFML/Audio/SoundStream.hpp"
#include "SFML/Audio/Music.hpp"
#include "SFML/Window/VideoMode.hpp"
#include "SFML/Window/GlResource.hpp"
#include "SFML/System/NonCopyable.hpp"
#include "SFML/System/String.hpp"
#include "SFML/Window/Event.hpp"
#include "SFML/Window/Keyboard.hpp"
#include "SFML/Window/Mouse.hpp"
#include "SFML/Window/WindowBase.hpp"
#include "SFML/Window/Window.hpp"
#include "SFML/Graphics/Color.hpp"
#include "SFML/Graphics/Drawable.hpp"
#include "SFML/Graphics/Shader.hpp"
#include "SFML/Graphics/RenderStates.hpp"
#include "SFML/Graphics/View.hpp"
#include "SFML/Graphics/RenderTarget.hpp"
#include "SFML/Graphics/RenderWindow.hpp"
#include "SFML/Graphics/Image.hpp"
#include "SFML/Graphics/Texture.hpp"
#include "SFML/Graphics/Sprite.hpp"
#include "SFML/Graphics/Transformable.hpp"
#include "SFML/Graphics/Font.hpp"
#include "SFML/Graphics/Text.hpp"
#include "SFML/Graphics/Shape.hpp"
#include "SFML/Graphics/RectangleShape.hpp"
#include "SFML/Graphics/CircleShape.hpp"
#include "SFML/System/Time.hpp"
#include "SFML/System/Clock.hpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyByteArray_AsString(s) PyByteArray_AS_STRING(s)
#else
    #define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AsString(s))
    #define __Pyx_PyByteArray_AsString(s) PyByteArray_AsString(s)
#endif
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
static CYTHON_INLINE PyObject *__Pyx_NewRef(PyObject *obj) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030a0000 || defined(Py_NewRef)
    return Py_NewRef(obj);
#else
    Py_INCREF(obj);
    return obj;
#endif
}
static CYTHON_INLINE PyObject *__Pyx_XNewRef(PyObject *obj) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030a0000 || defined(Py_XNewRef)
    return Py_XNewRef(obj);
#else
    Py_XINCREF(obj);
    return obj;
#endif
}
static CYTHON_INLINE PyObject *__Pyx_Owned_Py_None(int b);
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Long(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyLong_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __Pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#define __Pyx_PyFloat_AS_DOUBLE(x) PyFloat_AS_DOUBLE(x)
#else
#define __Pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#define __Pyx_PyFloat_AS_DOUBLE(x) PyFloat_AsDouble(x)
#endif
#define __Pyx_PyFloat_AsFloat(x) ((float) __Pyx_PyFloat_AsDouble(x))
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#elif __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeASCII(c_str, size, NULL)
#else
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
/* PretendToInitialize */
#ifdef __cplusplus
#include <type_traits>
template <typename T>
static void __Pyx_pretend_to_initialize(T* ptr) {
#if __cplusplus > 201103L
    if ((std::is_trivially_default_constructible<T>::value))
#endif
        *ptr = T();
    (void)ptr;
}
#else
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }
#endif


#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * const __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char* const __pyx_f[] = {
  "pysfml261.pyx",
  "<stringsource>",
};
/* #### Code section: utility_code_proto_before_types ### */
/* Atomics.proto */
#include <pythread.h>
#ifndef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 1
#endif
#define __PYX_CYTHON_ATOMICS_ENABLED() CYTHON_ATOMICS
#define __PYX_GET_CYTHON_COMPILING_IN_CPYTHON_FREETHREADING() CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
#define __pyx_atomic_int_type int
#define __pyx_nonatomic_int_type int
#if CYTHON_ATOMICS && (defined(__STDC_VERSION__) &&\
                        (__STDC_VERSION__ >= 201112L) &&\
                        !defined(__STDC_NO_ATOMICS__))
    #include <stdatomic.h>
#elif CYTHON_ATOMICS && (defined(__cplusplus) && (\
                    (__cplusplus >= 201103L) ||\
                    (defined(_MSC_VER) && _MSC_VER >= 1700)))
    #include <atomic>
#endif
#if CYTHON_ATOMICS && (defined(__STDC_VERSION__) &&\
                        (__STDC_VERSION__ >= 201112L) &&\
                        !defined(__STDC_NO_ATOMICS__) &&\
                       ATOMIC_INT_LOCK_FREE == 2)
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type atomic_int
    #define __pyx_atomic_ptr_type atomic_uintptr_t
    #define __pyx_nonatomic_ptr_type uintptr_t
    #define __pyx_atomic_incr_relaxed(value) atomic_fetch_add_explicit(value, 1, memory_order_relaxed)
    #define __pyx_atomic_incr_acq_rel(value) atomic_fetch_add_explicit(value, 1, memory_order_acq_rel)
    #define __pyx_atomic_decr_acq_rel(value) atomic_fetch_sub_explicit(value, 1, memory_order_acq_rel)
    #define __pyx_atomic_sub(value, arg) atomic_fetch_sub(value, arg)
    #define __pyx_atomic_int_cmp_exchange(value, expected, desired) atomic_compare_exchange_strong(value, expected, desired)
    #define __pyx_atomic_load(value) atomic_load(value)
    #define __pyx_atomic_store(value, new_value) atomic_store(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) atomic_load_explicit(value, memory_order_relaxed)
    #define __pyx_atomic_pointer_load_acquire(value) atomic_load_explicit(value, memory_order_acquire)
    #define __pyx_atomic_pointer_exchange(value, new_value) atomic_exchange(value, (__pyx_nonatomic_ptr_type)new_value)
    #if defined(__PYX_DEBUG_ATOMICS) && defined(_MSC_VER)
        #pragma message ("Using standard C atomics")
    #elif defined(__PYX_DEBUG_ATOMICS)
        #warning "Using standard C atomics"
    #endif
#elif CYTHON_ATOMICS && (defined(__cplusplus) && (\
                    (__cplusplus >= 201103L) ||\
\
                    (defined(_MSC_VER) && _MSC_VER >= 1700)) &&\
                    ATOMIC_INT_LOCK_FREE == 2)
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type std::atomic_int
    #define __pyx_atomic_ptr_type std::atomic_uintptr_t
    #define __pyx_nonatomic_ptr_type uintptr_t
    #define __pyx_atomic_incr_relaxed(value) std::atomic_fetch_add_explicit(value, 1, std::memory_order_relaxed)
    #define __pyx_atomic_incr_acq_rel(value) std::atomic_fetch_add_explicit(value, 1, std::memory_order_acq_rel)
    #define __pyx_atomic_decr_acq_rel(value) std::atomic_fetch_sub_explicit(value, 1, std::memory_order_acq_rel)
    #define __pyx_atomic_sub(value, arg) std::atomic_fetch_sub(value, arg)
    #define __pyx_atomic_int_cmp_exchange(value, expected, desired) std::atomic_compare_exchange_strong(value, expected, desired)
    #define __pyx_atomic_load(value) std::atomic_load(value)
    #define __pyx_atomic_store(value, new_value) std::atomic_store(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) std::atomic_load_explicit(value, std::memory_order_relaxed)
    #define __pyx_atomic_pointer_load_acquire(value) std::atomic_load_explicit(value, std::memory_order_acquire)
    #define __pyx_atomic_pointer_exchange(value, new_value) std::atomic_exchange(value, (__pyx_nonatomic_ptr_type)new_value)
    #if defined(__PYX_DEBUG_ATOMICS) && defined(_MSC_VER)
        #pragma message ("Using standard C++ atomics")
    #elif defined(__PYX_DEBUG_ATOMICS)
        #warning "Using standard C++ atomics"
    #endif
#elif CYTHON_ATOMICS && (__GNUC__ >= 5 || (__GNUC__ == 4 &&\
                    (__GNUC_MINOR__ > 1 ||\
                    (__GNUC_MINOR__ == 1 && __GNUC_PATCHLEVEL__ >= 2))))
    #define __pyx_atomic_ptr_type void*
    #define __pyx_atomic_incr_relaxed(value) __sync_fetch_and_add(value, 1)
    #define __pyx_atomic_incr_acq_rel(value) __sync_fetch_and_add(value, 1)
    #define __pyx_atomic_decr_acq_rel(value) __sync_fetch_and_sub(value, 1)
    #define __pyx_atomic_sub(value, arg) __sync_fetch_and_sub(value, arg)
    static CYTHON_INLINE int __pyx_atomic_int_cmp_exchange(__pyx_atomic_int_type* value, __pyx_nonatomic_int_type* expected, __pyx_nonatomic_int_type desired) {
        __pyx_nonatomic_int_type old = __sync_val_compare_and_swap(value, *expected, desired);
        int result = old == *expected;
        *expected = old;
        return result;
    }
    #define __pyx_atomic_load(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_store(value, new_value) __sync_lock_test_and_set(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_pointer_load_acquire(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_pointer_exchange(value, new_value) __sync_lock_test_and_set(value, (__pyx_atomic_ptr_type)new_value)
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Using GNU atomics"
    #endif
#elif CYTHON_ATOMICS && defined(_MSC_VER)
    #include <intrin.h>
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type long
    #define __pyx_atomic_ptr_type void*
    #undef __pyx_nonatomic_int_type
    #define __pyx_nonatomic_int_type long
    #pragma intrinsic (_InterlockedExchangeAdd, _InterlockedExchange, _InterlockedCompareExchange, _InterlockedCompareExchangePointer, _InterlockedExchangePointer)
    #define __pyx_atomic_incr_relaxed(value) _InterlockedExchangeAdd(value, 1)
    #define __pyx_atomic_incr_acq_rel(value) _InterlockedExchangeAdd(value, 1)
    #define __pyx_atomic_decr_acq_rel(value) _InterlockedExchangeAdd(value, -1)
    #define __pyx_atomic_sub(value, arg) _InterlockedExchangeAdd(value, -arg)
    static CYTHON_INLINE int __pyx_atomic_int_cmp_exchange(__pyx_atomic_int_type* value, __pyx_nonatomic_int_type* expected, __pyx_nonatomic_int_type desired) {
        __pyx_nonatomic_int_type old = _InterlockedCompareExchange(value, desired, *expected);
        int result = old == *expected;
        *expected = old;
        return result;
    }
    #define __pyx_atomic_load(value) _InterlockedExchangeAdd(value, 0)
    #define __pyx_atomic_store(value, new_value) _InterlockedExchange(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) *(void * volatile *)value
    #define __pyx_atomic_pointer_load_acquire(value) _InterlockedCompareExchangePointer(value, 0, 0)
    #define __pyx_atomic_pointer_exchange(value, new_value) _InterlockedExchangePointer(value, (__pyx_atomic_ptr_type)new_value)
    #ifdef __PYX_DEBUG_ATOMICS
        #pragma message ("Using MSVC atomics")
    #endif
#else
    #undef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 0
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Not using atomics"
    #endif
#endif
#if CYTHON_ATOMICS
    #define __pyx_add_acquisition_count(memview)\
             __pyx_atomic_incr_relaxed(__pyx_get_slice_count_pointer(memview))
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_atomic_decr_acq_rel(__pyx_get_slice_count_pointer(memview))
#else
    #define __pyx_add_acquisition_count(memview)\
            __pyx_add_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_sub_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
#endif

/* CriticalSections.proto */
#if !CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
#define __Pyx_PyCriticalSection void*
#define __Pyx_PyCriticalSection2 void*
#define __Pyx_PyCriticalSection_Begin1(cs, arg) (void)cs
#define __Pyx_PyCriticalSection_Begin2(cs, arg1, arg2) (void)cs
#define __Pyx_PyCriticalSection_End1(cs)
#define __Pyx_PyCriticalSection_End2(cs)
#else
#define __Pyx_PyCriticalSection PyCriticalSection
#define __Pyx_PyCriticalSection2 PyCriticalSection2
#define __Pyx_PyCriticalSection_Begin1 PyCriticalSection_Begin
#define __Pyx_PyCriticalSection_Begin2 PyCriticalSection2_Begin
#define __Pyx_PyCriticalSection_End1 PyCriticalSection_End
#define __Pyx_PyCriticalSection_End2 PyCriticalSection2_End
#endif
#if PY_VERSION_HEX < 0x030d0000 || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_BEGIN_CRITICAL_SECTION(o) {
#define __Pyx_END_CRITICAL_SECTION() }
#else
#define __Pyx_BEGIN_CRITICAL_SECTION Py_BEGIN_CRITICAL_SECTION
#define __Pyx_END_CRITICAL_SECTION Py_END_CRITICAL_SECTION
#endif

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* #### Code section: numeric_typedefs ### */
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_obj_9pysfml261_MathPoint2f;
struct __pyx_obj_9pysfml261_MathVector2f;
struct __pyx_obj_9pysfml261_MathPoint3f;
struct __pyx_obj_9pysfml261_MathVector3f;
struct __pyx_obj_9pysfml261_sfSoundBuffer;
struct __pyx_obj_9pysfml261_sfSound;
struct __pyx_obj_9pysfml261_sfMusic;
struct __pyx_obj_9pysfml261_sfTime;
struct __pyx_obj_9pysfml261_sfClock;
struct __pyx_obj_9pysfml261_TimeCollector;
struct __pyx_obj_9pysfml261_TimedFloat;
struct __pyx_obj_9pysfml261_Animator;
struct __pyx_obj_9pysfml261_sfImage;
struct __pyx_obj_9pysfml261_sfVideoMode;
struct __pyx_obj_9pysfml261_sfColor;
struct __pyx_obj_9pysfml261_sfEvent;
struct __pyx_obj_9pysfml261_sfKeyboard;
struct __pyx_obj_9pysfml261_sfFloatRect;
struct __pyx_obj_9pysfml261_sfFont;
struct __pyx_obj_9pysfml261_sfString;
struct __pyx_obj_9pysfml261_sfText;
struct __pyx_obj_9pysfml261_sfTexture;
struct __pyx_obj_9pysfml261_sfSprite;
struct __pyx_obj_9pysfml261_TransformSfSprite;
struct __pyx_obj_9pysfml261_sfRectangleShape;
struct __pyx_obj_9pysfml261_sfCircleShape;
struct __pyx_obj_9pysfml261_sfView;
struct __pyx_obj_9pysfml261_sfShader;
struct __pyx_obj_9pysfml261_sfRenderStates;
struct __pyx_obj_9pysfml261_sfRenderWindow;
struct __pyx_obj_9pysfml261_sfMouse;
struct __pyx_obj_9pysfml261_Camera2D;

/* "window/style.pxd":1
 * cdef enum Style:             # <<<<<<<<<<<<<<
 * 	None_      = 0
 * 	Titlebar   = 1 << 0
*/
enum __pyx_t_6window_5style_Style {

  /* "window/style.pxd":8
 * 	Fullscreen = 1 << 3
 * 
 * 	Default = Titlebar | Resize | Close             # <<<<<<<<<<<<<<
*/
  __pyx_e_6window_5style_None_ = 0,
  __pyx_e_6window_5style_Titlebar = (1 << 0),
  __pyx_e_6window_5style_Resize = (1 << 1),
  __pyx_e_6window_5style_Close = (1 << 2),
  __pyx_e_6window_5style_Fullscreen = (1 << 3),
  __pyx_e_6window_5style_Default = ((__pyx_e_6window_5style_Titlebar | __pyx_e_6window_5style_Resize) | __pyx_e_6window_5style_Close)
};
struct __pyx_t_6system_6vector_8vector2u_Vector2u;
struct __pyx_t_6system_6vector_8vector2u_Vector2u {

  /* "system/vector/vector2u.pxd":1
 * cdef cppclass Vector2u:             # <<<<<<<<<<<<<<
 * 
 * 		unsigned int x
*/
  unsigned int x;
  unsigned int y;
};
struct __pyx_ctuple_double__and_double__and_double;
typedef struct __pyx_ctuple_double__and_double__and_double __pyx_ctuple_double__and_double__and_double;
struct __pyx_ctuple_double__and_double;
typedef struct __pyx_ctuple_double__and_double __pyx_ctuple_double__and_double;

/* "pysfml261.pyx":423
 * 		return volumeFactor
 * 
 * 	def get_position(self) -> tuple[float, float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector3f pos = self.sound.getPosition()
 * 		return (pos.x, pos.y, pos.z)
*/
struct __pyx_ctuple_double__and_double__and_double {
  double f0;
  double f1;
  double f2;
};

/* "pysfml261.pyx":934
 * 		return self.rect.intersects(rect.rect[0])
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		return (pos.x, pos.y)
*/
struct __pyx_ctuple_double__and_double {
  double f0;
  double f1;
};

/* "pysfml261.pyx":58
 * 
 * 
 * cdef class MathPoint2f:             # <<<<<<<<<<<<<<
 * 
 * 	cdef float x
*/
struct __pyx_obj_9pysfml261_MathPoint2f {
  PyObject_HEAD
  float x;
  float y;
};


/* "pysfml261.pyx":92
 * 
 * 
 * cdef class MathVector2f:             # <<<<<<<<<<<<<<
 * 
 * 	cdef float x
*/
struct __pyx_obj_9pysfml261_MathVector2f {
  PyObject_HEAD
  float x;
  float y;
};


/* "pysfml261.pyx":191
 * 
 * 
 * cdef class MathPoint3f:             # <<<<<<<<<<<<<<
 * 
 * 	cdef float x
*/
struct __pyx_obj_9pysfml261_MathPoint3f {
  PyObject_HEAD
  float x;
  float y;
  float z;
};


/* "pysfml261.pyx":236
 * 
 * 
 * cdef class MathVector3f:             # <<<<<<<<<<<<<<
 * 
 * 	cdef float x
*/
struct __pyx_obj_9pysfml261_MathVector3f {
  PyObject_HEAD
  float x;
  float y;
  float z;
};


/* "pysfml261.pyx":358
 * 
 * 
 * cdef class sfSoundBuffer:             # <<<<<<<<<<<<<<
 * 
 * 	cdef SoundBuffer* buffer
*/
struct __pyx_obj_9pysfml261_sfSoundBuffer {
  PyObject_HEAD
  sf::SoundBuffer *buffer;
};


/* "pysfml261.pyx":376
 * 
 * 
 * cdef class sfSound:             # <<<<<<<<<<<<<<
 * 
 * 	cdef sf_Sound.Sound* sound
*/
struct __pyx_obj_9pysfml261_sfSound {
  PyObject_HEAD
  sf::Sound *sound;
};


/* "pysfml261.pyx":464
 * 
 * 
 * cdef class sfMusic:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Music* music
*/
struct __pyx_obj_9pysfml261_sfMusic {
  PyObject_HEAD
  sf::Music *music;
};


/* "pysfml261.pyx":553
 * 
 * 
 * cdef class sfTime:             # <<<<<<<<<<<<<<
 * 
 * 	cdef sf_Time.Time* time
*/
struct __pyx_obj_9pysfml261_sfTime {
  PyObject_HEAD
  sf::Time *time;
};


/* "pysfml261.pyx":573
 * 
 * 
 * cdef class sfClock:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Clock* clock
*/
struct __pyx_obj_9pysfml261_sfClock {
  PyObject_HEAD
  sf::Clock *clock;
};


/* "pysfml261.pyx":602
 * 
 * 
 * cdef class TimeCollector:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Clock* clock
*/
struct __pyx_obj_9pysfml261_TimeCollector {
  PyObject_HEAD
  sf::Clock *clock;
  float _TimeCollector__buffer;
};


/* "pysfml261.pyx":635
 * 
 * 
 * cdef class TimedFloat:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Clock* clock
*/
struct __pyx_obj_9pysfml261_TimedFloat {
  PyObject_HEAD
  sf::Clock *clock;
  float _TimedFloat__value;
};


/* "pysfml261.pyx":658
 * 
 * 
 * cdef class Animator:             # <<<<<<<<<<<<<<
 * 
 * 	cdef int length
*/
struct __pyx_obj_9pysfml261_Animator {
  PyObject_HEAD
  int length;
  float speed;
  float _Animator__buffer;
  int _Animator__animeEnded;
  int _Animator__animeStarted;
};


/* "pysfml261.pyx":720
 * 
 * 
 * cdef class sfImage:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Image* image
*/
struct __pyx_obj_9pysfml261_sfImage {
  PyObject_HEAD
  sf::Image *image;
};


/* "pysfml261.pyx":738
 * 
 * 
 * cdef class sfVideoMode:             # <<<<<<<<<<<<<<
 * 
 * 	cdef VideoMode* __mode
*/
struct __pyx_obj_9pysfml261_sfVideoMode {
  PyObject_HEAD
  sf::VideoMode *_sfVideoMode__mode;
};


/* "pysfml261.pyx":784
 * 
 * 
 * cdef class sfColor:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Color* color
*/
struct __pyx_obj_9pysfml261_sfColor {
  PyObject_HEAD
  sf::Color *color;
};


/* "pysfml261.pyx":831
 * 
 * 
 * cdef class sfEvent:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Event* event
*/
struct __pyx_obj_9pysfml261_sfEvent {
  PyObject_HEAD
  sf::Event *event;
};


/* "pysfml261.pyx":854
 * 
 * 
 * cdef class sfKeyboard:             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
struct __pyx_obj_9pysfml261_sfKeyboard {
  PyObject_HEAD
};


/* "pysfml261.pyx":911
 * 
 * 
 * cdef class sfFloatRect:             # <<<<<<<<<<<<<<
 * 
 * 	cdef FloatRect* rect
*/
struct __pyx_obj_9pysfml261_sfFloatRect {
  PyObject_HEAD
  sf::FloatRect *rect;
};


/* "pysfml261.pyx":998
 * 
 * 
 * cdef class sfFont:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Font* font
*/
struct __pyx_obj_9pysfml261_sfFont {
  PyObject_HEAD
  sf::Font *font;
};


/* "pysfml261.pyx":1022
 * 
 * 
 * cdef class sfString:             # <<<<<<<<<<<<<<
 * 
 * 	CACHE_SIZE = 128
*/
struct __pyx_obj_9pysfml261_sfString {
  PyObject_HEAD
  sf::String *txt;
};


/* "pysfml261.pyx":1070
 * 
 * 
 * cdef class sfText:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Text* text
*/
struct __pyx_obj_9pysfml261_sfText {
  PyObject_HEAD
  sf::Text *text;
};


/* "pysfml261.pyx":1162
 * 
 * 
 * cdef class sfTexture:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Texture* texture
*/
struct __pyx_obj_9pysfml261_sfTexture {
  PyObject_HEAD
  sf::Texture *texture;
};


/* "pysfml261.pyx":1263
 * 
 * 
 * cdef class sfSprite:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Sprite* sprite
*/
struct __pyx_obj_9pysfml261_sfSprite {
  PyObject_HEAD
  sf::Sprite *sprite;
};


/* "pysfml261.pyx":1488
 * 
 * 
 * cdef class TransformSfSprite:             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
struct __pyx_obj_9pysfml261_TransformSfSprite {
  PyObject_HEAD
};


/* "pysfml261.pyx":1797
 * 
 * 
 * cdef class sfRectangleShape:             # <<<<<<<<<<<<<<
 * 
 * 	cdef RectangleShape* shape
*/
struct __pyx_obj_9pysfml261_sfRectangleShape {
  PyObject_HEAD
  sf::RectangleShape *shape;
};


/* "pysfml261.pyx":1911
 * 
 * 
 * cdef class sfCircleShape:             # <<<<<<<<<<<<<<
 * 
 * 	cdef CircleShape* shape
*/
struct __pyx_obj_9pysfml261_sfCircleShape {
  PyObject_HEAD
  sf::CircleShape *shape;
};


/* "pysfml261.pyx":2013
 * 
 * 
 * cdef class sfView:             # <<<<<<<<<<<<<<
 * 
 * 	cdef View* view
*/
struct __pyx_obj_9pysfml261_sfView {
  PyObject_HEAD
  sf::View *view;
};


/* "pysfml261.pyx":2094
 * 
 * 
 * cdef class sfShader:             # <<<<<<<<<<<<<<
 * 
 * 	cdef Shader* shader
*/
struct __pyx_obj_9pysfml261_sfShader {
  PyObject_HEAD
  sf::Shader *shader;
};


/* "pysfml261.pyx":2126
 * 
 * 
 * cdef class sfRenderStates:             # <<<<<<<<<<<<<<
 * 
 * 	cdef RenderStates* states
*/
struct __pyx_obj_9pysfml261_sfRenderStates {
  PyObject_HEAD
  sf::RenderStates *states;
};


/* "pysfml261.pyx":2138
 * 
 * 
 * cdef class sfRenderWindow:             # <<<<<<<<<<<<<<
 * 
 * 	cdef RenderWindow* render_window
*/
struct __pyx_obj_9pysfml261_sfRenderWindow {
  PyObject_HEAD
  sf::RenderWindow *render_window;
};


/* "pysfml261.pyx":2268
 * 
 * 
 * cdef class sfMouse:             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
struct __pyx_obj_9pysfml261_sfMouse {
  PyObject_HEAD
};


/* "pysfml261.pyx":2308
 * 
 * 
 * cdef class Camera2D:             # <<<<<<<<<<<<<<
 * 
 * 	cdef float left
*/
struct __pyx_obj_9pysfml261_Camera2D {
  PyObject_HEAD
  float left;
  float top;
  float distance_x;
  float distance_y;
};

/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
#endif
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_ArgRef_VARARGS(args, i) __Pyx_PySequence_ITEM(args, i)
#elif CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_ArgRef_VARARGS(args, i) __Pyx_NewRef(__Pyx_PyTuple_GET_ITEM(args, i))
#else
    #define __Pyx_ArgRef_VARARGS(args, i) __Pyx_XNewRef(PyTuple_GetItem(args, i))
#endif
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_ArgRef_FASTCALL(args, i) __Pyx_NewRef(args[i])
    #define __Pyx_NumKwargs_FASTCALL(kwds) __Pyx_PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues);
  #else
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
  #endif
#else
    #define __Pyx_ArgRef_FASTCALL __Pyx_ArgRef_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
#endif
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#if CYTHON_METH_FASTCALL || (CYTHON_COMPILING_IN_CPYTHON && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(args + start, stop - start)
#else
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static CYTHON_INLINE int __Pyx_ParseKeywords(
    PyObject *kwds, PyObject *const *kwvalues, PyObject ** const argnames[],
    PyObject *kwds2, PyObject *values[],
    Py_ssize_t num_pos_args, Py_ssize_t num_kwargs,
    const char* function_name,
    int ignore_unknown_kwargs
);

/* CallCFunction.proto */
#define __Pyx_CallCFunction(cfunc, self, args)\
    ((PyCFunction)(void(*)(void))(cfunc)->func)(self, args)
#define __Pyx_CallCFunctionWithKeywords(cfunc, self, args, kwargs)\
    ((PyCFunctionWithKeywords)(void(*)(void))(cfunc)->func)(self, args, kwargs)
#define __Pyx_CallCFunctionFast(cfunc, self, args, nargs)\
    ((__Pyx_PyCFunctionFast)(void(*)(void))(PyCFunction)(cfunc)->func)(self, args, nargs)
#define __Pyx_CallCFunctionFastWithKeywords(cfunc, self, args, nargs, kwnames)\
    ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))(PyCFunction)(cfunc)->func)(self, args, nargs, kwnames)

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject *const *args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject * const*args, size_t nargs, PyObject *kwargs);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && CYTHON_ATOMICS
    __pyx_atomic_int_type initialized;
#endif
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
static CYTHON_INLINE int __Pyx_CachedCFunction_GetAndSetInitializing(__Pyx_CachedCFunction *cfunc) {
#if !CYTHON_ATOMICS
    return 1;
#else
    __pyx_nonatomic_int_type expected = 0;
    if (__pyx_atomic_int_cmp_exchange(&cfunc->initialized, &expected, 1)) {
        return 0;
    }
    return expected;
#endif
}
static CYTHON_INLINE void __Pyx_CachedCFunction_SetFinishedInitializing(__Pyx_CachedCFunction *cfunc) {
#if CYTHON_ATOMICS
    __pyx_atomic_store(&cfunc->initialized, 2);
#endif
}
#else
#define __Pyx_CachedCFunction_GetAndSetInitializing(cfunc) 2
#define __Pyx_CachedCFunction_SetFinishedInitializing(cfunc)
#endif

/* CallUnboundCMethod2.proto */
CYTHON_UNUSED
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* decode_c_string_utf16.proto */
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 0;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16LE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = -1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16BE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}

/* decode_c_bytes.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* decode_bytes.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_bytes(
         PyObject* string, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    char* as_c_string;
    Py_ssize_t size;
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE
    as_c_string = PyBytes_AS_STRING(string);
    size = PyBytes_GET_SIZE(string);
#else
    if (PyBytes_AsStringAndSize(string, &as_c_string, &size) < 0) {
        return NULL;
    }
#endif
    return __Pyx_decode_c_bytes(
        as_c_string, size,
        start, stop, encoding, errors, decode_func);
}

/* PyObject_Unicode.proto */
#define __Pyx_PyObject_Unicode(obj)\
    (likely(PyUnicode_CheckExact(obj)) ? __Pyx_NewRef(obj) : PyObject_Str(obj))

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely(__Pyx_IS_TYPE(obj, type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* RejectKeywords.proto */
static void __Pyx_RejectKeywords(const char* function_name, PyObject *kwds);

/* PyObjectFastCallMethod.proto */
#if CYTHON_VECTORCALL && PY_VERSION_HEX >= 0x03090000
#define __Pyx_PyObject_FastCallMethod(name, args, nargsf) PyObject_VectorcallMethod(name, args, nargsf, NULL)
#else
static PyObject *__Pyx_PyObject_FastCallMethod(PyObject *name, PyObject *const *args, size_t nargsf);
#endif

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* PyLongCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_EqObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* MoveIfSupported.proto */
#if CYTHON_USE_CPP_STD_MOVE
  #include <utility>
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) std::move(x)
#else
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) x
#endif

/* PyUnicode_Unicode.proto */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj);

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject** values, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* RaiseUnexpectedTypeError.proto */
static int __Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_mstate_global->__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* decode_c_string.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* DictGetItem.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* SliceTupleAndList.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_GetSlice(PyObject* src, Py_ssize_t start, Py_ssize_t stop);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_GetSlice(PyObject* src, Py_ssize_t start, Py_ssize_t stop);
#else
#define __Pyx_PyList_GetSlice(seq, start, stop)   PySequence_GetSlice(seq, start, stop)
#define __Pyx_PyTuple_GetSlice(seq, start, stop)  PySequence_GetSlice(seq, start, stop)
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* HasAttr.proto */
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
#define __Pyx_HasAttr(o, n)  PyObject_HasAttrWithError(o, n)
#else
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* FixUpExtensionType.proto */
static CYTHON_INLINE int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* LimitedApiGetTypeDict.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_GetTypeDict(PyTypeObject *tp);
#endif

/* DelItemOnTypeDict.proto */
static int __Pyx__DelItemOnTypeDict(PyTypeObject *tp, PyObject *k);
#define __Pyx_DelItemOnTypeDict(tp, k) __Pyx__DelItemOnTypeDict((PyTypeObject*)tp, k)

/* SetItemOnTypeDict.proto */
static int __Pyx__SetItemOnTypeDict(PyTypeObject *tp, PyObject *k, PyObject *v);
#define __Pyx_SetItemOnTypeDict(tp, k, v) __Pyx__SetItemOnTypeDict((PyTypeObject*)tp, k, v)

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* dict_setdefault.proto */
static CYTHON_INLINE PyObject *__Pyx_PyDict_SetDefault(PyObject *d, PyObject *key, PyObject *default_value, int is_safe_type);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);

/* CallTypeTraverse.proto */
#if !CYTHON_USE_TYPE_SPECS || (!CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x03090000)
#define __Pyx_call_type_traverse(o, always_call, visit, arg) 0
#else
static int __Pyx_call_type_traverse(PyObject *o, int always_call, visitproc visit, void *arg);
#endif

/* PyMethodNew.proto */
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ);

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL && (CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL)
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject_HEAD
    PyObject *func;
#elif PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL ||\
        (CYTHON_COMPILING_IN_LIMITED_API && CYTHON_METH_FASTCALL)
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_classobj;
#endif
    PyObject *defaults;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#undef __Pyx_CyOrPyCFunction_Check
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_mstate_global->__pyx_CyFunctionType)
#define __Pyx_CyOrPyCFunction_Check(obj)  __Pyx_TypeCheck2(obj, __pyx_mstate_global->__pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_mstate_global->__pyx_CyFunctionType)
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void (*cfunc)(void));
#undef __Pyx_IsSameCFunction
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCyOrCFunction(func, cfunc)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE PyObject *__Pyx_CyFunction_InitDefaults(PyObject *func,
                                                         PyTypeObject *defaults_type);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* CLineInTraceback.proto */
#if CYTHON_CLINE_IN_TRACEBACK && CYTHON_CLINE_IN_TRACEBACK_RUNTIME
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#else
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#endif

/* CodeObjectCache.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject __Pyx_CachedCodeObjectType;
#else
typedef PyCodeObject __Pyx_CachedCodeObjectType;
#endif
typedef struct {
    __Pyx_CachedCodeObjectType* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_int_type accessor_count;
  #endif
};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static __Pyx_CachedCodeObjectType *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, __Pyx_CachedCodeObjectType* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyLong_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned int __Pyx_PyLong_As_unsigned_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyLong_As_long(PyObject *);

/* PyObjectVectorCallKwBuilder.proto */
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n);
#if CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03090000
#define __Pyx_Object_Vectorcall_CallFromBuilder PyObject_Vectorcall
#else
#define __Pyx_Object_Vectorcall_CallFromBuilder _PyObject_Vectorcall
#endif
#define __Pyx_MakeVectorcallBuilderKwds(n) PyTuple_New(n)
static int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n);
static int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n);
#else
#define __Pyx_Object_Vectorcall_CallFromBuilder __Pyx_PyObject_FastCallDict
#define __Pyx_MakeVectorcallBuilderKwds(n) __Pyx_PyDict_NewPresized(n)
#define __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n) PyDict_SetItem(builder, key, value)
#define __Pyx_VectorcallBuilder_AddArgStr(key, value, builder, args, n) PyDict_SetItemString(builder, key, value)
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum__sf_3a__3a_SoundSource_3a__3a_Status(enum sf::SoundSource::Status value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_unsigned_int(unsigned int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum__sf_3a__3a_Event_3a__3a_EventType(enum sf::Event::EventType value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum__sf_3a__3a_Keyboard_3a__3a_Key(enum sf::Keyboard::Key value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum__sf_3a__3a_Mouse_3a__3a_Button(enum sf::Mouse::Button value);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
#define __Pyx_PyType_GetFullyQualifiedName PyType_GetFullyQualifiedName
#else
static __Pyx_TypeName __Pyx_PyType_GetFullyQualifiedName(PyTypeObject* tp);
#endif
#else  // !LIMITED_API
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetFullyQualifiedName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2) {
    return PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2);
}
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)
#ifdef PyExceptionInstance_Check
  #define __Pyx_PyBaseException_Check(obj) PyExceptionInstance_Check(obj)
#else
  #define __Pyx_PyBaseException_Check(obj) __Pyx_TypeCheck(obj, PyExc_BaseException)
#endif

/* GetRuntimeVersion.proto */
static unsigned long __Pyx_get_runtime_version(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);

/* MultiPhaseInitModuleState.proto */
#if CYTHON_PEP489_MULTI_PHASE_INIT && CYTHON_USE_MODULE_STATE
static PyObject *__Pyx_State_FindModule(void*);
static int __Pyx_State_AddModule(PyObject* module, void*);
static int __Pyx_State_RemoveModule(void*);
#elif CYTHON_USE_MODULE_STATE
#define __Pyx_State_FindModule PyState_FindModule
#define __Pyx_State_AddModule PyState_AddModule
#define __Pyx_State_RemoveModule PyState_RemoveModule
#endif

/* #### Code section: module_declarations ### */
/* CythonABIVersion.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
    #if CYTHON_METH_FASTCALL
        #define __PYX_FASTCALL_ABI_SUFFIX  "_fastcall"
    #else
        #define __PYX_FASTCALL_ABI_SUFFIX
    #endif
    #define __PYX_LIMITED_ABI_SUFFIX "limited" __PYX_FASTCALL_ABI_SUFFIX __PYX_AM_SEND_ABI_SUFFIX
#else
    #define __PYX_LIMITED_ABI_SUFFIX
#endif
#if __PYX_HAS_PY_AM_SEND == 1
    #define __PYX_AM_SEND_ABI_SUFFIX
#elif __PYX_HAS_PY_AM_SEND == 2
    #define __PYX_AM_SEND_ABI_SUFFIX "amsendbackport"
#else
    #define __PYX_AM_SEND_ABI_SUFFIX "noamsend"
#endif
#ifndef __PYX_MONITORING_ABI_SUFFIX
    #define __PYX_MONITORING_ABI_SUFFIX
#endif
#if CYTHON_USE_TP_FINALIZE
    #define __PYX_TP_FINALIZE_ABI_SUFFIX
#else
    #define __PYX_TP_FINALIZE_ABI_SUFFIX "nofinalize"
#endif
#if CYTHON_USE_FREELISTS || !defined(__Pyx_AsyncGen_USED)
    #define __PYX_FREELISTS_ABI_SUFFIX
#else
    #define __PYX_FREELISTS_ABI_SUFFIX "nofreelists"
#endif
#define CYTHON_ABI  __PYX_ABI_VERSION __PYX_LIMITED_ABI_SUFFIX __PYX_MONITORING_ABI_SUFFIX __PYX_TP_FINALIZE_ABI_SUFFIX __PYX_FREELISTS_ABI_SUFFIX __PYX_AM_SEND_ABI_SUFFIX
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."


/* Module declarations from "libc.string" */

/* Module declarations from "libcpp.string_view" */

/* Module declarations from "libcpp.string" */

/* Module declarations from "libc.math" */

/* Module declarations from "cpython.version" */

/* Module declarations from "audio.al_resource.al_resource" */

/* Module declarations from "audio.sound_buffer.sound_buffer" */

/* Module declarations from "audio.sound_source.sound_source" */

/* Module declarations from "audio.sound_source.status" */

/* Module declarations from "audio.sound.sound" */

/* Module declarations from "audio.sound_stream.sound_stream" */

/* Module declarations from "audio.music.music" */

/* Module declarations from "window.video_mode.video_mode" */

/* Module declarations from "window.style" */

/* Module declarations from "window.gl_resource.gl_resource" */

/* Module declarations from "system.non_copyable.non_copyable" */

/* Module declarations from "system.string.string" */

/* Module declarations from "system.vector.vector2u" */

/* Module declarations from "window.event.event_type" */

/* Module declarations from "window.keyboard.keyboard" */

/* Module declarations from "window.event.key_event" */

/* Module declarations from "window.event.size_event" */

/* Module declarations from "window.event.text_event" */

/* Module declarations from "window.event.mouse_move_event" */

/* Module declarations from "window.mouse.button" */

/* Module declarations from "window.event.mouse_button_event" */

/* Module declarations from "window.event.mouse_wheel_event" */

/* Module declarations from "window.mouse.wheel" */

/* Module declarations from "window.event.mouse_wheel_scroll_event" */

/* Module declarations from "window.event.event" */

/* Module declarations from "window.window_base.window_base" */

/* Module declarations from "window.window.window" */

/* Module declarations from "graphics.color.color" */

/* Module declarations from "graphics.drawable.drawable" */

/* Module declarations from "graphics.shader.type" */

/* Module declarations from "graphics.shader.shader" */

/* Module declarations from "graphics.render_states.render_states" */

/* Module declarations from "graphics.view.view" */

/* Module declarations from "graphics.render_target.render_target" */

/* Module declarations from "graphics.render_window.render_window" */

/* Module declarations from "graphics.image.image" */

/* Module declarations from "graphics.texture.texture" */

/* Module declarations from "graphics.transformable.transformable" */

/* Module declarations from "graphics.sprite.sprite" */

/* Module declarations from "graphics.font.font" */

/* Module declarations from "graphics.text.text" */

/* Module declarations from "graphics.shape.shape" */

/* Module declarations from "graphics.rectangle_shape.rectangle_shape" */

/* Module declarations from "graphics.circle_shape.circle_shape" */

/* Module declarations from "window.mouse.window_base" */

/* Module declarations from "window.mouse.mouse" */

/* Module declarations from "system.time.time" */

/* Module declarations from "system.clock.clock" */

/* Module declarations from "pysfml261" */
static PyObject *__pyx_f_9pysfml261__text(PyObject *); /*proto*/
static void __pyx_f_9pysfml261_resizeSprite(sf::Sprite *, float, float); /*proto*/
static void __pyx_f_9pysfml261_resizeSpriteKeepWidth(sf::Sprite *, float); /*proto*/
static void __pyx_f_9pysfml261_resizeSpriteKeepHeight(sf::Sprite *, float); /*proto*/
static void __pyx_f_9pysfml261_scaleSpriteKeepLeftTop(sf::Sprite *, float, float); /*proto*/
static void __pyx_f_9pysfml261_scaleSpriteKeepCenter(sf::Sprite *, float, float, int); /*proto*/
static PyObject *__pyx_f_9pysfml261___pyx_unpickle_sfKeyboard__set_state(struct __pyx_obj_9pysfml261_sfKeyboard *, PyObject *); /*proto*/
static PyObject *__pyx_f_9pysfml261___pyx_unpickle_TransformSfSprite__set_state(struct __pyx_obj_9pysfml261_TransformSfSprite *, PyObject *); /*proto*/
static PyObject *__pyx_f_9pysfml261___pyx_unpickle_sfMouse__set_state(struct __pyx_obj_9pysfml261_sfMouse *, PyObject *); /*proto*/
static std::string __pyx_convert_string_from_py_6libcpp_6string_std__in_string(PyObject *); /*proto*/
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "pysfml261"
extern int __pyx_module_is_main_pysfml261;
int __pyx_module_is_main_pysfml261 = 0;

/* Implementation of "pysfml261" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_RuntimeError;
/* #### Code section: string_decls ### */
static const char __pyx_k_[] = "!";
static const char __pyx_k_1[] = "\200\021\330\027\030\330\002\017\210|\2301";
static const char __pyx_k_A[] = "\200\021\330\037 \330\002\t\210\030\220\021\220*\230A";
static const char __pyx_k_Q[] = "\200\001\330\004\n\210+\220Q";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_b[] = "b";
static const char __pyx_k_g[] = "g";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_q[] = "\200\001\330\004(\250\001\250\026\250q";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_v[] = "v";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_4r[] = "\320\000!\240\021\330\001\021\220\027\230\001\330\001\010\210\t\220\022\2204\220r\230\021";
static const char __pyx_k_O1[] = "\200\021\330\033\034\330\002$\240O\2601\330\002\n\210'\220\030\230\027\240\t\250\027\260\001";
static const char __pyx_k__2[] = "";
static const char __pyx_k__4[] = ".";
static const char __pyx_k__5[] = "?";
static const char __pyx_k__6[] = "\200\021\330\025\026\330\002\n\210(\220&\230\001";
static const char __pyx_k__7[] = "\200\021\330!\"\330\002\n\210.\230\001";
static const char __pyx_k__8[] = "\200\021\330&'\330\002\021\320\021!\240\021\240(\250!";
static const char __pyx_k_dx[] = "dx";
static const char __pyx_k_dy[] = "dy";
static const char __pyx_k_e5[] = "\320\001!\240\021\330\002\006\200e\2105\220\001\220\021";
static const char __pyx_k_fL[] = "\320\001*\250!\330\002\006\200f\210L\230\001\230\021";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k_kx[] = "kx";
static const char __pyx_k_ky[] = "ky";
static const char __pyx_k_m1[] = "m1";
static const char __pyx_k_m2[] = "m2";
static const char __pyx_k_p1[] = "p1";
static const char __pyx_k_p2[] = "p2";
static const char __pyx_k_pi[] = "pi";
static const char __pyx_k_sc[] = "sc";
static const char __pyx_k_vp[] = "vp";
static const char __pyx_k_x1[] = "x1";
static const char __pyx_k_x2[] = "x2";
static const char __pyx_k_y1[] = "y1";
static const char __pyx_k_y2[] = "y2";
static const char __pyx_k_A_d[] = "\320\001\024\220A\330\002\006\200d\210&\220\001";
static const char __pyx_k_A_g[] = "\200\021\330\017\020\330\016\024\220A\330\002\006\200g\210\\\230\021\230&\240\001";
static const char __pyx_k_Q_2[] = "\320\001\030\230\001\330\002\t\210\024\210Q";
static const char __pyx_k_Q_U[] = "\320\001\035\230Q\330\002\t\210\024\210U\220/\240\021";
static const char __pyx_k_Q_k[] = "\320\001%\240Q\330\002\006\200k\220\021";
static const char __pyx_k_Qe1[] = "\200\021\330 !\330\002\t\210\034\220Q\220e\2301";
static const char __pyx_k_Qe6[] = "\320\001(\250\001\330\002\t\210\024\210^\230:\240Q\240e\2506\260\021\260!";
static const char __pyx_k_QfA[] = "\200\001\330\004%\240Q\240f\250A";
static const char __pyx_k_U_1[] = "\320\001\030\230\001\330\002\t\210\024\210U\220)\2301";
static const char __pyx_k_U_A[] = "\320\001\030\230\001\330\002\t\210\024\210U\220*\230A";
static const char __pyx_k_V9A[] = "\320\001\030\230\001\330\002\t\210\024\210V\2209\230A";
static const char __pyx_k_V_Q[] = "\320\001\031\230\021\330\002\t\210\024\210V\220:\230Q";
static const char __pyx_k_XYa[] = "\320\001\030\230\001\330\002\t\210\024\210X\220Y\230a";
static const char __pyx_k_a_7[] = "\320\001\026\220a\330\002\t\210\024\210^\2307\240!";
static const char __pyx_k_a_V[] = "\320\001\036\230a\330\002\t\210\024\210V\220?\240!";
static const char __pyx_k_a_g[] = "\320\001(\250\006\250a\330\002\006\200g\210\\\230\021\230!";
static const char __pyx_k_clr[] = "clr";
static const char __pyx_k_e_q[] = "\320\001*\250!\330\002\006\200e\210<\220q\230\001";
static const char __pyx_k_int[] = "int";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_mod[] = "mod";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_num[] = "num";
static const char __pyx_k_pop[] = "pop";
static const char __pyx_k_pos[] = "pos";
static const char __pyx_k_q_T[] = "\320\001\027\220q\330\002\t\210\024\210T\220\030\230\021";
static const char __pyx_k_q_V[] = "\320\001\037\230q\330\002\t\210\024\210V\220?\240!";
static const char __pyx_k_q_a[] = "\200\001\330\004/\250q\260\006\260a";
static const char __pyx_k_str[] = "str";
static const char __pyx_k_sub[] = "sub";
static const char __pyx_k_sum[] = "sum";
static const char __pyx_k_top[] = "top";
static const char __pyx_k_txt[] = "txt_";
static const char __pyx_k_wnd[] = "wnd";
static const char __pyx_k_1_WL[] = "\320\001\033\2301\330\002\t\210\024\210W\220L\240\001";
static const char __pyx_k_1_fE[] = "\320\001\023\2201\330\002\006\200f\210E\220\021";
static const char __pyx_k_1_fL[] = "\320\001\033\2301\330\002\006\200f\210L\230\001";
static const char __pyx_k_2XRq[] = "\320\000!\240\021\330\001\021\220\027\230\001\330\001\010\210\003\2102\210X\220R\220q";
static const char __pyx_k_A_fF[] = "\320\001\024\220A\330\002\006\200f\210F\220!";
static const char __pyx_k_A_nF[] = "\320\001\024\220A\330\002\006\200n\220F\230!";
static const char __pyx_k_E_t5[] = "\320\001\030\230\001\330\002\030\320\030(\250\004\250E\260\031\270!\330\002\n\210%\210t\2205\230\001";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_V_Ja[] = "\320\001\"\240!\330\002\t\210\024\210V\220?\240\"\240J\250a";
static const char __pyx_k_a_hj[] = "\320\001&\240a\330\002\006\200h\210j\230\001\230\021";
static const char __pyx_k_area[] = "area";
static const char __pyx_k_bool[] = "bool";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_difX[] = "difX";
static const char __pyx_k_difY[] = "difY";
static const char __pyx_k_e_Qj[] = "\200\021\330\023\024\330\023\031\230\021\330\002\006\200e\210:\220Q\220j\240\001";
static const char __pyx_k_fHAQ[] = "\320\001\"\240!\330\002\006\200f\210H\220A\220Q";
static const char __pyx_k_flip[] = "flip";
static const char __pyx_k_font[] = "font";
static const char __pyx_k_func[] = "__func__";
static const char __pyx_k_gWAQ[] = "\320\001\"\240&\250\001\330\002\006\200g\210W\220A\220Q";
static const char __pyx_k_hhaq[] = "\320\001\"\240!\330\002\006\200h\210h\220a\220q";
static const char __pyx_k_icon[] = "icon";
static const char __pyx_k_left[] = "left";
static const char __pyx_k_loop[] = "loop";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_maxD[] = "maxD";
static const char __pyx_k_move[] = "move";
static const char __pyx_k_name[] = "name_";
static const char __pyx_k_play[] = "play";
static const char __pyx_k_q_V1[] = "\320\001\027\220q\330\002\t\210\024\210V\2201";
static const char __pyx_k_q_V5[] = "\320\001\037\230q\330\002\t\210\024\210V\2205\230\001";
static const char __pyx_k_rect[] = "rect";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_srgb[] = "srgb";
static const char __pyx_k_stop[] = "stop";
static const char __pyx_k_swap[] = "swap";
static const char __pyx_k_t_x1[] = "t_x1";
static const char __pyx_k_t_x2[] = "t_x2";
static const char __pyx_k_t_y1[] = "t_y1";
static const char __pyx_k_t_y2[] = "t_y2";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_type[] = "type";
static const char __pyx_k_view[] = "view_";
static const char __pyx_k_zoom[] = "zoom";
static const char __pyx_k_1_U_a[] = "\320\001\033\2301\330\002\t\210\024\210U\220,\230a";
static const char __pyx_k_1_V4q[] = "\320\001\033\2301\330\002\t\210\024\210V\2204\220q";
static const char __pyx_k_1_V_q[] = "\320\001\033\2301\330\002\t\210\024\210V\220<\230q";
static const char __pyx_k_F_q_A[] = "\320\001\030\230\001\330\002\023\220=\240\004\240F\250-\260q\330\002\t\210\023\210A";
static const char __pyx_k_IQ_Qa[] = "\320\001$\240I\250Q\330\002\t\210\024\210^\230:\240Q\240a";
static const char __pyx_k_U_1Cq[] = "\200\021\330\014\r\330\014\022\220!\330\002\t\210\024\210U\220)\2301\230C\230q";
static const char __pyx_k_U_A_F[] = "\320\001\031\230\021\330\002\031\320\031)\250\024\250U\260*\270A\330\002\n\210&\220\004\220F\230!";
static const char __pyx_k_V82Zq[] = "\320\001 \240\001\330\002\t\210\024\210V\2208\2302\230Z\240q";
static const char __pyx_k_a_XWA[] = "\320\001\026\220a\330\002\t\210\024\210X\220W\230A";
static const char __pyx_k_a_nHA[] = "\320\001\026\220a\330\002\006\200n\220H\230A";
static const char __pyx_k_after[] = "after";
static const char __pyx_k_basis[] = "basis";
static const char __pyx_k_clear[] = "clear";
static const char __pyx_k_clone[] = "clone";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_color[] = "color";
static const char __pyx_k_coord[] = "coord";
static const char __pyx_k_cosin[] = "cosin";
static const char __pyx_k_dif_x[] = "dif_x";
static const char __pyx_k_dif_y[] = "dif_y";
static const char __pyx_k_event[] = "event";
static const char __pyx_k_fL_Cq[] = "\200\021\330\014\r\330\014\r\330\014\022\220!\330\002\006\200f\210L\230\001\230\023\230C\230q";
static const char __pyx_k_flipX[] = "flipX";
static const char __pyx_k_flipY[] = "flipY";
static const char __pyx_k_float[] = "float";
static const char __pyx_k_gYa_a[] = "\320\001\030\230\001\330\002\025\220]\240$\240g\250Y\260a\330\002\t\210\025\210a";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_l_T_A[] = "\200\021\330\027\030\330\002\036\230l\250!\330\002\n\210#\210T\220\023\220A";
static const char __pyx_k_limit[] = "limit";
static const char __pyx_k_local[] = "local";
static const char __pyx_k_modul[] = "modul";
static const char __pyx_k_pause[] = "pause";
static const char __pyx_k_pitch[] = "pitch";
static const char __pyx_k_pixel[] = "pixel";
static const char __pyx_k_pos_2[] = "pos_";
static const char __pyx_k_q_V81[] = "\320\001\027\220q\330\002\t\210\024\210V\2208\2301";
static const char __pyx_k_q_V_q[] = "\320\001\037\230q\330\002\t\210\024\210V\220<\230q";
static const char __pyx_k_q_WHA[] = "\320\001\027\220q\330\002\t\210\024\210W\220H\230A";
static const char __pyx_k_rect1[] = "rect1";
static const char __pyx_k_rect2[] = "rect2";
static const char __pyx_k_reset[] = "reset";
static const char __pyx_k_scale[] = "scale";
static const char __pyx_k_shape[] = "shape";
static const char __pyx_k_shift[] = "shift";
static const char __pyx_k_sinus[] = "sinus";
static const char __pyx_k_speed[] = "speed_";
static const char __pyx_k_state[] = "state";
static const char __pyx_k_style[] = "style";
static const char __pyx_k_title[] = "title";
static const char __pyx_k_top_2[] = "top_";
static const char __pyx_k_txt_2[] = "txt";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_width[] = "width";
static const char __pyx_k_1_e5_Q[] = "\200\021\330\r\016\330\r\023\2201\330\002\006\200e\2105\220\001\220\024\220Q";
static const char __pyx_k_1_e9AT[] = "\200\021\330\r\016\330\r\023\2201\330\002\006\200e\2109\220A\220T\230\021";
static const char __pyx_k_1_fE_a[] = "\200\021\330\r\016\330\r\023\2201\330\002\006\200f\210E\220\021\220$\220a";
static const char __pyx_k_1_fO1A[] = "\320\0011\260\021\330\002\006\200f\210O\2301\230A";
static const char __pyx_k_5Q_n_1[] = "\320\0015\260Q\330\002\006\200n\320\024*\250!\2501";
static const char __pyx_k_A_e7_1[] = "\320\001$\240A\330\002\006\200e\2107\220!\2201";
static const char __pyx_k_A_e9AQ[] = "\320\001,\250A\330\002\006\200e\2109\220A\220Q";
static const char __pyx_k_A_fG1A[] = "\320\001$\240A\330\002\006\200f\210G\2201\220A";
static const char __pyx_k_A_fL_q[] = "\200\021\330\017\020\330\016\024\220A\330\002\006\200f\210L\230\001\230\026\230q";
static const char __pyx_k_G9A_t5[] = "\320\001\030\230\001\330\002\030\320\030(\250\004\250G\2609\270A\330\002\n\210%\210t\2205\230\001";
static const char __pyx_k_Q_fIQa[] = "\320\001%\240Q\330\002\006\200f\210I\220Q\220a";
static const char __pyx_k_a_e_Qa[] = "\320\001&\240a\330\002\006\200e\210:\220Q\220a";
static const char __pyx_k_active[] = "active";
static const char __pyx_k_before[] = "before";
static const char __pyx_k_bounds[] = "bounds";
static const char __pyx_k_buffer[] = "buffer";
static const char __pyx_k_button[] = "button";
static const char __pyx_k_center[] = "center";
static const char __pyx_k_dict_2[] = "_dict";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_factor[] = "factor";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_height[] = "height";
static const char __pyx_k_iq_nKq[] = "\320\001&\240i\250q\330\002\006\200n\220K\230q\240\001";
static const char __pyx_k_keep_h[] = "keep_h";
static const char __pyx_k_keep_w[] = "keep_w";
static const char __pyx_k_keep_x[] = "keep_x";
static const char __pyx_k_keep_y[] = "keep_y";
static const char __pyx_k_left_2[] = "left_";
static const char __pyx_k_length[] = "length";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_myRect[] = "myRect";
static const char __pyx_k_nE_q_F[] = "\200\021\340\034\035\330\002\006\200n\220E\230\021\230&\240\007\240q\250\004\250F\260'\270\021\270!";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_name_3[] = "name";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_q_V_O1[] = "\320\001'\240q\330\002\t\210\024\210V\220?\240\"\240O\2601";
static const char __pyx_k_q_fJaq[] = "\320\001'\240q\330\002\006\200f\210J\220a\220q";
static const char __pyx_k_q_fO1A[] = "\320\001/\250q\330\002\006\200f\210O\2301\230A";
static const char __pyx_k_radius[] = "radius";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_resize[] = "resize";
static const char __pyx_k_return[] = "return";
static const char __pyx_k_rotate[] = "rotate";
static const char __pyx_k_sfFont[] = "sfFont";
static const char __pyx_k_sfText[] = "sfText";
static const char __pyx_k_sfTime[] = "sfTime";
static const char __pyx_k_sfView[] = "sfView";
static const char __pyx_k_shader[] = "shader";
static const char __pyx_k_smooth[] = "smooth";
static const char __pyx_k_sprite[] = "sprite";
static const char __pyx_k_states[] = "states";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_view_2[] = "view";
static const char __pyx_k_volume[] = "volume";
static const char __pyx_k_1_gU_4q[] = "\200\021\330\r\016\330\r\023\2201\330\002\006\200g\210U\220!\2204\220q";
static const char __pyx_k_1_gYat1[] = "\200\021\330\r\016\330\r\023\2201\330\002\006\200g\210Y\220a\220t\2301";
static const char __pyx_k_4A_e_AQ[] = "\320\0014\260A\330\002\006\200e\320\013\034\230A\230Q";
static const char __pyx_k_6a_n_aq[] = "\320\0016\260a\330\002\006\200n\320\024&\240a\240q";
static const char __pyx_k_A_e_fAQ[] = "\320\001,\250A\330\002\006\200e\210=\230\001\230\025\230f\240A\240Q";
static const char __pyx_k_A_e_q_a[] = "\200\021\330\017\020\330\016\024\220A\330\002\006\200e\210<\220q\230\006\230a";
static const char __pyx_k_A_l_fHA[] = "\320\001\024\220A\330\002\006\200l\220'\230\021\330\002\006\200f\210H\220A";
static const char __pyx_k_Q_Q_y_D[] = "\200\021\360\006\000\016\017\330\r\016\330\017\020\330\027\030\330\007\010\330\002\005\200Q\330\003\031\230\021\230&\240\t\250\024\250Q\340\003\030\230\001\230\026\230y\250\004\250D\260\001";
static const char __pyx_k_Q_V82_A[] = "\320\001%\240Q\330\002\t\210\024\210V\2208\2302\230_\250A";
static const char __pyx_k_RESULTS[] = "RESULTS";
static const char __pyx_k_T_b_b_q[] = "\320\001\032\230!\330\002\t\210\024\210T\220\035\230b\240\006\240b\250\007\250q\260\001";
static const char __pyx_k_U_6_g_q[] = "\200\021\340\016\017\330\002\025\220U\230!\2306\240\027\250\001\250\021\330\002\006\200g\210[\230\001\230\026\230q";
static const char __pyx_k_a_fA_fA[] = "\320\001&\240a\330\002\006\200f\210A\330\002\006\200f\210A";
static const char __pyx_k_a_t6_m1[] = "\320\001\026\220a\330\002\027\220t\2306\240\030\250\022\250?\270!\330\002\006\200m\2201";
static const char __pyx_k_centerX[] = "centerX";
static const char __pyx_k_centerY[] = "centerY";
static const char __pyx_k_collect[] = "collect";
static const char __pyx_k_current[] = "current";
static const char __pyx_k_degrees[] = "degrees";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_display[] = "display";
static const char __pyx_k_elapsed[] = "elapsed";
static const char __pyx_k_in_area[] = "in_area";
static const char __pyx_k_is_open[] = "is_open";
static const char __pyx_k_is_srgb[] = "is_srgb";
static const char __pyx_k_lengthX[] = "lengthX";
static const char __pyx_k_lengthY[] = "lengthY";
static const char __pyx_k_offsetX[] = "offsetX";
static const char __pyx_k_offsetY[] = "offsetY";
static const char __pyx_k_pivot_x[] = "pivot_x";
static const char __pyx_k_pivot_y[] = "pivot_y";
static const char __pyx_k_q__AS_1[] = "\320\001/\250q\330\002\t\210\024\210_\230A\230S\240\003\2401";
static const char __pyx_k_q_e81G1[] = "\200\021\330\020\021\330\021\027\220q\330\002\006\200e\2108\2201\220G\2301";
static const char __pyx_k_q_t_d_a[] = "\320\001\027\220q\330\002\027\220t\230>\250\030\260\021\330\002\n\210$\210d\220$\220a";
static const char __pyx_k_radians[] = "radians";
static const char __pyx_k_rectTop[] = "rectTop";
static const char __pyx_k_seconds[] = "seconds";
static const char __pyx_k_sfClock[] = "sfClock";
static const char __pyx_k_sfColor[] = "sfColor";
static const char __pyx_k_sfEvent[] = "sfEvent";
static const char __pyx_k_sfImage[] = "sfImage";
static const char __pyx_k_sfMouse[] = "sfMouse";
static const char __pyx_k_sfMusic[] = "sfMusic";
static const char __pyx_k_sfSound[] = "sfSound";
static const char __pyx_k_similar[] = "similar";
static const char __pyx_k_speed_2[] = "speed";
static const char __pyx_k_sprite1[] = "sprite1";
static const char __pyx_k_sprite2[] = "sprite2";
static const char __pyx_k_sprites[] = "sprites";
static const char __pyx_k_t6_Q_Yb[] = "\320\001\030\230\001\330\002\027\220t\2306\240\030\250\022\250:\260Q\330\002\t\210\024\210Y\220b\230\001";
static const char __pyx_k_texture[] = "texture";
static const char __pyx_k_visible[] = "visible";
static const char __pyx_k_wnd_pos[] = "wnd_pos";
static const char __pyx_k_1_U_Qd_q[] = "\320\001+\2501\330\002\t\210\024\210U\220+\230Q\230d\240%\240q\250\001";
static const char __pyx_k_1_nE_q_A[] = "\320\001+\2501\330\002\006\200n\220E\230\021\230&\240\007\240q\250\004\250A";
static const char __pyx_k_Animator[] = "Animator";
static const char __pyx_k_Camera2D[] = "Camera2D";
static const char __pyx_k_Q_nE_e1D[] = "\320\001%\240Q\330\002\006\200n\220E\230\021\230$\230e\2401\240D\250\001";
static const char __pyx_k_S_3c_S_1[] = "\320\001*\250!\330\002\t\210\024\210S\220\002\220!\2203\220c\230\024\230S\240\002\240!\2401";
static const char __pyx_k_add_note[] = "add_note";
static const char __pyx_k_centerX1[] = "centerX1";
static const char __pyx_k_centerX2[] = "centerX2";
static const char __pyx_k_centerY1[] = "centerY1";
static const char __pyx_k_centerY2[] = "centerY2";
static const char __pyx_k_center_x[] = "center_x";
static const char __pyx_k_center_y[] = "center_y";
static const char __pyx_k_contains[] = "contains";
static const char __pyx_k_distance[] = "distance";
static const char __pyx_k_filename[] = "filename";
static const char __pyx_k_get_loop[] = "get_loop";
static const char __pyx_k_get_rect[] = "get_rect";
static const char __pyx_k_get_size[] = "get_size";
static const char __pyx_k_get_type[] = "get_type";
static const char __pyx_k_get_view[] = "get_view";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_is_empty[] = "is_empty";
static const char __pyx_k_is_valid[] = "is_valid";
static const char __pyx_k_localize[] = "localize";
static const char __pyx_k_maxIndex[] = "maxIndex";
static const char __pyx_k_put_like[] = "put_like";
static const char __pyx_k_pystring[] = "pystring";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_q_t5_d_a[] = "\320\001\027\220q\330\002\027\220t\2305\240\010\250\001\330\002\n\210$\210d\220$\220a";
static const char __pyx_k_q_t6_d_a[] = "\320\001\027\220q\330\002\027\320\027'\240t\2506\260\030\270\021\330\002\n\210$\210d\220$\220a";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_rectLeft[] = "rectLeft";
static const char __pyx_k_scancode[] = "scancode";
static const char __pyx_k_set_font[] = "set_font";
static const char __pyx_k_set_icon[] = "set_icon";
static const char __pyx_k_set_loop[] = "set_loop";
static const char __pyx_k_set_name[] = "__set_name__";
static const char __pyx_k_set_size[] = "set_size";
static const char __pyx_k_set_srgb[] = "set_srgb";
static const char __pyx_k_set_view[] = "set_view";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_sfShader[] = "sfShader";
static const char __pyx_k_sfSprite[] = "sfSprite";
static const char __pyx_k_sfString[] = "sfString";
static const char __pyx_k_shift_dx[] = "shift_dx";
static const char __pyx_k_shift_dy[] = "shift_dy";
static const char __pyx_k_swap_pos[] = "swap_pos";
static const char __pyx_k_theyRect[] = "theyRect";
static const char __pyx_k_wnd_rect[] = "wnd_rect";
static const char __pyx_k_wnd_size[] = "wnd_size";
static const char __pyx_k_1_d_1_T_A[] = "\320\001\033\2301\330\002\026\220d\230%\230|\2501\330\002\n\210#\210T\220\023\220A";
static const char __pyx_k_1_d_A_T_A[] = "\320\001\033\2301\330\002\026\320\026&\240d\250&\260\014\270A\330\002\n\210#\210T\220\023\220A";
static const char __pyx_k_1_d_Q_T_A[] = "\320\001\033\2301\330\002\026\320\026&\240d\250'\260\034\270Q\330\002\n\210#\210T\220\023\220A";
static const char __pyx_k_1_nF_5_aq[] = "\320\001#\2401\330\002\006\200n\220F\230!\2305\240\006\240a\240q";
static const char __pyx_k_5Q_nE_vQd[] = "\320\0015\260Q\330\002\006\200n\220E\230\021\230%\230v\240Q\240d\250!";
static const char __pyx_k_6a_nE_vQd[] = "\320\0016\260a\330\002\006\200n\220E\230\021\230%\230v\240Q\240d\250!";
static const char __pyx_k_A_e81D_Qa[] = "\320\001$\240A\330\002\006\200e\2108\2201\220D\230\005\230Q\230a";
static const char __pyx_k_Q_S_3b_Cr[] = "\320\001-\250Q\330\002\t\210\024\210S\220\002\220!\2203\220b\230\004\230C\230r\240\021\240!";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_asSeconds[] = "asSeconds";
static const char __pyx_k_center_x1[] = "center_x1";
static const char __pyx_k_center_x2[] = "center_x2";
static const char __pyx_k_center_y1[] = "center_y1";
static const char __pyx_k_center_y2[] = "center_y2";
static const char __pyx_k_const_pos[] = "const_pos";
static const char __pyx_k_draw_text[] = "draw_text";
static const char __pyx_k_get_alpha[] = "get_alpha";
static const char __pyx_k_get_color[] = "get_color";
static const char __pyx_k_get_pitch[] = "get_pitch";
static const char __pyx_k_get_scale[] = "get_scale";
static const char __pyx_k_get_timed[] = "get_timed";
static const char __pyx_k_get_value[] = "get_value";
static const char __pyx_k_is_smooth[] = "is_smooth";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_modeWidth[] = "modeWidth";
static const char __pyx_k_mouse_pos[] = "mouse_pos_";
static const char __pyx_k_pysfml261[] = "pysfml261";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_q_e_Qc_Qa[] = "\320\001'\240q\330\002\006\200e\210:\220Q\220c\230\024\230Q\230a";
static const char __pyx_k_q_fJavWAQ[] = "\320\001/\250q\330\002\006\200f\210J\220a\220v\230W\240A\240Q";
static const char __pyx_k_rectWidth[] = "rectWidth";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_resetRect[] = "resetRect";
static const char __pyx_k_set_alpha[] = "set_alpha";
static const char __pyx_k_set_color[] = "set_color";
static const char __pyx_k_set_pitch[] = "set_pitch";
static const char __pyx_k_set_scale[] = "set_scale";
static const char __pyx_k_set_style[] = "set_style";
static const char __pyx_k_set_value[] = "set_value";
static const char __pyx_k_sfTexture[] = "sfTexture";
static const char __pyx_k_swap_size[] = "swap_size";
static const char __pyx_k_to_remove[] = "to_remove";
static const char __pyx_k_world_pos[] = "world_pos";
static const char __pyx_k_CACHE_SIZE[] = "CACHE_SIZE";
static const char __pyx_k_G9A_D_4s_c[] = "\320\001\030\230\001\330\002\023\220=\240\004\240G\2509\260A\330\002\t\210\027\220\001\220\023\220D\230\003\2304\230s\240$\240c\250\021";
static const char __pyx_k_Q_s_AT_S_1[] = "\320\001\"\240!\330\002\t\210\034\220Q\330\003\007\200s\210\"\210A\210T\220\024\220S\230\002\230!\2301";
static const char __pyx_k_TimedFloat[] = "TimedFloat";
static const char __pyx_k_a_fA_fA_fA[] = "\320\001&\240a\330\002\006\200f\210A\330\002\006\200f\210A\330\002\006\200f\210A";
static const char __pyx_k_center_t_x[] = "center_t_x";
static const char __pyx_k_center_t_y[] = "center_t_y";
static const char __pyx_k_distance_x[] = "distance_x";
static const char __pyx_k_distance_y[] = "distance_y";
static const char __pyx_k_drop_cache[] = "drop_cache";
static const char __pyx_k_get_center[] = "get_center";
static const char __pyx_k_get_radius[] = "get_radius";
static const char __pyx_k_get_status[] = "get_status";
static const char __pyx_k_get_volume[] = "get_volume";
static const char __pyx_k_intersects[] = "intersects";
static const char __pyx_k_modeHeight[] = "modeHeight";
static const char __pyx_k_poll_event[] = "poll_event";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_q_F_q_U_fM[] = "\320\001\037\230q\330\002\023\220=\240\004\240F\250-\260q\330\002\005\200U\210!\330\002\006\200f\210M\230\021\230!";
static const char __pyx_k_q_t5_d_a_2[] = "\320\001\027\220q\330\002\027\320\027'\240t\2505\260\010\270\001\330\002\n\210$\210d\220$\220a";
static const char __pyx_k_q_t881_d_a[] = "\320\001\027\220q\330\002\027\220t\2308\2408\2501\330\002\n\210$\210d\220$\220a";
static const char __pyx_k_rectHeight[] = "rectHeight";
static const char __pyx_k_set_active[] = "set_active";
static const char __pyx_k_set_buffer[] = "set_buffer";
static const char __pyx_k_set_center[] = "set_center";
static const char __pyx_k_set_radius[] = "set_radius";
static const char __pyx_k_set_smooth[] = "set_smooth";
static const char __pyx_k_set_string[] = "set_string";
static const char __pyx_k_set_volume[] = "set_volume";
static const char __pyx_k_sfKeyboard[] = "sfKeyboard";
static const char __pyx_k_t1D_aq_Q_D[] = "\200\021\340\021\032\230!\330\002\022\220'\230\021\330\002\027\220t\2301\230D\240\006\240a\240q\330\002\005\200Q\330\003\n\210(\220\"\220D\230\002\230!\340\003\n\210!";
static const char __pyx_k_to_degrees[] = "to_degrees";
static const char __pyx_k_to_radians[] = "to_radians";
static const char __pyx_k_1_d_1_T_A_2[] = "\320\001\033\2301\330\002\026\320\026&\240d\250%\250|\2701\330\002\n\210#\210T\220\023\220A";
static const char __pyx_k_1_d_A_T_A_2[] = "\320\001\033\2301\330\002\026\220d\230.\250\014\260A\330\002\n\210#\210T\220\023\220A";
static const char __pyx_k_1_d_A_T_D_1[] = "\320\001\033\2301\330\002\026\220d\230&\240\014\250A\330\002\n\210#\210T\220\023\220D\230\003\2301";
static const char __pyx_k_45_Q_S_D_Rr[] = "\200\021\33045\330\002\t\210\034\220Q\330\003\005\200S\210\002\210\"\210D\220\002\220#\220R\220r\230\021";
static const char __pyx_k_MathPoint2f[] = "MathPoint2f";
static const char __pyx_k_MathPoint3f[] = "MathPoint3f";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_Q_5_Qa_nHAT[] = "\320\001%\240Q\330\002\032\230!\2305\240\005\240Q\240a\330\002\006\200n\220H\230A\230T\240\021\240!";
static const char __pyx_k_Q_e_e_1_Yas[] = "\200\021\330\014\r\330\014\r\330\017\030\230\001\340\002\005\200Q\330\003\n\210$\210e\220?\240!\340\003\n\210$\210e\320\023#\2401\330\002\t\210\024\210Y\220a\220s\230!";
static const char __pyx_k_Q_fM_d_t5_E[] = "\320\001\035\230Q\330\002\025\220]\240$\240f\250M\270\021\330\002\t\210\027\220\001\220\025\220d\230%\230t\2405\250\004\250E\260\021";
static const char __pyx_k_U_U_1A_nL_1[] = "\200\021\330\n\013\330\n\020\220\001\340\002\005\200U\210!\330\002\005\200U\210!\330\002#\2401\240A\330\002\006\200n\220L\240\001\240\031\250!\2501";
static const char __pyx_k_U_U_aq_fHAT[] = "\200\021\340\023\024\340\002\r\210U\220!\330\002\r\210U\220!\330\002\036\230a\230q\330\002\006\200f\210H\220A\220T\230\021\230!";
static const char __pyx_k_as_pystring[] = "as_pystring";
static const char __pyx_k_attenuation[] = "attenuation";
static const char __pyx_k_draw_sprite[] = "draw_sprite";
static const char __pyx_k_from_points[] = "from_points";
static const char __pyx_k_is_parallel[] = "is_parallel";
static const char __pyx_k_minDistance[] = "minDistance";
static const char __pyx_k_mouse_pos_2[] = "mouse_pos";
static const char __pyx_k_q_G_AT_F_hd[] = "\320\001\037\230q\330\002\030\230\004\230G\240?\260!\330\002\t\210\033\220A\220T\230\027\240\004\240F\250$\250h\260d\270!";
static const char __pyx_k_q_e_AV7_fHF[] = "\320\001\037\230q\330\002\032\230$\230e\240?\260!\330\002\t\210\033\220A\220V\2307\240&\250\006\250f\260H\270F\300!";
static const char __pyx_k_q_nHAWHD_m1[] = "\200\021\340\027\030\330\030\037\230q\330\002\006\200n\220H\230A\230W\240H\250D\260\006\260m\3001";
static const char __pyx_k_set_uniform[] = "set_uniform";
static const char __pyx_k_set_visible[] = "set_visible";
static const char __pyx_k_sfFloatRect[] = "sfFloatRect";
static const char __pyx_k_sfText_move[] = "sfText.move";
static const char __pyx_k_sfVideoMode[] = "sfVideoMode";
static const char __pyx_k_sfView_move[] = "sfView.move";
static const char __pyx_k_sfView_zoom[] = "sfView.zoom";
static const char __pyx_k_similar_pos[] = "similar_pos";
static const char __pyx_k_sprite1Left[] = "sprite1Left";
static const char __pyx_k_textureSize[] = "textureSize";
static const char __pyx_k_widthHeight[] = "widthHeight";
static const char __pyx_k_1_4uJa_F_G1A[] = "\320\001\033\2301\330\002\025\220^\2404\240u\250J\260a\330\002\t\210\024\210]\230\"\230F\240\"\240G\2501\250A";
static const char __pyx_k_A_4q_Q_s_E_S[] = "\320\001\024\220A\330\002\023\2204\220q\330\002\t\210\034\220Q\330\003\007\200s\210\"\210E\220\024\220S\230\002\230!";
static const char __pyx_k_A_5_aq_fM_Qa[] = "\320\001,\250A\330\002\032\230!\2305\240\006\240a\240q\330\002\006\200f\210M\230\021\230#\230Q\230a";
static const char __pyx_k_G_31_AT_F_hd[] = "\320\001 \240\001\330\002\030\230\004\230G\320#3\2601\330\002\t\210\033\220A\220T\230\027\240\004\240F\250$\250h\260d\270!";
static const char __pyx_k_MathVector2f[] = "MathVector2f";
static const char __pyx_k_MathVector3f[] = "MathVector3f";
static const char __pyx_k_Q_F_q_D_4s_c[] = "\320\001\035\230Q\330\002\023\220=\240\004\240F\250-\260q\330\002\t\210\027\220\001\220\023\220D\230\003\2304\230s\240$\240c\250\021";
static const char __pyx_k_Q_t6_t6_Qd_q[] = "\200\021\340\017\030\230\001\340\002\005\200Q\330\003\007\200t\2106\220\037\240\001\340\003\007\200t\2106\320\021!\240\021\330\002\t\210\021\210+\220Q\220d\230%\230q\240\001";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_bitsPerPixel[] = "bitsPerPixel";
static const char __pyx_k_distance_x_2[] = "distance_x_";
static const char __pyx_k_distance_y_2[] = "distance_y_";
static const char __pyx_k_e_31_AV7_fHF[] = "\320\001 \240\001\330\002\032\230$\230e\320#3\2601\330\002\t\210\033\220A\220V\2307\240&\250\006\250f\260H\270F\300!";
static const char __pyx_k_f_4A_AV7_fHF[] = "\320\001 \240\001\330\002\032\230$\230f\320$4\260A\330\002\t\210\033\220A\220V\2307\240&\250\006\250f\260H\270F\300!";
static const char __pyx_k_get_distance[] = "get_distance";
static const char __pyx_k_get_key_code[] = "get_key_code";
static const char __pyx_k_get_left_top[] = "get_left_top";
static const char __pyx_k_get_position[] = "get_position";
static const char __pyx_k_get_pystring[] = "get_pystring";
static const char __pyx_k_get_rotation[] = "get_rotation";
static const char __pyx_k_is_available[] = "is_available";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_like_sprite1[] = "like_sprite1";
static const char __pyx_k_local_bounds[] = "local_bounds";
static const char __pyx_k_multiply_num[] = "multiply_num";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_relative_pos[] = "relative_pos";
static const char __pyx_k_reset_buffer[] = "reset_buffer";
static const char __pyx_k_set_left_top[] = "set_left_top";
static const char __pyx_k_set_position[] = "set_position";
static const char __pyx_k_set_rotation[] = "set_rotation";
static const char __pyx_k_sfMusic_play[] = "sfMusic.play";
static const char __pyx_k_sfMusic_stop[] = "sfMusic.stop";
static const char __pyx_k_sfSound_play[] = "sfSound.play";
static const char __pyx_k_sfSound_stop[] = "sfSound.stop";
static const char __pyx_k_similar_size[] = "similar_size";
static const char __pyx_k_sprite1Upper[] = "sprite1Upper";
static const char __pyx_k_sprite1_main[] = "sprite1_main";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_stringsource[] = "<stringsource>";
static const char __pyx_k_use_setstate[] = "use_setstate";
static const char __pyx_k_volumeFactor[] = "volumeFactor";
static const char __pyx_k_A__AQ_m1A_7_S[] = "\320\001$\240A\330\002\031\230\024\230_\250A\250Q\330\002\022\220$\220m\2401\240A\330\002\t\210\022\2107\220#\220S\230\002\230!";
static const char __pyx_k_Q_Q_s_AT_c_1A[] = "\320\001-\250Q\330\002\t\210\034\220Q\330\003\007\200s\210\"\210A\210T\220\021\220$\220c\230\022\2301\230A";
static const char __pyx_k_Q_fO1_f_A_Yas[] = "\200\021\330\014\r\330\014\r\330\017\030\230\001\340\002\005\200Q\330\003\n\210$\210f\220O\2401\340\003\n\210$\210f\320\024$\240A\330\002\t\210\024\210Y\220a\220s\230!";
static const char __pyx_k_Q_s_AT_S_4t3b[] = "\320\001\"\240!\330\002\t\210\034\220Q\330\003\007\200s\210\"\210A\210T\220\024\220S\230\002\230!\2304\230t\2403\240b\250\001\250\021";
static const char __pyx_k_TimeCollector[] = "TimeCollector";
static const char __pyx_k_angle_between[] = "angle_between";
static const char __pyx_k_from_pystring[] = "from_pystring";
static const char __pyx_k_keep_left_top[] = "keep_left_top";
static const char __pyx_k_pysfml261_pyx[] = "pysfml261.pyx";
static const char __pyx_k_q_U_a_AT_F_hd[] = "\320\001\027\220q\330\002\030\320\030)\250\024\250U\260,\270a\330\002\t\210\033\220A\220T\230\027\240\004\240F\250$\250h\260d\270!";
static const char __pyx_k_q_fO1_AV7_fHF[] = "\320\001\037\230q\330\002\032\230$\230f\240O\2601\330\002\t\210\033\220A\220V\2307\240&\250\006\250f\260H\270F\300!";
static const char __pyx_k_q_gYa_uA_gYaq[] = "\320\001\037\230q\330\002\025\220]\240$\240g\250Y\260a\330\002\007\200u\210A\330\002\006\200g\210Y\220a\220q";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_sfCircleShape[] = "sfCircleShape";
static const char __pyx_k_sfMusic_pause[] = "sfMusic.pause";
static const char __pyx_k_sfSoundBuffer[] = "sfSoundBuffer";
static const char __pyx_k_sfSound_pause[] = "sfSound.pause";
static const char __pyx_k_sfSprite_move[] = "sfSprite.move";
static const char __pyx_k_sfText_rotate[] = "sfText.rotate";
static const char __pyx_k_sfView_rotate[] = "sfView.rotate";
static const char __pyx_k_tuple_int_int[] = "tuple[int, int]";
static const char __pyx_k_1A_c_8_1_s_e3a[] = "\200\021\330&'\330\002%\240\\\260\021\330\002#\2401\240A\330\002\026\220c\230\036\320'8\270\001\270\031\300!\3001\330\002\n\210%\210s\220$\220e\2303\230a";
static const char __pyx_k_A_oQa_m1A_Cs_A[] = "\320\001$\240A\330\002\022\220$\220o\240Q\240a\330\002\022\220$\220m\2401\240A\330\002\t\210\023\210C\210s\220\"\220A";
static const char __pyx_k_Camera2D_shift[] = "Camera2D.shift";
static const char __pyx_k_Q_S_3b_Cr_Rt3b[] = "\320\001-\250Q\330\002\t\210\024\210S\220\002\220!\2203\220b\230\004\230C\230r\240\021\240#\240R\240t\2503\250b\260\001\260\021";
static const char __pyx_k_asMicroseconds[] = "asMicroseconds";
static const char __pyx_k_asMilliseconds[] = "asMilliseconds";
static const char __pyx_k_get_fill_color[] = "get_fill_color";
static const char __pyx_k_is_key_pressed[] = "is_key_pressed";
static const char __pyx_k_scalar_product[] = "scalar_product";
static const char __pyx_k_set_cache_size[] = "set_cache_size";
static const char __pyx_k_set_fill_color[] = "set_fill_color";
static const char __pyx_k_sfRenderStates[] = "sfRenderStates";
static const char __pyx_k_sfRenderWindow[] = "sfRenderWindow";
static const char __pyx_k_sfSprite_clone[] = "sfSprite.clone";
static const char __pyx_k_sfString_clear[] = "sfString.clear";
static const char __pyx_k_vector_product[] = "vector_product";
static const char __pyx_k_Q_D__A_D_Q_4uAQ[] = "\200\021\340\017\030\230\001\340\002\005\200Q\330\003\014\210D\220\005\220_\240A\340\003\014\210D\220\005\320\025%\240Q\330\002\t\210\026\210{\230!\2304\230u\240A\240Q";
static const char __pyx_k_collide_shift_h[] = "collide_shift_h";
static const char __pyx_k_collide_shift_v[] = "collide_shift_v";
static const char __pyx_k_draw_rect_shape[] = "draw_rect_shape";
static const char __pyx_k_get_attenuation[] = "get_attenuation";
static const char __pyx_k_intersects_rect[] = "intersects_rect";
static const char __pyx_k_move_with_angle[] = "move_with_angle";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_q_Q_g_A_g_Q_Yas[] = "\200\021\330\014\r\330\014\r\330\026\037\230q\340\002\005\200Q\330\003\n\210$\210g\220_\240A\340\003\n\210$\210g\320\025%\240Q\330\002\t\210\024\210Y\220a\220s\230!";
static const char __pyx_k_set_attenuation[] = "set_attenuation";
static const char __pyx_k_set_relative_to[] = "set_relative_to";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_sfSprite_rotate[] = "sfSprite.rotate";
static const char __pyx_k_sfText_contains[] = "sfText.contains";
static const char __pyx_k_sfText_set_font[] = "sfText.set_font";
static const char __pyx_k_sfView_get_rect[] = "sfView.get_rect";
static const char __pyx_k_sfView_get_size[] = "sfView.get_size";
static const char __pyx_k_sfView_set_size[] = "sfView.set_size";
static const char __pyx_k_xr_Ba_Qa_Qa_uAT[] = "\200\021\360\n\000\010\t\330\002\022\220'\230\021\330\002\027\220x\230r\240\023\240B\240a\330\002\022\220&\230\002\230#\230Q\230a\330\002\022\220&\230\002\230#\230Q\230a\330\002\010\210\007\210u\220A\220T\230\021";
static const char __pyx_k_A_4q_Q_s_E_S_t3b[] = "\320\001\024\220A\330\002\023\2204\220q\330\002\t\210\034\220Q\330\003\007\200s\210\"\210E\220\024\220S\230\002\230%\230t\2403\240b\250\001";
static const char __pyx_k_MathVector2f_sub[] = "MathVector2f.sub";
static const char __pyx_k_MathVector2f_sum[] = "MathVector2f.sum";
static const char __pyx_k_MathVector3f_sub[] = "MathVector3f.sub";
static const char __pyx_k_MathVector3f_sum[] = "MathVector3f.sum";
static const char __pyx_k_get_desktop_mode[] = "get_desktop_mode";
static const char __pyx_k_get_desktop_rect[] = "get_desktop_rect";
static const char __pyx_k_get_local_bounds[] = "get_local_bounds";
static const char __pyx_k_get_min_distance[] = "get_min_distance";
static const char __pyx_k_get_mouse_button[] = "get_mouse_button";
static const char __pyx_k_get_text_unicode[] = "get_text_unicode";
static const char __pyx_k_is_perpendicular[] = "is_perpendicular";
static const char __pyx_k_q_Q_D_a_D_q_4uAQ[] = "\200\021\340\026\037\230q\340\002\005\200Q\330\003\014\210D\220\007\220\240a\340\003\014\210D\220\007\320\027'\240q\330\002\t\210\026\210{\230!\2304\230u\240A\240Q";
static const char __pyx_k_relative_to_rect[] = "relative_to_rect";
static const char __pyx_k_set_min_distance[] = "set_min_distance";
static const char __pyx_k_sfEvent_get_type[] = "sfEvent.get_type";
static const char __pyx_k_sfFloatRect_move[] = "sfFloatRect.move";
static const char __pyx_k_sfFont_is_smooth[] = "sfFont.is_smooth";
static const char __pyx_k_sfMusic_get_loop[] = "sfMusic.get_loop";
static const char __pyx_k_sfMusic_set_loop[] = "sfMusic.set_loop";
static const char __pyx_k_sfRectangleShape[] = "sfRectangleShape";
static const char __pyx_k_sfSound_get_loop[] = "sfSound.get_loop";
static const char __pyx_k_sfSound_set_loop[] = "sfSound.set_loop";
static const char __pyx_k_sfSprite_in_area[] = "sfSprite.in_area";
static const char __pyx_k_sfText_get_scale[] = "sfText.get_scale";
static const char __pyx_k_sfText_set_scale[] = "sfText.set_scale";
static const char __pyx_k_sfText_set_style[] = "sfText.set_style";
static const char __pyx_k_sfTime_asSeconds[] = "sfTime.asSeconds";
static const char __pyx_k_1_d_1_e7_S_e83c_1[] = "\200\021\330\r\016\330\r\023\2201\330\002\026\220d\230%\230|\2501\330\002\006\200e\2107\220#\220S\230\002\230!\330\002\006\200e\2108\2203\220c\230\022\2301";
static const char __pyx_k_45_Q_S_D_Rr_Rs_Ba[] = "\200\021\33045\330\002\t\210\034\220Q\330\003\005\200S\210\002\210\"\210D\220\002\220#\220R\220r\230\024\230R\230s\240\"\240B\240a";
static const char __pyx_k_8_U_A_e_q_e_QfD_a[] = "\320\0018\270\001\330\002\031\320\031)\250\024\250U\260*\270A\330\002\006\200e\210<\220q\230\001\330\002\006\200e\210:\220Q\220f\230D\240\006\240a";
static const char __pyx_k_A_T_d_A_d_auHCt3a[] = "\320\001\024\220A\330\002\025\220T\230\037\250\001\330\002\026\320\026&\240d\250&\260\014\270A\330\002\026\220d\230&\240\n\250!\330\002\t\210\035\220a\220u\230H\240C\240t\2503\250a";
static const char __pyx_k_TransformSfSprite[] = "TransformSfSprite";
static const char __pyx_k_d_A_V1_V1_1A_nL_1[] = "\200\021\330\013\014\330\013\021\220\021\330\002\026\220d\230.\250\014\260A\330\002\005\200V\2101\330\002\005\200V\2101\330\002#\2401\240A\330\002\006\200n\220L\240\001\240\031\250!\2501";
static const char __pyx_k_draw_circle_shape[] = "draw_circle_shape";
static const char __pyx_k_e1_e1_Qa_N_1Cq_t5[] = "\200\021\330\014\r\330\014\022\220!\340\002\006\200e\2101\330\002\006\200e\2101\330\002\035\230Q\230a\330\002\030\230\004\230N\320*;\2701\270C\270q\300\001\330\002\n\210%\210t\2205\230\001";
static const char __pyx_k_e5_e5_Qa_N_1Cq_t5[] = "\200\021\330\014\r\330\014\022\220!\340\002\006\200e\2105\220\001\330\002\006\200e\2105\220\001\330\002\035\230Q\230a\330\002\030\230\004\230N\320*;\2701\270C\270q\300\001\330\002\n\210%\210t\2205\230\001";
static const char __pyx_k_get_current_index[] = "get_current_index";
static const char __pyx_k_get_global_bounds[] = "get_global_bounds";
static const char __pyx_k_is_button_pressed[] = "is_button_pressed";
static const char __pyx_k_q_Q_D_a_d_D_q_d_1[] = "\200\021\340\026\037\230q\340\002\005\200Q\330\003\014\210D\220\007\220\240a\330\003\016\210d\220'\230\037\250\001\340\003\014\210D\220\007\320\027'\240q\330\003\016\210d\220'\320\031)\250\021\330\002\t\210\026\210{\230!\2301";
static const char __pyx_k_q_d_A_t_AS_Ct4t4q[] = "\320\001\037\230q\330\002\026\220d\230.\250\014\260A\330\002\027\220t\230>\250\030\260\021\330\002\t\210\033\220A\220S\230\004\230C\230t\2404\240t\2504\250q";
static const char __pyx_k_restart_asseconds[] = "restart_asseconds";
static const char __pyx_k_sfFont_set_smooth[] = "sfFont.set_smooth";
static const char __pyx_k_sfMouse_world_pos[] = "sfMouse.world_pos";
static const char __pyx_k_sfMusic_get_pitch[] = "sfMusic.get_pitch";
static const char __pyx_k_sfMusic_set_pitch[] = "sfMusic.set_pitch";
static const char __pyx_k_sfSound_get_pitch[] = "sfSound.get_pitch";
static const char __pyx_k_sfSound_set_pitch[] = "sfSound.set_pitch";
static const char __pyx_k_sfSprite_contains[] = "sfSprite.contains";
static const char __pyx_k_sfString_is_empty[] = "sfString.is_empty";
static const char __pyx_k_sfText_intersects[] = "sfText.intersects";
static const char __pyx_k_sfText_set_string[] = "sfText.set_string";
static const char __pyx_k_sfTexture_is_srgb[] = "sfTexture.is_srgb";
static const char __pyx_k_sfView_get_center[] = "sfView.get_center";
static const char __pyx_k_sfView_set_center[] = "sfView.set_center";
static const char __pyx_k_tuple_float_float[] = "tuple[float, float]";
static const char __pyx_k_tuple_int_int_int[] = "tuple[int, int, int]";
static const char __pyx_k_2_U_A_e7_1_e_QfD_a[] = "\320\0012\260!\330\002\031\320\031)\250\024\250U\260*\270A\330\002\006\200e\2107\220!\2201\330\002\006\200e\210:\220Q\220f\230D\240\006\240a";
static const char __pyx_k_A_T_t6_d_A_t4t4s_c[] = "\320\001\024\220A\330\002\025\220T\230\037\250\001\330\002\027\320\027'\240t\2506\260\030\270\021\330\002\026\320\026&\240d\250&\260\014\270A\330\002\t\320\t\031\230\021\230%\230t\2404\240t\2504\250s\260$\260c\270\021";
static const char __pyx_k_MathVector2f_basis[] = "MathVector2f.basis";
static const char __pyx_k_MathVector2f_cosin[] = "MathVector2f.cosin";
static const char __pyx_k_MathVector2f_sinus[] = "MathVector2f.sinus";
static const char __pyx_k_MathVector3f_basis[] = "MathVector3f.basis";
static const char __pyx_k_MathVector3f_cosin[] = "MathVector3f.cosin";
static const char __pyx_k_MathVector3f_sinus[] = "MathVector3f.sinus";
static const char __pyx_k_S_1_3d_Rq_4r_D_2Qa[] = "\320\001*\250!\330\002\021\220\024\220S\230\002\230!\2301\330\002\t\210\022\2103\210d\220#\220R\220q\230\003\2304\230r\240\023\240D\250\003\2502\250Q\250a";
static const char __pyx_k_a_a_q_Cr_c_4q_Cr_a[] = "\320\001&\240a\330\002\t\210\025\210a\330\003\007\200q\210\004\210C\210r\220\021\220$\220c\230\022\2304\230q\240\004\240C\240r\250\021\250$\250a";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_q_a_q_Cr_c_4q_Cr_a[] = "\320\001'\240q\330\002\t\210\025\210a\330\003\007\200q\210\004\210C\210r\220\021\220$\220c\230\022\2304\230q\240\004\240C\240r\250\021\250$\250a";
static const char __pyx_k_q_t_Zq_t81_q_d_D_D[] = "\320\001\027\220q\330\002\023\220<\230t\240>\260\030\270\021\330\002\031\320\031)\250\024\250Z\260q\330\002\027\320\027'\240t\2508\2601\330\002\t\210\026\210q\220\006\220d\230&\240\004\240D\250\004\250D\260\001";
static const char __pyx_k_set_character_size[] = "set_character_size";
static const char __pyx_k_sfCircleShape_move[] = "sfCircleShape.move";
static const char __pyx_k_sfMusic_get_status[] = "sfMusic.get_status";
static const char __pyx_k_sfMusic_get_volume[] = "sfMusic.get_volume";
static const char __pyx_k_sfMusic_set_volume[] = "sfMusic.set_volume";
static const char __pyx_k_sfSound_get_status[] = "sfSound.get_status";
static const char __pyx_k_sfSound_get_volume[] = "sfSound.get_volume";
static const char __pyx_k_sfSound_set_buffer[] = "sfSound.set_buffer";
static const char __pyx_k_sfSound_set_volume[] = "sfSound.set_volume";
static const char __pyx_k_sfSprite_get_alpha[] = "sfSprite.get_alpha";
static const char __pyx_k_sfSprite_get_color[] = "sfSprite.get_color";
static const char __pyx_k_sfSprite_get_scale[] = "sfSprite.get_scale";
static const char __pyx_k_sfSprite_set_alpha[] = "sfSprite.set_alpha";
static const char __pyx_k_sfSprite_set_color[] = "sfSprite.set_color";
static const char __pyx_k_sfSprite_set_scale[] = "sfSprite.set_scale";
static const char __pyx_k_sfTexture_get_size[] = "sfTexture.get_size";
static const char __pyx_k_sfTexture_set_srgb[] = "sfTexture.set_srgb";
static const char __pyx_k_Failed_to_load_font[] = "Failed to load font ";
static const char __pyx_k_TimeCollector_reset[] = "TimeCollector.reset";
static const char __pyx_k_get_elapsed_seconds[] = "get_elapsed_seconds";
static const char __pyx_k_keep_their_distance[] = "keep_their_distance";
static const char __pyx_k_map_coords_to_pixel[] = "map_coords_to_pixel";
static const char __pyx_k_map_pixel_to_coords[] = "map_pixel_to_coords";
static const char __pyx_k_set_framerate_limit[] = "set_framerate_limit";
static const char __pyx_k_sfCircleShape_clone[] = "sfCircleShape.clone";
static const char __pyx_k_sfKeyboard_localize[] = "sfKeyboard.localize";
static const char __pyx_k_sfRenderWindow_move[] = "sfRenderWindow.move";
static const char __pyx_k_sfSprite_get_center[] = "sfSprite.get_center";
static const char __pyx_k_sfSprite_intersects[] = "sfSprite.intersects";
static const char __pyx_k_sfSprite_set_center[] = "sfSprite.set_center";
static const char __pyx_k_sfString_drop_cache[] = "sfString.drop_cache";
static const char __pyx_k_sfText_get_position[] = "sfText.get_position";
static const char __pyx_k_sfText_get_pystring[] = "sfText.get_pystring";
static const char __pyx_k_sfText_get_rotation[] = "sfText.get_rotation";
static const char __pyx_k_sfText_set_position[] = "sfText.set_position";
static const char __pyx_k_sfText_set_rotation[] = "sfText.set_rotation";
static const char __pyx_k_sfTexture_is_smooth[] = "sfTexture.is_smooth";
static const char __pyx_k_sfView_get_left_top[] = "sfView.get_left_top";
static const char __pyx_k_sfView_get_rotation[] = "sfView.get_rotation";
static const char __pyx_k_sfView_set_left_top[] = "sfView.set_left_top";
static const char __pyx_k_sfView_set_rotation[] = "sfView.set_rotation";
static const char __pyx_k_t5_e7_Bd_Rq_e82Rt3b[] = "\200\021\340\016\017\330\002\027\220t\2305\240\010\250\001\330\002\021\220\027\230\001\330\002\006\200e\2107\220\"\220B\220d\230#\230R\230q\330\002\006\200e\2108\2202\220R\220t\2303\230b\240\001";
static const char __pyx_k_Failed_to_load_image[] = "Failed to load image ";
static const char __pyx_k_MathPoint2f_distance[] = "MathPoint2f.distance";
static const char __pyx_k_MathPoint3f_distance[] = "MathPoint3f.distance";
static const char __pyx_k_TimedFloat_get_timed[] = "TimedFloat.get_timed";
static const char __pyx_k_TimedFloat_get_value[] = "TimedFloat.get_value";
static const char __pyx_k_TimedFloat_set_value[] = "TimedFloat.set_value";
static const char __pyx_k_pyx_unpickle_sfMouse[] = "__pyx_unpickle_sfMouse";
static const char __pyx_k_rotate_around_center[] = "rotate_around_center";
static const char __pyx_k_sfCircleShape_rotate[] = "sfCircleShape.rotate";
static const char __pyx_k_sfEvent_get_key_code[] = "sfEvent.get_key_code";
static const char __pyx_k_sfFloatRect_contains[] = "sfFloatRect.contains";
static const char __pyx_k_sfFloatRect_get_size[] = "sfFloatRect.get_size";
static const char __pyx_k_sfMouse_get_position[] = "sfMouse.get_position";
static const char __pyx_k_sfMouse_relative_pos[] = "sfMouse.relative_pos";
static const char __pyx_k_sfMusic_get_position[] = "sfMusic.get_position";
static const char __pyx_k_sfMusic_set_position[] = "sfMusic.set_position";
static const char __pyx_k_sfRenderWindow_clear[] = "sfRenderWindow.clear";
static const char __pyx_k_sfRenderWindow_close[] = "sfRenderWindow.close";
static const char __pyx_k_sfShader_set_uniform[] = "sfShader.set_uniform";
static const char __pyx_k_sfSound_get_position[] = "sfSound.get_position";
static const char __pyx_k_sfSound_reset_buffer[] = "sfSound.reset_buffer";
static const char __pyx_k_sfSound_set_position[] = "sfSound.set_position";
static const char __pyx_k_sfString_as_pystring[] = "sfString.as_pystring";
static const char __pyx_k_sfTexture_set_smooth[] = "sfTexture.set_smooth";
static const char __pyx_k_sfVideoMode_is_valid[] = "sfVideoMode.is_valid";
static const char __pyx_k_Failed_to_load_shader[] = "Failed to load shader ";
static const char __pyx_k_MathVector2f_distance[] = "MathVector2f.distance";
static const char __pyx_k_MathVector3f_distance[] = "MathVector3f.distance";
static const char __pyx_k_TimeCollector_collect[] = "TimeCollector.collect";
static const char __pyx_k_draw_sprite_use_state[] = "draw_sprite_use_state";
static const char __pyx_k_sfRectangleShape_move[] = "sfRectangleShape.move";
static const char __pyx_k_sfShader_is_available[] = "sfShader.is_available";
static const char __pyx_k_sfSprite_get_position[] = "sfSprite.get_position";
static const char __pyx_k_sfSprite_get_rotation[] = "sfSprite.get_rotation";
static const char __pyx_k_sfSprite_set_position[] = "sfSprite.set_position";
static const char __pyx_k_sfSprite_set_rotation[] = "sfSprite.set_rotation";
static const char __pyx_k_sfText_set_fill_color[] = "sfText.set_fill_color";
static const char __pyx_k_sfTime_asMicroseconds[] = "sfTime.asMicroseconds";
static const char __pyx_k_sfTime_asMilliseconds[] = "sfTime.asMilliseconds";
static const char __pyx_k_1_U_A_t5_F_Rt3b_s_D_2Q[] = "\320\001\033\2301\330\002\031\320\031)\250\024\250U\260*\270A\330\002\027\320\027'\240t\2505\260\010\270\001\330\002\021\220\027\230\001\330\002\024\220F\230#\230R\230t\2403\240b\250\t\260\026\260s\270\"\270D\300\003\3002\300Q\330\002\n\210&\220\001";
static const char __pyx_k_A_t5_uBd_R_D_c_1_e_Qiq[] = "\200\021\330\017\020\330\016\024\220A\330\002\027\320\027'\240t\2505\260\010\270\001\330\002\021\220\027\230\001\330\002\027\220u\230B\230d\240#\240R\240}\260D\270\002\270$\270c\300\022\3001\330\002\006\200e\210:\220Q\220i\230q";
static const char __pyx_k_TransformSfSprite_flip[] = "TransformSfSprite.flip";
static const char __pyx_k_TransformSfSprite_swap[] = "TransformSfSprite.swap";
static const char __pyx_k_Unable_to_load_texture[] = "Unable to load texture ";
static const char __pyx_k_hk_A_1_kkmmn_7_1_7_N_1[] = "\200\001\360\006\000\005\010\200\220h\230k\250\033\260A\330\010\r\210^\2301\330\010\016\320\016!\320!k\320km\320mn\330\004\023\2207\230(\240!\2401\330\004\007\200|\2207\230!\330\010)\250\021\250*\260N\300!\330\004\013\2101";
static const char __pyx_k_hk_A_1_kkmmn_XQa_7_A_1[] = "\200\001\360\006\000\005\010\200\220h\230k\250\033\260A\330\010\r\210^\2301\330\010\016\320\016!\320!k\320km\320mn\330\004\023\220:\230X\240Q\240a\330\004\007\200|\2207\230!\330\010,\250A\250]\270.\310\001\330\004\013\2101";
static const char __pyx_k_q_U_q_U_q_U_q_U_q_gYaq[] = "\320\001'\240q\340\002\005\200U\210%\210q\330\002\005\200U\210%\210q\330\002\005\200U\210%\210q\330\002\005\200U\210%\210q\330\002\006\200g\210Y\220a\220q";
static const char __pyx_k_restart_asmicroseconds[] = "restart_asmicroseconds";
static const char __pyx_k_restart_asmilliseconds[] = "restart_asmilliseconds";
static const char __pyx_k_sfCircleShape_contains[] = "sfCircleShape.contains";
static const char __pyx_k_sfFloatRect_get_center[] = "sfFloatRect.get_center";
static const char __pyx_k_sfFloatRect_intersects[] = "sfFloatRect.intersects";
static const char __pyx_k_sfFloatRect_set_center[] = "sfFloatRect.set_center";
static const char __pyx_k_sfFont___reduce_cython[] = "sfFont.__reduce_cython__";
static const char __pyx_k_sfRectangleShape_clone[] = "sfRectangleShape.clone";
static const char __pyx_k_sfRenderWindow_display[] = "sfRenderWindow.display";
static const char __pyx_k_sfRenderWindow_is_open[] = "sfRenderWindow.is_open";
static const char __pyx_k_sfString_from_pystring[] = "sfString.from_pystring";
static const char __pyx_k_sfText___reduce_cython[] = "sfText.__reduce_cython__";
static const char __pyx_k_sfTime___reduce_cython[] = "sfTime.__reduce_cython__";
static const char __pyx_k_sfView___reduce_cython[] = "sfView.__reduce_cython__";
static const char __pyx_k_A_G1F_a_vWA_q_q_q_4q_4q[] = "\200\001\360\010\000\005\r\210A\330\004\014\210G\2201\220F\230,\240a\330\004\007\200v\210W\220A\330\010\022\220!\330\010\027\220q\340\010\027\220q\330\004\007\200q\330\010\017\320\017+\2504\250q\260\007\260{\300'\310\021\340\010\017\320\017+\2504\250q\260\007\260{\300!";
static const char __pyx_k_Q_g_A_g_Q_F_D_r_E_4xr_A[] = "\320\001!\240\031\250!\340\002\021\220\027\230\001\330\002\005\200Q\330\003\n\210$\210g\220_\240A\340\003\n\210$\210g\320\025%\240Q\330\002\030\230\004\230F\240\"\240D\250\007\250r\260\021\330\002\030\230\004\230E\240\022\2404\240x\250r\260\021\330\002\n\210*\220A";
static const char __pyx_k_TransformSfSprite_scale[] = "TransformSfSprite.scale";
static const char __pyx_k_pyx_unpickle_sfKeyboard[] = "__pyx_unpickle_sfKeyboard";
static const char __pyx_k_sfCircleShape_get_alpha[] = "sfCircleShape.get_alpha";
static const char __pyx_k_sfCircleShape_set_alpha[] = "sfCircleShape.set_alpha";
static const char __pyx_k_sfClock___reduce_cython[] = "sfClock.__reduce_cython__";
static const char __pyx_k_sfColor___reduce_cython[] = "sfColor.__reduce_cython__";
static const char __pyx_k_sfEvent___reduce_cython[] = "sfEvent.__reduce_cython__";
static const char __pyx_k_sfImage___reduce_cython[] = "sfImage.__reduce_cython__";
static const char __pyx_k_sfMouse___reduce_cython[] = "sfMouse.__reduce_cython__";
static const char __pyx_k_sfMusic___reduce_cython[] = "sfMusic.__reduce_cython__";
static const char __pyx_k_sfMusic_get_attenuation[] = "sfMusic.get_attenuation";
static const char __pyx_k_sfMusic_set_attenuation[] = "sfMusic.set_attenuation";
static const char __pyx_k_sfMusic_set_relative_to[] = "sfMusic.set_relative_to";
static const char __pyx_k_sfRectangleShape_rotate[] = "sfRectangleShape.rotate";
static const char __pyx_k_sfRenderWindow_get_size[] = "sfRenderWindow.get_size";
static const char __pyx_k_sfRenderWindow_get_view[] = "sfRenderWindow.get_view";
static const char __pyx_k_sfRenderWindow_set_icon[] = "sfRenderWindow.set_icon";
static const char __pyx_k_sfRenderWindow_set_view[] = "sfRenderWindow.set_view";
static const char __pyx_k_sfSound___reduce_cython[] = "sfSound.__reduce_cython__";
static const char __pyx_k_sfSound_get_attenuation[] = "sfSound.get_attenuation";
static const char __pyx_k_sfSound_set_attenuation[] = "sfSound.set_attenuation";
static const char __pyx_k_sfSound_set_relative_to[] = "sfSound.set_relative_to";
static const char __pyx_k_sfString_set_cache_size[] = "sfString.set_cache_size";
static const char __pyx_k_sfText_get_local_bounds[] = "sfText.get_local_bounds";
static const char __pyx_k_tuple_float_float_float[] = "tuple[float, float, float]";
static const char __pyx_k_Animator___reduce_cython[] = "Animator.__reduce_cython__";
static const char __pyx_k_Camera2D___reduce_cython[] = "Camera2D.__reduce_cython__";
static const char __pyx_k_MathVector2f_from_points[] = "MathVector2f.from_points";
static const char __pyx_k_MathVector2f_is_parallel[] = "MathVector2f.is_parallel";
static const char __pyx_k_MathVector3f_from_points[] = "MathVector3f.from_points";
static const char __pyx_k_MathVector3f_is_parallel[] = "MathVector3f.is_parallel";
static const char __pyx_k_TransformSfSprite_resize[] = "TransformSfSprite.resize";
static const char __pyx_k_get_elapsed_microseconds[] = "get_elapsed_microseconds";
static const char __pyx_k_get_elapsed_milliseconds[] = "get_elapsed_milliseconds";
static const char __pyx_k_set_mouse_cursor_visible[] = "set_mouse_cursor_visible";
static const char __pyx_k_sfCircleShape_get_radius[] = "sfCircleShape.get_radius";
static const char __pyx_k_sfCircleShape_intersects[] = "sfCircleShape.intersects";
static const char __pyx_k_sfCircleShape_set_radius[] = "sfCircleShape.set_radius";
static const char __pyx_k_sfEvent_get_mouse_button[] = "sfEvent.get_mouse_button";
static const char __pyx_k_sfEvent_get_text_unicode[] = "sfEvent.get_text_unicode";
static const char __pyx_k_sfFloatRect_get_position[] = "sfFloatRect.get_position";
static const char __pyx_k_sfFont___setstate_cython[] = "sfFont.__setstate_cython__";
static const char __pyx_k_sfMouse_relative_to_rect[] = "sfMouse.relative_to_rect";
static const char __pyx_k_sfMusic_get_min_distance[] = "sfMusic.get_min_distance";
static const char __pyx_k_sfMusic_set_min_distance[] = "sfMusic.set_min_distance";
static const char __pyx_k_sfRenderWindow_draw_text[] = "sfRenderWindow.draw_text";
static const char __pyx_k_sfShader___reduce_cython[] = "sfShader.__reduce_cython__";
static const char __pyx_k_sfSound_get_min_distance[] = "sfSound.get_min_distance";
static const char __pyx_k_sfSound_set_min_distance[] = "sfSound.set_min_distance";
static const char __pyx_k_sfSprite___reduce_cython[] = "sfSprite.__reduce_cython__";
static const char __pyx_k_sfSprite_collide_shift_h[] = "sfSprite.collide_shift_h";
static const char __pyx_k_sfSprite_collide_shift_v[] = "sfSprite.collide_shift_v";
static const char __pyx_k_sfSprite_intersects_rect[] = "sfSprite.intersects_rect";
static const char __pyx_k_sfString___reduce_cython[] = "sfString.__reduce_cython__";
static const char __pyx_k_sfText___setstate_cython[] = "sfText.__setstate_cython__";
static const char __pyx_k_sfText_get_global_bounds[] = "sfText.get_global_bounds";
static const char __pyx_k_sfTime___setstate_cython[] = "sfTime.__setstate_cython__";
static const char __pyx_k_sfView___setstate_cython[] = "sfView.__setstate_cython__";
static const char __pyx_k_Failed_to_load_music_from[] = "Failed to load music from ";
static const char __pyx_k_Failed_to_load_sound_from[] = "Failed to load sound from ";
static const char __pyx_k_MathVector2f_multiply_num[] = "MathVector2f.multiply_num";
static const char __pyx_k_MathVector3f_multiply_num[] = "MathVector3f.multiply_num";
static const char __pyx_k_TransformSfSprite_similar[] = "TransformSfSprite.similar";
static const char __pyx_k_sfClock___setstate_cython[] = "sfClock.__setstate_cython__";
static const char __pyx_k_sfClock_restart_asseconds[] = "sfClock.restart_asseconds";
static const char __pyx_k_sfColor___setstate_cython[] = "sfColor.__setstate_cython__";
static const char __pyx_k_sfEvent___setstate_cython[] = "sfEvent.__setstate_cython__";
static const char __pyx_k_sfImage___setstate_cython[] = "sfImage.__setstate_cython__";
static const char __pyx_k_sfKeyboard_is_key_pressed[] = "sfKeyboard.is_key_pressed";
static const char __pyx_k_sfMouse___setstate_cython[] = "sfMouse.__setstate_cython__";
static const char __pyx_k_sfMouse_is_button_pressed[] = "sfMouse.is_button_pressed";
static const char __pyx_k_sfMusic___setstate_cython[] = "sfMusic.__setstate_cython__";
static const char __pyx_k_sfRectangleShape_contains[] = "sfRectangleShape.contains";
static const char __pyx_k_sfRectangleShape_get_size[] = "sfRectangleShape.get_size";
static const char __pyx_k_sfRectangleShape_set_size[] = "sfRectangleShape.set_size";
static const char __pyx_k_sfRenderWindow_poll_event[] = "sfRenderWindow.poll_event";
static const char __pyx_k_sfRenderWindow_set_active[] = "sfRenderWindow.set_active";
static const char __pyx_k_sfSound___setstate_cython[] = "sfSound.__setstate_cython__";
static const char __pyx_k_sfSprite_get_local_bounds[] = "sfSprite.get_local_bounds";
static const char __pyx_k_sfText_set_character_size[] = "sfText.set_character_size";
static const char __pyx_k_sfTexture___reduce_cython[] = "sfTexture.__reduce_cython__";
static const char __pyx_k_Animator___setstate_cython[] = "Animator.__setstate_cython__";
static const char __pyx_k_Animator_get_current_index[] = "Animator.get_current_index";
static const char __pyx_k_Camera2D___setstate_cython[] = "Camera2D.__setstate_cython__";
static const char __pyx_k_Failed_to_load_font_from_0[] = "Failed to load font from {0}!";
static const char __pyx_k_MathVector2f_angle_between[] = "MathVector2f.angle_between";
static const char __pyx_k_MathVector3f_angle_between[] = "MathVector3f.angle_between";
static const char __pyx_k_TimedFloat___reduce_cython[] = "TimedFloat.__reduce_cython__";
static const char __pyx_k_TransformSfSprite_put_like[] = "TransformSfSprite.put_like";
static const char __pyx_k_a_Q_g_A_g_Q_IRt7_A_9Bd_A_g[] = "\200\021\330\023\024\330\023\024\330\r\026\220a\340\002\021\220\027\230\001\330\002\005\200Q\330\003\n\210$\210g\220_\240A\340\003\n\210$\210g\320\025%\240Q\330\002\024\220I\230R\230t\2407\250\"\250A\330\002\023\2209\230B\230d\240(\250\"\250A\330\002\006\200g\210\\\230\021\230&\240\001";
static const char __pyx_k_a_a_q_Cr_c_4q_Cr_c_4q_Cr_a[] = "\320\001&\240a\330\002\t\210\025\210a\330\003\007\200q\210\004\210C\210r\220\021\220$\220c\230\022\2304\230q\240\004\240C\240r\250\021\250$\250c\260\022\2604\260q\270\004\270C\270r\300\021\300$\300a";
static const char __pyx_k_q_a_q_Cr_c_4q_Cr_c_4q_Cr_a[] = "\320\001'\240q\330\002\t\210\025\210a\330\003\007\200q\210\004\210C\210r\220\021\220$\220c\230\022\2304\230q\240\004\240C\240r\250\021\250$\250c\260\022\2604\260q\270\004\270C\270r\300\021\300$\300a";
static const char __pyx_k_set_rotation_around_center[] = "set_rotation_around_center";
static const char __pyx_k_sfCircleShape_get_position[] = "sfCircleShape.get_position";
static const char __pyx_k_sfCircleShape_get_rotation[] = "sfCircleShape.get_rotation";
static const char __pyx_k_sfCircleShape_set_position[] = "sfCircleShape.set_position";
static const char __pyx_k_sfCircleShape_set_rotation[] = "sfCircleShape.set_rotation";
static const char __pyx_k_sfKeyboard___reduce_cython[] = "sfKeyboard.__reduce_cython__";
static const char __pyx_k_sfRectangleShape_get_alpha[] = "sfRectangleShape.get_alpha";
static const char __pyx_k_sfRectangleShape_set_alpha[] = "sfRectangleShape.set_alpha";
static const char __pyx_k_sfRenderWindow_draw_sprite[] = "sfRenderWindow.draw_sprite";
static const char __pyx_k_sfRenderWindow_set_visible[] = "sfRenderWindow.set_visible";
static const char __pyx_k_sfShader___setstate_cython[] = "sfShader.__setstate_cython__";
static const char __pyx_k_sfSprite___setstate_cython[] = "sfSprite.__setstate_cython__";
static const char __pyx_k_sfSprite_get_global_bounds[] = "sfSprite.get_global_bounds";
static const char __pyx_k_sfString___setstate_cython[] = "sfString.__setstate_cython__";
static const char __pyx_k_Failed_to_load_image_from_0[] = "Failed to load image from {0}!";
static const char __pyx_k_Failed_to_load_music_from_0[] = "Failed to load music from {0}!";
static const char __pyx_k_Failed_to_load_sound_from_0[] = "Failed to load sound from {0}!";
static const char __pyx_k_MathPoint2f___reduce_cython[] = "MathPoint2f.__reduce_cython__";
static const char __pyx_k_MathPoint3f___reduce_cython[] = "MathPoint3f.__reduce_cython__";
static const char __pyx_k_MathVector2f_scalar_product[] = "MathVector2f.scalar_product";
static const char __pyx_k_MathVector2f_vector_product[] = "MathVector2f.vector_product";
static const char __pyx_k_MathVector3f_scalar_product[] = "MathVector3f.scalar_product";
static const char __pyx_k_MathVector3f_vector_product[] = "MathVector3f.vector_product";
static const char __pyx_k_d_1_t5_wa_c_Bd_Rq_c_Bd_Rq_Q[] = "\320\001\031\230\021\330\002\026\220d\230%\230|\2501\330\002\027\220t\2305\240\010\250\001\330\002\027\220w\230a\330\002\006\200c\210\023\210B\210d\220#\220R\220q\330\002\006\200c\210\023\210B\210d\220#\220R\220q\330\002\n\210#\210Q";
static const char __pyx_k_sfClock_get_elapsed_seconds[] = "sfClock.get_elapsed_seconds";
static const char __pyx_k_sfFloatRect___reduce_cython[] = "sfFloatRect.__reduce_cython__";
static const char __pyx_k_sfRectangleShape_intersects[] = "sfRectangleShape.intersects";
static const char __pyx_k_sfRenderWindow_get_position[] = "sfRenderWindow.get_position";
static const char __pyx_k_sfRenderWindow_set_position[] = "sfRenderWindow.set_position";
static const char __pyx_k_sfTexture___setstate_cython[] = "sfTexture.__setstate_cython__";
static const char __pyx_k_sfVideoMode___reduce_cython[] = "sfVideoMode.__reduce_cython__";
static const char __pyx_k_sfView_rotate_around_center[] = "sfView.rotate_around_center";
static const char __pyx_k_A_G1F_a_vWA_q_q_q_AWKwa_AWKq[] = "\200\001\360\010\000\005\r\210A\330\004\014\210G\2201\220F\230,\240a\330\004\007\200v\210W\220A\330\010\022\220!\330\010\027\220q\340\010\027\220q\330\004\007\200q\330\010\017\320\017(\250\004\250A\250W\260K\270w\300a\340\010\017\320\017(\250\004\250A\250W\260K\270q";
static const char __pyx_k_Could_not_convert_to_unicode[] = "Could not convert to unicode.";
static const char __pyx_k_Failed_to_load_shader_from_0[] = "Failed to load shader from {0}!";
static const char __pyx_k_MathVector2f___reduce_cython[] = "MathVector2f.__reduce_cython__";
static const char __pyx_k_MathVector3f___reduce_cython[] = "MathVector3f.__reduce_cython__";
static const char __pyx_k_TimedFloat___setstate_cython[] = "TimedFloat.__setstate_cython__";
static const char __pyx_k_hk_A_1_kkmmn_HAQ_7_314H_VW_1[] = "\200\001\360\006\000\005\010\200\220h\230k\250\033\260A\330\010\r\210^\2301\330\010\016\320\016!\320!k\320km\320mn\330\004\023\320\023$\240H\250A\250Q\330\004\007\200|\2207\230!\330\0103\2601\3204H\310\016\320VW\330\004\013\2101";
static const char __pyx_k_l_T_U_1Ct3a_3a_s_Rt1_s_Rt1_Q[] = "\200\021\330+,\330\002\036\230l\250!\330\002\005\200T\210\024\210U\220)\2301\230C\230t\2403\240a\330\003\013\2103\210a\330\002\017\210s\220#\220R\220t\2301\330\002\017\210s\220#\220R\220t\2301\330\002\n\210#\210Q";
static const char __pyx_k_q_d_Q_G9A_d_Bha_2U_RuA_7_T_A[] = "\320\001'\240q\330\002\026\320\026&\240d\250'\260\034\270Q\330\002\030\320\030(\250\004\250G\2609\270A\330\002\036\230d\240'\250\033\260B\260h\270a\330\002\025\220[\240\003\2402\240U\250-\260{\300#\300R\300u\310A\330\002\t\210\030\220\021\220)\2307\240(\250#\250T\260\023\260A";
static const char __pyx_k_sfCircleShape_get_fill_color[] = "sfCircleShape.get_fill_color";
static const char __pyx_k_sfCircleShape_set_fill_color[] = "sfCircleShape.set_fill_color";
static const char __pyx_k_sfKeyboard___setstate_cython[] = "sfKeyboard.__setstate_cython__";
static const char __pyx_k_sfVideoMode_get_desktop_mode[] = "sfVideoMode.get_desktop_mode";
static const char __pyx_k_Failed_to_load_texture_from_0[] = "Failed to load texture from {0}!";
static const char __pyx_k_MathPoint2f___setstate_cython[] = "MathPoint2f.__setstate_cython__";
static const char __pyx_k_MathPoint3f___setstate_cython[] = "MathPoint3f.__setstate_cython__";
static const char __pyx_k_MathVector2f_is_perpendicular[] = "MathVector2f.is_perpendicular";
static const char __pyx_k_MathVector3f_is_perpendicular[] = "MathVector3f.is_perpendicular";
static const char __pyx_k_Q_g_A_g_Q_T_R_T_Rq_ha_gQ_iq_j[] = "\200\021\330\r\016\330\r\016\330\r\016\330\r\016\330\017\030\230\001\340\002\005\200Q\330\003\n\210$\210g\220_\240A\340\003\n\210$\210g\320\025%\240Q\330\002\025\220T\230\021\230#\230R\230~\250T\260\021\260#\260R\260q\340\002\006\200h\210a\330\002\006\200g\210Q\330\002\006\200i\210q\330\002\006\200j\220\001\330\002\t\210\024\210[\230\001\230\021";
static const char __pyx_k_TimeCollector___reduce_cython[] = "TimeCollector.__reduce_cython__";
static const char __pyx_k_sfCircleShape___reduce_cython[] = "sfCircleShape.__reduce_cython__";
static const char __pyx_k_sfFloatRect___setstate_cython[] = "sfFloatRect.__setstate_cython__";
static const char __pyx_k_sfRectangleShape_get_position[] = "sfRectangleShape.get_position";
static const char __pyx_k_sfRectangleShape_get_rotation[] = "sfRectangleShape.get_rotation";
static const char __pyx_k_sfRectangleShape_set_position[] = "sfRectangleShape.set_position";
static const char __pyx_k_sfRectangleShape_set_rotation[] = "sfRectangleShape.set_rotation";
static const char __pyx_k_sfSoundBuffer___reduce_cython[] = "sfSoundBuffer.__reduce_cython__";
static const char __pyx_k_sfVideoMode___setstate_cython[] = "sfVideoMode.__setstate_cython__";
static const char __pyx_k_MathVector2f___setstate_cython[] = "MathVector2f.__setstate_cython__";
static const char __pyx_k_MathVector3f___setstate_cython[] = "MathVector3f.__setstate_cython__";
static const char __pyx_k_Q_7_7_7_7_Q_Qe7_q_Qe7_q_Q_e6_5[] = "\200\021\360\010\000\027\030\330\022\023\330\022\023\330\017\020\330\007\010\340\002\021\220\027\230\001\330\002\005\200Q\330\003\013\2107\220'\230\037\250\001\330\003\013\2107\220'\230\037\250\001\340\003\013\2107\220'\320\031)\250\021\330\003\013\2107\220'\320\031)\250\021\330\002\005\200Q\330\003\n\210'\220\034\230Q\230e\2407\250%\250q\340\003\n\210'\220\034\230Q\230e\2407\250%\250q\340\002\022\220(\230!\330\002\005\200Q\330\003\016\210e\2206\230\022\2305\240\007\240r\250\021\330\003\016\210e\2206\230\022\2305\240\007\240r\250\021\330\003\006\200a\330\004\t\210\031\220\"\220A\340\004\t\210\031\220\"\220A\330\002\005\200Q\330\003\006\200a\330\004\t\210\025\210h\220b\230\005\230Q\340\004\t\210\025\210h\220b\230\005\230Q\330\002\005\200Q\330\003\n\210'\220\025\220a\220t\2301\340\003\n\210'\220\025\220a\220t\2301";
static const char __pyx_k_Q_D_a_fG_D_q_fG_1_T_1_6_b_a_HM[] = "\200\021\340\017\030\230\001\340\002\005\200Q\330\003\014\210D\220\007\220\240a\330\003\016\210f\220G\230?\250!\340\003\014\210D\220\007\320\027'\240q\330\003\016\210f\220G\320\033+\2501\330\002\005\200T\210\026\210{\230!\2301\330\003\n\210!\330\002\022\220(\230'\240\027\250\001\330\002\022\220&\230\013\2406\250\025\250b\260\006\260a\330\002\024\220H\230M\250\030\260\025\260b\270\010\300\001\330\002\032\230(\240%\240r\250\030\260\030\270\022\2701\330\002\025\220[\240\002\240!\330\002\005\200V\2102\210Q\330\003\010\210\005\210R\210q\330\007\r\210R\210q\330\003\010\210\005\210R\210q\340\003\010\210\001\210\030\220\030\230\022\2301\330\002\006\200g\210U\220!\2204\220q\330\002\t\210\021";
static const char __pyx_k_Q_F_F_vRvWBa_uBfHBa_1A_Q_6_q_6[] = "\200\021\360\006\000\023\024\330\017\020\330\007\010\330\002\021\220\027\230\001\340\002\005\200Q\330\003\014\210F\220'\230\037\250\001\340\003\014\210F\220'\320\031)\250\021\330\002\031\230\026\230v\240R\240v\250W\260B\260a\330\002\031\230\026\230u\240B\240f\250H\260B\260a\330\002\010\210\007\210|\2301\230A\340\002\005\200Q\330\003\013\2106\220\027\230\017\240q\340\003\013\2106\220\027\320\030(\250\001\330\002\031\230\025\230f\240B\240e\2507\260\"\260A\330\002\031\230\025\230e\2402\240U\250(\260\"\260A\330\002\022\220*\230B\230a\330\002\022\220*\230B\230a\330\002\010\210\007\210u\220A\220T\230\021";
static const char __pyx_k_T_D_Q_7_7_7_7_vRuF_A_5_RuE_1_Q[] = "\200\021\360\010\000\026\027\330\025\026\330\020\021\330\020\021\330\026\027\330\017\020\330\007\010\330\002\005\200T\210\027\220\004\220D\230\001\330\003\n\210!\340\002\005\200Q\330\003\013\2107\220'\230\037\250\001\330\003\013\2107\220'\230\037\250\001\340\003\013\2107\220'\320\031)\250\021\330\003\013\2107\220'\320\031)\250\021\330\002\021\220\027\230\001\360\010\000\003\023\220(\230!\330\002\032\230%\230v\240R\240u\250F\260\"\260A\330\002\033\2305\240\005\240R\240u\250E\260\022\2601\330\002\005\200Q\330\003\016\210e\2206\230\022\2305\240\007\240r\250\021\330\003\016\210e\2206\230\022\2305\240\007\240r\250\021\330\003\n\210$\210a\210y\230\002\230!\330\003\010\210\013\2202\220Q\330\003\006\200c\210\023\210B\210d\220$\220a\330\004\013\2101\330\002\005\200Q\330\003\016\210e\2205\230\002\230%\230x\240r\250\021\330\003\016\210e\2205\230\002\230%\230x\240r\250\021\330\003\n\210$\210a\210y\230\002\230!\330\003\010\210\013\2202\220Q\330\003\006\200c\210\023\210B\210d\220#\220S\230\001\330\004\013\2101\330\002\005\200Q\330\003\006\200d\210!\330\004\013\2101\330\003\006\200d\210!\330\004\013\2101\330\003\n\210'\220\025\220a\220t\2301\340\003\006\200a\330\004\013\2101\330\003\006\200a\330\004\013\2101\330\003\n\210'\220\025\220a\220t\2301\330\002\t\210\021";
static const char __pyx_k_TransformSfSprite_get_distance[] = "TransformSfSprite.get_distance";
static const char __pyx_k_pyx_unpickle_TransformSfSprite[] = "__pyx_unpickle_TransformSfSprite";
static const char __pyx_k_sfCircleShape_get_local_bounds[] = "sfCircleShape.get_local_bounds";
static const char __pyx_k_sfClock_restart_asmicroseconds[] = "sfClock.restart_asmicroseconds";
static const char __pyx_k_sfClock_restart_asmilliseconds[] = "sfClock.restart_asmilliseconds";
static const char __pyx_k_sfRenderStates___reduce_cython[] = "sfRenderStates.__reduce_cython__";
static const char __pyx_k_sfRenderWindow___reduce_cython[] = "sfRenderWindow.__reduce_cython__";
static const char __pyx_k_sfRenderWindow_draw_rect_shape[] = "sfRenderWindow.draw_rect_shape";
static const char __pyx_k_t1D_b_t1D_Rq_t_r_1_t_r_1_6_Qiy[] = "\200\021\340\022\023\330\022\023\330\r\016\330\r\016\330\002\027\220t\2301\230D\240\006\240b\250\001\330\002\027\220t\2301\230D\240\005\240R\240q\330\002\027\220t\230<\240r\250\030\260\022\2601\330\002\027\220t\230<\240r\250\030\260\022\2601\330\002\003\2006\210\027\220\005\220Q\220i\230y\250\004\250J\260a";
static const char __pyx_k_5_A_d_A_V2Q_1_1_V3a_q_S_q_q_m4q[] = "\320\001 \240\001\330\002\023\2205\230\004\230A\330\002\026\220d\230(\240\"\240A\330\002\005\200V\2102\210Q\330\003\013\2101\330\003\007\200|\2201\330\002\005\200V\2103\210a\330\003\007\320\007\031\230\021\330\003\007\320\007\027\220q\330\007\r\210S\220\001\330\003\007\320\007\031\230\021\330\003\007\320\007\027\220q\340\003\007\320\007\031\230\021\330\003\007\320\007\027\220q\330\002\006\200m\2204\220q\330\002\t\210\021";
static const char __pyx_k_A_G1F_a_vWA_q_q_q_2_awk_PQ_2_aw[] = "\200\001\360\010\000\005\r\210A\330\004\014\210G\2201\220F\230,\240a\330\004\007\200v\210W\220A\330\010\022\220!\330\010\027\220q\340\010\027\220q\330\004\007\200q\330\010\017\320\0172\260$\260a\260w\270k\310\027\320PQ\340\010\017\320\0172\260$\260a\260w\270k\310\021";
static const char __pyx_k_Q_7_7_7_7_Q_Qe7_q_Qe7_q_Q_q_y_X[] = "\200\021\360\010\000\023\024\330\023\024\330\017\020\330\007\010\340\002\005\200Q\330\003\013\2107\220'\230\037\250\001\330\003\013\2107\220'\230\037\250\001\340\003\013\2107\220'\320\031)\250\021\330\003\013\2107\220'\320\031)\250\021\330\002\005\200Q\330\003\n\210'\220\034\230Q\230e\2407\250%\250q\330\003\n\210'\220\034\230Q\230e\2407\250%\250q\330\002\005\200Q\330\003\017\210q\220\007\220y\240\005\240X\250U\260!\330\003\017\210q\220\007\220y\240\005\240X\250U\260!";
static const char __pyx_k_Q_7_7_7_7_Q_a_7_auG5_7_auG5_Q_a[] = "\200\021\360\010\000\027\030\330\025\026\330\026\027\330\017\020\330\007\010\340\002\005\200Q\330\003\013\2107\220'\230\037\250\001\330\003\013\2107\220'\230\037\250\001\340\003\013\2107\220'\320\031)\250\021\330\003\013\2107\220'\320\031)\250\021\330\002\005\200Q\330\003\006\200a\330\004\013\2107\220,\230a\230u\240G\2505\260\001\340\004\013\2107\220,\230a\230u\240G\2505\260\001\330\002\005\200Q\330\003\006\200a\330\004\020\220\001\220\027\230\t\240\025\240h\250e\2601\340\004\020\220\001\220\027\230\t\240\025\240h\250e\2601";
static const char __pyx_k_Q_7_7_7_7_V2U_1_U_E_1_V2U_1_U_E[] = "\200\021\360\010\000\020\021\330\007\010\340\002\021\220\027\230\001\330\002\005\200Q\330\003\013\2107\220'\230\037\250\001\330\003\013\2107\220'\230\037\250\001\340\003\013\2107\220'\320\031)\250\021\330\003\013\2107\220'\320\031)\250\021\330\002\030\230\005\230V\2402\240U\250'\260\022\2601\330\002\030\230\005\230U\240\"\240E\250\030\260\022\2601\330\002\030\230\005\230V\2402\240U\250'\260\022\2601\330\002\030\230\005\230U\240\"\240E\250\030\260\022\2601\330\002\t\210\025\210a\330\003\007\200q\210\t\220\022\220:\230S\240\002\240$\240a\240y\260\002\260*\270A";
static const char __pyx_k_Q_D_a_fG_D_q_fG_1_T_1_F_HN_1_V2[] = "\200\021\340\017\030\230\001\340\002\005\200Q\330\003\014\210D\220\007\220\240a\330\003\016\210f\220G\230?\250!\340\003\014\210D\220\007\320\027'\240q\330\003\016\210f\220G\320\033+\2501\330\002\005\200T\210\026\210{\230!\2301\330\003\n\210!\330\002\021\220\027\230\t\240\030\250\021\330\002\022\220&\230\014\240F\250&\260\002\260&\270\001\330\002\024\220H\230N\250(\260&\270\002\270(\300!\330\002\032\230(\240&\250\002\250(\260'\270\022\2701\330\002\025\220[\240\002\240!\330\002\005\200V\2102\210Q\330\003\010\210\005\210R\210q\330\007\r\210R\210q\330\003\010\210\005\210R\210q\340\003\010\210\001\210\030\220\027\230\002\230!\330\002\006\200g\210U\220!\2204\220q\330\002\t\210\021";
static const char __pyx_k_Q_F_F_Q_y_q_iwa_hgWA_Yc_a_F_F_a[] = "\200\021\360\006\000\021\022\330\021\022\330\020\021\330\020\021\330\022\023\330\022\023\330\017\020\330\007\010\340\002\005\200Q\330\003\014\210F\220'\230\037\250\001\340\003\014\210F\220'\320\031)\250\021\330\002\005\200Q\330\003\030\230\001\230\026\230y\250\001\330\007\010\330\003\031\230\021\230&\240\t\250\021\340\003\017\210q\220\006\220i\230w\240a\330\002&\240h\250g\260W\270A\330\002\005\200Y\210c\220\021\330\003\006\200a\330\004\014\210F\220'\230\037\250\001\340\004\014\210F\220'\320\031)\250\021\330\003\006\200a\330\004\017\210v\220V\2302\230V\2407\250\"\250A\330\004\017\210u\220F\230\"\230E\240\027\250\002\250!\330\004\t\210\031\220\"\220A\330\003\006\200a\330\004\t\210\026\210x\220r\230\025\230a\330\003\t\210\027\220\005\220Q\220d\230!";
static const char __pyx_k_Q_F_F_vRvWBa_uBfHBa_waq_Q_6_q_6[] = "\200\021\360\006\000\023\024\330\017\020\330\007\010\330\002\021\220\027\230\001\340\002\005\200Q\330\003\014\210F\220'\230\037\250\001\340\003\014\210F\220'\320\031)\250\021\330\002\031\230\026\230v\240R\240v\250W\260B\260a\330\002\031\230\026\230u\240B\240f\250H\260B\260a\330\002\010\210\007\210w\220a\220q\340\002\005\200Q\330\003\013\2106\220\027\230\017\240q\340\003\013\2106\220\027\320\030(\250\001\330\002\031\230\025\230f\240B\240e\2507\260\"\260A\330\002\031\230\025\230e\2402\240U\250(\260\"\260A\330\002\022\220*\230B\230a\330\002\022\220*\230B\230a\330\002\010\210\007\210u\220A\220T\230\021";
static const char __pyx_k_Q_S_3b_Cr_4s_AS_c_1A_S_3b_Cr_Qc[] = "\320\001-\250Q\330\002\021\220\024\220S\230\002\230!\2303\230b\240\004\240C\240r\250\021\250!\330\002\021\220\022\2204\220s\230\"\230A\230S\240\002\240$\240c\250\022\2501\250A\330\002\021\220\024\220S\230\002\230!\2303\230b\240\004\240C\240r\250\021\250!\330\002\t\210\034\220Q\220c\230\023\230A";
static const char __pyx_k_TimeCollector___setstate_cython[] = "TimeCollector.__setstate_cython__";
static const char __pyx_k_TransformSfSprite_rotate_around[] = "TransformSfSprite.rotate_around_center";
static const char __pyx_k_Yc_1_c_Bha_HA_D_q_1HL_Kt1E_1A_H[] = "\200\021\330$%\330\002\005\200Y\210c\220\030\230\021\330\003\n\210(\220(\230!\2301\340\003\006\200c\210\021\210(\220*\230B\230h\240a\330\004\014\210H\220A\220\\\240\030\250\021\250!\340\004\014\210D\220\001\220\030\230\030\240\026\240q\330\004\020\220\003\2201\220H\230L\250\002\250!\330\004\014\210K\220t\2301\230E\240\022\2401\240A\330\004\014\210H\220A\220\\\240\030\250\021\250!\330\003\n\210(\220(\230!\2301";
static const char __pyx_k_d_A_4v_A_4v_A_Q_q_3b_3b_AS_2S_2[] = "\200\021\330\014\r\330\014\r\330\014\022\220!\330\002\026\220d\230&\240\014\250A\330\002\033\2304\230v\240_\260A\330\002\033\2304\230v\240_\260A\330\002\030\230\005\230Q\330\003\007\200q\210\003\2103\210b\220\003\2203\220b\230\004\230A\230S\240\003\2402\240S\250\003\2502\250T\260\021\260#\260S\270\002\270#\270Q\360\006\000\003\006\200Y\210b\220\001\330\003\n\210!\340\003\n\210!\330\002\034\230L\250\003\250<\260r\270\034\300S\310\005\310R\310q\330\002\006\200f\210J\220a\220q\330\002\t\210\021";
static const char __pyx_k_gYa_Q_a_q_y_Q_Q_Q_y_Q_S_A_S_A_1[] = "\200\021\360\006\000\020\021\330\017\020\330\r\016\330\007\010\330\002\030\320\030(\250\006\250g\260Y\270a\340\002\005\200Q\330\003\n\210&\220\007\220\240a\340\003\n\210&\220\007\320\027'\240q\330\002\022\220%\220y\240\005\240Q\330\002\005\200Q\330\003\n\210!\330\002\005\200Q\330\003\n\210!\330\002\010\210\007\210y\230\001\230\024\230Q\330\002\022\220(\230!\330\002\005\200S\210\002\210!\330\003\010\210\004\210A\330\002\005\200S\210\002\210!\330\003\010\210\004\210A\330\002\010\210\007\210|\2301\230D\240\007\240t\2501\330\002\010\210\007\210u\220A\220T\230\021";
static const char __pyx_k_q_3nHA_IQgT_HD_PQ_L_T_9D_3a_y_2[] = "\200\021\330)*\330\002\032\230#\230^\250<\260q\330\002\033\2303\230n\250H\260A\330\002\034\230I\240Q\240g\250T\260\027\270\004\270H\300D\310\010\320PQ\330\002$\240L\260\001\330\002\005\200T\210\030\220\031\230!\2309\240D\250\t\260\021\330\003\013\2103\210a\330\002\017\210y\230\003\2302\230W\240A\330\002\017\210y\230\003\2302\230W\240A\330\002\n\210#\210Q";
static const char __pyx_k_sfCircleShape___setstate_cython[] = "sfCircleShape.__setstate_cython__";
static const char __pyx_k_sfCircleShape_get_global_bounds[] = "sfCircleShape.get_global_bounds";
static const char __pyx_k_sfRectangleShape_get_fill_color[] = "sfRectangleShape.get_fill_color";
static const char __pyx_k_sfRectangleShape_set_fill_color[] = "sfRectangleShape.set_fill_color";
static const char __pyx_k_sfRenderWindow_get_desktop_rect[] = "sfRenderWindow.get_desktop_rect";
static const char __pyx_k_sfRenderWindow_set_mouse_cursor[] = "sfRenderWindow.set_mouse_cursor_visible";
static const char __pyx_k_sfSoundBuffer___setstate_cython[] = "sfSoundBuffer.__setstate_cython__";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0[] = "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())";
static const char __pyx_k_Note_that_Cython_is_deliberately[] = "Note that Cython is deliberately stricter than PEP-484 and rejects subclasses of builtin types. If you need to pass subclasses then set the 'annotation_typing' directive to False.";
static const char __pyx_k_TransformSfSprite___reduce_cytho[] = "TransformSfSprite.__reduce_cython__";
static const char __pyx_k_TransformSfSprite___setstate_cyt[] = "TransformSfSprite.__setstate_cython__";
static const char __pyx_k_TransformSfSprite_keep_their_dis[] = "TransformSfSprite.keep_their_distance";
static const char __pyx_k_TransformSfSprite_move_with_angl[] = "TransformSfSprite.move_with_angle";
static const char __pyx_k_TransformSfSprite_set_rotation_a[] = "TransformSfSprite.set_rotation_around_center";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_sfClock_get_elapsed_microseconds[] = "sfClock.get_elapsed_microseconds";
static const char __pyx_k_sfClock_get_elapsed_milliseconds[] = "sfClock.get_elapsed_milliseconds";
static const char __pyx_k_sfRectangleShape___reduce_cython[] = "sfRectangleShape.__reduce_cython__";
static const char __pyx_k_sfRectangleShape___setstate_cyth[] = "sfRectangleShape.__setstate_cython__";
static const char __pyx_k_sfRectangleShape_get_global_boun[] = "sfRectangleShape.get_global_bounds";
static const char __pyx_k_sfRectangleShape_get_local_bound[] = "sfRectangleShape.get_local_bounds";
static const char __pyx_k_sfRenderStates___setstate_cython[] = "sfRenderStates.__setstate_cython__";
static const char __pyx_k_sfRenderWindow___setstate_cython[] = "sfRenderWindow.__setstate_cython__";
static const char __pyx_k_sfRenderWindow_draw_circle_shape[] = "sfRenderWindow.draw_circle_shape";
static const char __pyx_k_sfRenderWindow_draw_sprite_use_s[] = "sfRenderWindow.draw_sprite_use_state";
static const char __pyx_k_sfRenderWindow_map_coords_to_pix[] = "sfRenderWindow.map_coords_to_pixel";
static const char __pyx_k_sfRenderWindow_map_pixel_to_coor[] = "sfRenderWindow.map_pixel_to_coords";
static const char __pyx_k_sfRenderWindow_set_framerate_lim[] = "sfRenderWindow.set_framerate_limit";
static const char __pyx_k_sfView_set_rotation_around_cente[] = "sfView.set_rotation_around_center";
/* #### Code section: decls ### */
static PyObject *__pyx_pf_9pysfml261_to_radians(CYTHON_UNUSED PyObject *__pyx_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_2to_degrees(CYTHON_UNUSED PyObject *__pyx_self, float __pyx_v_radians); /* proto */
static int __pyx_pf_9pysfml261_11MathPoint2f___cinit__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, float __pyx_v_x, float __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_2distance(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_5pos_x___get__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11MathPoint2f_5pos_x_2__set__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, float __pyx_v_x); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_5pos_y___get__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11MathPoint2f_5pos_y_2__set__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, float __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_12MathVector2f___cinit__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, float __pyx_v_x, float __pyx_v_y); /* proto */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_2sum(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_4sub(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_6scalar_product(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_8cosin(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_10vector_product(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_12sinus(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_14distance(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_16multiply_num(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, float __pyx_v_num); /* proto */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_18basis(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_20is_parallel(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_22is_perpendicular(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_24angle_between(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v, int __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_5modul___get__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_26from_points(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p1, struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p2); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_5pos_x___get__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_12MathVector2f_5pos_x_2__set__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, float __pyx_v_x); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_5pos_y___get__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_12MathVector2f_5pos_y_2__set__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, float __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_28__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector2f_30__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_11MathPoint3f___cinit__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_2distance(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_5pos_x___get__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11MathPoint3f_5pos_x_2__set__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, float __pyx_v_x); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_5pos_y___get__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11MathPoint3f_5pos_y_2__set__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, float __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_5pos_z___get__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11MathPoint3f_5pos_z_2__set__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, float __pyx_v_z); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_12MathVector3f___cinit__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z); /* proto */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_2sum(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_4sub(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_6scalar_product(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_8cosin(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_10vector_product(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_12sinus(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_14distance(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_16multiply_num(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_num); /* proto */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_18basis(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_20is_parallel(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_22is_perpendicular(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_24angle_between(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v, int __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_5modul___get__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_26from_points(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p1, struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p2); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_5pos_x___get__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_12MathVector3f_5pos_x_2__set__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_x); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_5pos_y___get__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_12MathVector3f_5pos_y_2__set__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_5pos_z___get__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_12MathVector3f_5pos_z_2__set__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_z); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_28__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_12MathVector3f_30__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_13sfSoundBuffer___cinit__(struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_self, PyObject *__pyx_v_filename); /* proto */
static void __pyx_pf_9pysfml261_13sfSoundBuffer_2__dealloc__(struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfSoundBuffer_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfSoundBuffer_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_7sfSound___cinit__(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_buffer); /* proto */
static void __pyx_pf_9pysfml261_7sfSound_2__dealloc__(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_4play(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_6pause(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_8stop(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_10get_status(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_12set_buffer(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_buffer); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_14reset_buffer(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_16set_relative_to(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_18get_position(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_20set_position(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_22get_min_distance(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_24set_min_distance(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_distance); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_26get_attenuation(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_28set_attenuation(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_attenuation); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_30get_loop(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_32set_loop(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, int __pyx_v_loop); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_34get_volume(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_36set_volume(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_38get_pitch(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_40set_pitch(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_pitch); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_42__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfSound_44__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_7sfMusic___cinit__(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, PyObject *__pyx_v_filename); /* proto */
static void __pyx_pf_9pysfml261_7sfMusic_2__dealloc__(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_4play(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_6pause(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_8stop(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_10get_status(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_12set_relative_to(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_14get_position(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_16set_position(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_18get_min_distance(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_20set_min_distance(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_distance); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_22get_attenuation(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_24set_attenuation(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_attenuation); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_26get_loop(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_28set_loop(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, int __pyx_v_loop); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_30get_volume(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_32set_volume(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_34get_pitch(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_36set_pitch(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_pitch); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_38__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMusic_40__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_6sfTime___cinit__(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self); /* proto */
static void __pyx_pf_9pysfml261_6sfTime_2__dealloc__(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfTime_4asSeconds(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfTime_6asMilliseconds(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfTime_8asMicroseconds(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfTime_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfTime_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_7sfClock___cinit__(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static void __pyx_pf_9pysfml261_7sfClock_2__dealloc__(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfClock_4get_elapsed_seconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfClock_6get_elapsed_milliseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfClock_8get_elapsed_microseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfClock_10restart_asseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfClock_12restart_asmilliseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfClock_14restart_asmicroseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfClock_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfClock_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_13TimeCollector___cinit__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self); /* proto */
static void __pyx_pf_9pysfml261_13TimeCollector_2__dealloc__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13TimeCollector_4collect(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13TimeCollector_6reset(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13TimeCollector_7seconds___get__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13TimeCollector_12milliseconds___get__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13TimeCollector_12microseconds___get__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13TimeCollector_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13TimeCollector_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_10TimedFloat___cinit__(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self, float __pyx_v_value); /* proto */
static void __pyx_pf_9pysfml261_10TimedFloat_2__dealloc__(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_10TimedFloat_4get_timed(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_10TimedFloat_6get_value(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_10TimedFloat_8set_value(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self, float __pyx_v_value); /* proto */
static PyObject *__pyx_pf_9pysfml261_10TimedFloat_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_10TimedFloat_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_8Animator___cinit__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self, int __pyx_v_length, float __pyx_v_speed_); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Animator_2get_current_index(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Animator_4lenz___get__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_8Animator_4lenz_2__set__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self, int __pyx_v_length); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Animator_4spid___get__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_8Animator_4spid_2__set__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self, float __pyx_v_speed); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Animator_8is_ended___get__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Animator_10is_started___get__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Animator_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_Animator *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Animator_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_Animator *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_7sfImage___cinit__(struct __pyx_obj_9pysfml261_sfImage *__pyx_v_self, PyObject *__pyx_v_filename); /* proto */
static void __pyx_pf_9pysfml261_7sfImage_2__dealloc__(struct __pyx_obj_9pysfml261_sfImage *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfImage_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfImage *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfImage_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfImage *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_11sfVideoMode___cinit__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, unsigned int __pyx_v_modeWidth, unsigned int __pyx_v_modeHeight, unsigned int __pyx_v_bitsPerPixel); /* proto */
static void __pyx_pf_9pysfml261_11sfVideoMode_2__dealloc__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_4get_desktop_mode(void); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_6is_valid(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_5width___get__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11sfVideoMode_5width_2__set__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, unsigned int __pyx_v_width_); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_6height___get__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11sfVideoMode_6height_2__set__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, unsigned int __pyx_v_height_); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_14bits_per_pixel___get__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11sfVideoMode_14bits_per_pixel_2__set__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, unsigned int __pyx_v_bits_per_pixel_); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_7sfColor___cinit__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_r, unsigned int __pyx_v_g, unsigned int __pyx_v_b, unsigned int __pyx_v_a); /* proto */
static void __pyx_pf_9pysfml261_7sfColor_2__dealloc__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfColor_1r___get__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_7sfColor_1r_2__set__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_r_); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfColor_1g___get__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_7sfColor_1g_2__set__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_g_); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfColor_1b___get__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_7sfColor_1b_2__set__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_b_); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfColor_1a___get__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_7sfColor_1a_2__set__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_a_); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfColor_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfColor_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_7sfEvent___cinit__(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self); /* proto */
static void __pyx_pf_9pysfml261_7sfEvent_2__dealloc__(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfEvent_4get_type(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfEvent_6get_key_code(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfEvent_8get_text_unicode(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfEvent_10get_mouse_button(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfEvent_12__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfEvent_14__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9pysfml261_10sfKeyboard_is_key_pressed(int __pyx_v_key); /* proto */
static PyObject *__pyx_pf_9pysfml261_10sfKeyboard_2localize(int __pyx_v_scancode); /* proto */
static PyObject *__pyx_pf_9pysfml261_10sfKeyboard_4__reduce_cython__(struct __pyx_obj_9pysfml261_sfKeyboard *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_10sfKeyboard_6__setstate_cython__(struct __pyx_obj_9pysfml261_sfKeyboard *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_11sfFloatRect___cinit__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, float __pyx_v_rectLeft, float __pyx_v_rectTop, float __pyx_v_rectWidth, float __pyx_v_rectHeight); /* proto */
static void __pyx_pf_9pysfml261_11sfFloatRect_2__dealloc__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_4contains(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, float __pyx_v_x, float __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_6intersects(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_8get_position(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_10get_center(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_12set_center(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, float __pyx_v_x, float __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_14get_size(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_16move(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_4left___get__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11sfFloatRect_4left_2__set__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, PyObject *__pyx_v_left_); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_3top___get__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11sfFloatRect_3top_2__set__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, PyObject *__pyx_v_top_); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_5width___get__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11sfFloatRect_5width_2__set__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, PyObject *__pyx_v_width_); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_6height___get__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_11sfFloatRect_6height_2__set__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, PyObject *__pyx_v_height_); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_6sfFont___cinit__(struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self, PyObject *__pyx_v_filename); /* proto */
static void __pyx_pf_9pysfml261_6sfFont_2__dealloc__(struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfFont_4set_smooth(struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self, int __pyx_v_smooth); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfFont_6is_smooth(struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfFont_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfFont_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_8sfString___cinit__(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self, PyObject *__pyx_v_txt_); /* proto */
static void __pyx_pf_9pysfml261_8sfString_2__dealloc__(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfString_4clear(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfString_6is_empty(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfString_8as_pystring(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfString *__pyx_pf_9pysfml261_8sfString_10from_pystring(PyObject *__pyx_v_pystring); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfString_12drop_cache(void); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfString_14set_cache_size(int __pyx_v_size); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfString_16__eq__(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self, struct __pyx_obj_9pysfml261_sfString *__pyx_v_another); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfString_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfString *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfString_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfString *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_6sfText___cinit__(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFont *__pyx_v_font); /* proto */
static void __pyx_pf_9pysfml261_6sfText_2__dealloc__(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_4get_pystring(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_6get_scale(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_8set_scale(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_kx, float __pyx_v_ky); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_10get_rotation(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_12set_rotation(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_14get_position(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_16set_position(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_left, float __pyx_v_top); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_18move(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_20rotate(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_22contains(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_24intersects(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_26set_string(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfString *__pyx_v_txt); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_28set_font(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFont *__pyx_v_font); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_30set_character_size(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, unsigned int __pyx_v_size); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_32set_style(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, unsigned int __pyx_v_style); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_34set_fill_color(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_6sfText_36get_local_bounds(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_6sfText_38get_global_bounds(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_40__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfText *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfText_42__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_9sfTexture___cinit__(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self, PyObject *__pyx_v_filename); /* proto */
static void __pyx_pf_9pysfml261_9sfTexture_2__dealloc__(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_9sfTexture_4get_size(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_9sfTexture_6set_smooth(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self, int __pyx_v_smooth); /* proto */
static PyObject *__pyx_pf_9pysfml261_9sfTexture_8is_smooth(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_9sfTexture_10set_srgb(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self, int __pyx_v_srgb); /* proto */
static PyObject *__pyx_pf_9pysfml261_9sfTexture_12is_srgb(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_9sfTexture_14__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_9sfTexture_16__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_8sfSprite___cinit__(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_texture, float __pyx_v_width, float __pyx_v_height, float __pyx_v_left, float __pyx_v_top, int __pyx_v_keep_w, int __pyx_v_keep_h, int __pyx_v_resetRect); /* proto */
static void __pyx_pf_9pysfml261_8sfSprite_2__dealloc__(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_4intersects(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, int __pyx_v_local_bounds); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_6intersects_rect(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect, int __pyx_v_local_bounds); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_8contains(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, int __pyx_v_local_bounds); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_10move(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_12rotate(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_14collide_shift_h(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_16collide_shift_v(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, int __pyx_v_local); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_8sfSprite_18get_local_bounds(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_8sfSprite_20get_global_bounds(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_22get_rotation(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_24set_rotation(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_26get_scale(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_28set_scale(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_kx, float __pyx_v_ky); /* proto */
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pf_9pysfml261_8sfSprite_30get_color(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_32set_color(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_34get_position(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_36set_position(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_left, float __pyx_v_top); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_38get_center(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_40set_center(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_center_x, float __pyx_v_center_y, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_42set_alpha(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, int __pyx_v_a); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_44get_alpha(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_46in_area(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_x1, float __pyx_v_x2, float __pyx_v_y1, float __pyx_v_y2, int __pyx_v_local); /* proto */
static struct __pyx_obj_9pysfml261_sfSprite *__pyx_pf_9pysfml261_8sfSprite_48clone(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_texture); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_50__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfSprite_52__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_keep_their_distance(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, float __pyx_v_distance_x, float __pyx_v_distance_y, int __pyx_v_keep_x, int __pyx_v_keep_y, int __pyx_v_sprite1_main, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_2similar(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, int __pyx_v_sprite1_main, int __pyx_v_similar_pos, int __pyx_v_similar_size, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_4put_like(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, int __pyx_v_like_sprite1, int __pyx_v_shift_dx, int __pyx_v_shift_dy, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_6swap(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, int __pyx_v_swap_pos, int __pyx_v_swap_size, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_8get_distance(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_10scale(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_kx, float __pyx_v_ky, int __pyx_v_local, int __pyx_v_keep_left_top); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_12resize(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_width, float __pyx_v_height, int __pyx_v_keep_w, int __pyx_v_keep_h, int __pyx_v_shift_dx, int __pyx_v_shift_dy, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_14flip(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, int __pyx_v_flipX, int __pyx_v_flipY, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_16set_rotation_around_center(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_degrees, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_18rotate_around_center(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_degrees, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_20move_with_angle(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_degrees, float __pyx_v_speed); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_22__reduce_cython__(struct __pyx_obj_9pysfml261_TransformSfSprite *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_24__setstate_cython__(struct __pyx_obj_9pysfml261_TransformSfSprite *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_16sfRectangleShape___cinit__(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color, float __pyx_v_width, float __pyx_v_height, float __pyx_v_left, float __pyx_v_top); /* proto */
static void __pyx_pf_9pysfml261_16sfRectangleShape_2__dealloc__(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_4move(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_6rotate(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_8contains(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_10intersects(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_12set_alpha(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, int __pyx_v_a); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_14get_alpha(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_16set_position(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_left, float __pyx_v_top); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_18get_position(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_20set_fill_color(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color); /* proto */
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pf_9pysfml261_16sfRectangleShape_22get_fill_color(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_24set_size(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_width, float __pyx_v_height); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_26get_size(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_28set_rotation(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_30get_rotation(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_16sfRectangleShape_32get_global_bounds(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_16sfRectangleShape_34get_local_bounds(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_pf_9pysfml261_16sfRectangleShape_36clone(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_38__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_40__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_13sfCircleShape___cinit__(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color, float __pyx_v_radius, float __pyx_v_left, float __pyx_v_top); /* proto */
static void __pyx_pf_9pysfml261_13sfCircleShape_2__dealloc__(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_4move(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_6rotate(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_8contains(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_10intersects(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect, int __pyx_v_local); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_12set_alpha(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, int __pyx_v_a); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_14get_alpha(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_16set_rotation(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_18get_rotation(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_20set_fill_color(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color); /* proto */
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pf_9pysfml261_13sfCircleShape_22get_fill_color(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_24set_position(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_left, float __pyx_v_top); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_26get_position(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_28set_radius(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_radius); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_30get_radius(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_13sfCircleShape_32get_local_bounds(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_13sfCircleShape_34get_global_bounds(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_pf_9pysfml261_13sfCircleShape_36clone(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_38__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_40__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_6sfView___cinit__(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_center_x, float __pyx_v_center_y, float __pyx_v_width, float __pyx_v_height); /* proto */
static void __pyx_pf_9pysfml261_6sfView_2__dealloc__(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_4move(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_6rotate(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_8zoom(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_factor); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_10rotate_around_center(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_12set_rotation_around_center(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_degrees); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_6sfView_14get_rect(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_16get_left_top(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_18set_left_top(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_left, float __pyx_v_top); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_20get_center(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_22set_center(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_center_x, float __pyx_v_center_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_24get_size(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_26set_size(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_width, float __pyx_v_height); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_28get_rotation(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_30set_rotation(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_32__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfView *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_6sfView_34__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_8sfShader___cinit__(struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self, PyObject *__pyx_v_filename, int __pyx_v_type); /* proto */
static void __pyx_pf_9pysfml261_8sfShader_2__dealloc__(struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfShader_4set_uniform(struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self, PyObject *__pyx_v_name_, float __pyx_v_x); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfShader_6is_available(void); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfShader_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8sfShader_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_14sfRenderStates___cinit__(struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_self, struct __pyx_obj_9pysfml261_sfShader *__pyx_v_shader); /* proto */
static void __pyx_pf_9pysfml261_14sfRenderStates_2__dealloc__(struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderStates_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderStates_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_14sfRenderWindow___cinit__(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, unsigned int __pyx_v_width, unsigned int __pyx_v_height, unsigned int __pyx_v_bitsPerPixel, PyObject *__pyx_v_title, unsigned int __pyx_v_style); /* proto */
static void __pyx_pf_9pysfml261_14sfRenderWindow_2__dealloc__(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_4map_coords_to_pixel(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, float __pyx_v_x, float __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_6map_pixel_to_coords(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, float __pyx_v_x, float __pyx_v_y); /* proto */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_14sfRenderWindow_8get_desktop_rect(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_10set_view(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfView *__pyx_v_view_); /* proto */
static struct __pyx_obj_9pysfml261_sfView *__pyx_pf_9pysfml261_14sfRenderWindow_12get_view(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_14get_position(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_16set_position(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_x, int __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_18move(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_dx, int __pyx_v_dy); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_20draw_sprite(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_22draw_sprite_use_state(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_states); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_24draw_text(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfText *__pyx_v_text); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_26draw_rect_shape(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_shape); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_28draw_circle_shape(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_shape); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_30set_icon(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfImage *__pyx_v_icon, unsigned int __pyx_v_width, unsigned int __pyx_v_height); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_32clear(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_34poll_event(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_36set_visible(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_visible); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_38is_open(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_40close(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_42display(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_44set_mouse_cursor_visible(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_visible); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_46set_framerate_limit(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, unsigned int __pyx_v_limit); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_48set_active(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_active); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_50get_size(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_52__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_54__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMouse_world_pos(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_wnd); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMouse_2relative_pos(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_wnd); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMouse_4relative_to_rect(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMouse_6get_position(void); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMouse_8is_button_pressed(int __pyx_v_button); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMouse_10__reduce_cython__(struct __pyx_obj_9pysfml261_sfMouse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_7sfMouse_12__setstate_cython__(struct __pyx_obj_9pysfml261_sfMouse *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9pysfml261_8Camera2D___cinit__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_left_, float __pyx_v_top_, float __pyx_v_distance_x_, float __pyx_v_distance_y_); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Camera2D_2shift(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, PyObject *__pyx_v_sprites, float __pyx_v_pivot_x, float __pyx_v_pivot_y, float __pyx_v_dx, float __pyx_v_dy); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Camera2D_5pleft___get__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_8Camera2D_5pleft_2__set__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_left); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Camera2D_4ptop___get__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_8Camera2D_4ptop_2__set__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_top); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Camera2D_6dist_x___get__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_8Camera2D_6dist_x_2__set__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_distance); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Camera2D_6dist_y___get__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self); /* proto */
static int __pyx_pf_9pysfml261_8Camera2D_6dist_y_2__set__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_distance); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Camera2D_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9pysfml261_8Camera2D_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9pysfml261_4__pyx_unpickle_sfKeyboard(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9pysfml261_6__pyx_unpickle_TransformSfSprite(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9pysfml261_8__pyx_unpickle_sfMouse(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_9pysfml261_MathPoint2f(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_MathVector2f(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_MathPoint3f(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_MathVector3f(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfSoundBuffer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfSound(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfMusic(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfTime(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfClock(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_TimeCollector(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_TimedFloat(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_Animator(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfImage(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfVideoMode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfColor(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfEvent(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfKeyboard(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfFloatRect(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfFont(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfString(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfText(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfTexture(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfSprite(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_TransformSfSprite(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfRectangleShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfCircleShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfView(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfShader(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfRenderStates(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfRenderWindow(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_sfMouse(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9pysfml261_Camera2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
/* SmallCodeConfig */
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  PyObject *__pyx_type_9pysfml261_MathPoint2f;
  PyObject *__pyx_type_9pysfml261_MathVector2f;
  PyObject *__pyx_type_9pysfml261_MathPoint3f;
  PyObject *__pyx_type_9pysfml261_MathVector3f;
  PyObject *__pyx_type_9pysfml261_sfSoundBuffer;
  PyObject *__pyx_type_9pysfml261_sfSound;
  PyObject *__pyx_type_9pysfml261_sfMusic;
  PyObject *__pyx_type_9pysfml261_sfTime;
  PyObject *__pyx_type_9pysfml261_sfClock;
  PyObject *__pyx_type_9pysfml261_TimeCollector;
  PyObject *__pyx_type_9pysfml261_TimedFloat;
  PyObject *__pyx_type_9pysfml261_Animator;
  PyObject *__pyx_type_9pysfml261_sfImage;
  PyObject *__pyx_type_9pysfml261_sfVideoMode;
  PyObject *__pyx_type_9pysfml261_sfColor;
  PyObject *__pyx_type_9pysfml261_sfEvent;
  PyObject *__pyx_type_9pysfml261_sfKeyboard;
  PyObject *__pyx_type_9pysfml261_sfFloatRect;
  PyObject *__pyx_type_9pysfml261_sfFont;
  PyObject *__pyx_type_9pysfml261_sfString;
  PyObject *__pyx_type_9pysfml261_sfText;
  PyObject *__pyx_type_9pysfml261_sfTexture;
  PyObject *__pyx_type_9pysfml261_sfSprite;
  PyObject *__pyx_type_9pysfml261_TransformSfSprite;
  PyObject *__pyx_type_9pysfml261_sfRectangleShape;
  PyObject *__pyx_type_9pysfml261_sfCircleShape;
  PyObject *__pyx_type_9pysfml261_sfView;
  PyObject *__pyx_type_9pysfml261_sfShader;
  PyObject *__pyx_type_9pysfml261_sfRenderStates;
  PyObject *__pyx_type_9pysfml261_sfRenderWindow;
  PyObject *__pyx_type_9pysfml261_sfMouse;
  PyObject *__pyx_type_9pysfml261_Camera2D;
  PyTypeObject *__pyx_ptype_9pysfml261_MathPoint2f;
  PyTypeObject *__pyx_ptype_9pysfml261_MathVector2f;
  PyTypeObject *__pyx_ptype_9pysfml261_MathPoint3f;
  PyTypeObject *__pyx_ptype_9pysfml261_MathVector3f;
  PyTypeObject *__pyx_ptype_9pysfml261_sfSoundBuffer;
  PyTypeObject *__pyx_ptype_9pysfml261_sfSound;
  PyTypeObject *__pyx_ptype_9pysfml261_sfMusic;
  PyTypeObject *__pyx_ptype_9pysfml261_sfTime;
  PyTypeObject *__pyx_ptype_9pysfml261_sfClock;
  PyTypeObject *__pyx_ptype_9pysfml261_TimeCollector;
  PyTypeObject *__pyx_ptype_9pysfml261_TimedFloat;
  PyTypeObject *__pyx_ptype_9pysfml261_Animator;
  PyTypeObject *__pyx_ptype_9pysfml261_sfImage;
  PyTypeObject *__pyx_ptype_9pysfml261_sfVideoMode;
  PyTypeObject *__pyx_ptype_9pysfml261_sfColor;
  PyTypeObject *__pyx_ptype_9pysfml261_sfEvent;
  PyTypeObject *__pyx_ptype_9pysfml261_sfKeyboard;
  PyTypeObject *__pyx_ptype_9pysfml261_sfFloatRect;
  PyTypeObject *__pyx_ptype_9pysfml261_sfFont;
  PyTypeObject *__pyx_ptype_9pysfml261_sfString;
  PyTypeObject *__pyx_ptype_9pysfml261_sfText;
  PyTypeObject *__pyx_ptype_9pysfml261_sfTexture;
  PyTypeObject *__pyx_ptype_9pysfml261_sfSprite;
  PyTypeObject *__pyx_ptype_9pysfml261_TransformSfSprite;
  PyTypeObject *__pyx_ptype_9pysfml261_sfRectangleShape;
  PyTypeObject *__pyx_ptype_9pysfml261_sfCircleShape;
  PyTypeObject *__pyx_ptype_9pysfml261_sfView;
  PyTypeObject *__pyx_ptype_9pysfml261_sfShader;
  PyTypeObject *__pyx_ptype_9pysfml261_sfRenderStates;
  PyTypeObject *__pyx_ptype_9pysfml261_sfRenderWindow;
  PyTypeObject *__pyx_ptype_9pysfml261_sfMouse;
  PyTypeObject *__pyx_ptype_9pysfml261_Camera2D;
  __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_pop;
  unsigned int __pyx_k__3;
  PyObject *__pyx_tuple[17];
  PyObject *__pyx_codeobj_tab[308];
  PyObject *__pyx_string_tab[727];
  PyObject *__pyx_float__2;
  PyObject *__pyx_float_0_0;
  PyObject *__pyx_float_1_0;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_32;
  PyObject *__pyx_int_128;
  PyObject *__pyx_int_222419149;
  PyObject *__pyx_int_228825662;
  PyObject *__pyx_int_238750788;
/* #### Code section: module_state_contents ### */
/* CachedMethodType.module_state_decls */
#if CYTHON_COMPILING_IN_LIMITED_API
PyObject *__Pyx_CachedMethodType;
#endif

/* CodeObjectCache.module_state_decls */
struct __Pyx_CodeObjectCache __pyx_code_cache;

/* #### Code section: module_state_end ### */
} __pyx_mstatetype;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate_global (__Pyx_PyModule_GetState(__Pyx_State_FindModule(&__pyx_moduledef)))

#define __pyx_m (__Pyx_State_FindModule(&__pyx_moduledef))
#else
static __pyx_mstatetype __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstatetype * const __pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: constant_name_defines ### */
#define __pyx_kp_u_ __pyx_string_tab[0]
#define __pyx_n_u_Animator __pyx_string_tab[1]
#define __pyx_n_u_Animator___reduce_cython __pyx_string_tab[2]
#define __pyx_n_u_Animator___setstate_cython __pyx_string_tab[3]
#define __pyx_n_u_Animator_get_current_index __pyx_string_tab[4]
#define __pyx_n_u_CACHE_SIZE __pyx_string_tab[5]
#define __pyx_n_u_Camera2D __pyx_string_tab[6]
#define __pyx_n_u_Camera2D___reduce_cython __pyx_string_tab[7]
#define __pyx_n_u_Camera2D___setstate_cython __pyx_string_tab[8]
#define __pyx_n_u_Camera2D_shift __pyx_string_tab[9]
#define __pyx_kp_u_Could_not_convert_to_unicode __pyx_string_tab[10]
#define __pyx_kp_u_Failed_to_load_font __pyx_string_tab[11]
#define __pyx_kp_u_Failed_to_load_font_from_0 __pyx_string_tab[12]
#define __pyx_kp_u_Failed_to_load_image __pyx_string_tab[13]
#define __pyx_kp_u_Failed_to_load_image_from_0 __pyx_string_tab[14]
#define __pyx_kp_u_Failed_to_load_music_from __pyx_string_tab[15]
#define __pyx_kp_u_Failed_to_load_music_from_0 __pyx_string_tab[16]
#define __pyx_kp_u_Failed_to_load_shader __pyx_string_tab[17]
#define __pyx_kp_u_Failed_to_load_shader_from_0 __pyx_string_tab[18]
#define __pyx_kp_u_Failed_to_load_sound_from __pyx_string_tab[19]
#define __pyx_kp_u_Failed_to_load_sound_from_0 __pyx_string_tab[20]
#define __pyx_kp_u_Failed_to_load_texture_from_0 __pyx_string_tab[21]
#define __pyx_kp_u_Incompatible_checksums_0x_x_vs_0 __pyx_string_tab[22]
#define __pyx_n_u_MathPoint2f __pyx_string_tab[23]
#define __pyx_n_u_MathPoint2f___reduce_cython __pyx_string_tab[24]
#define __pyx_n_u_MathPoint2f___setstate_cython __pyx_string_tab[25]
#define __pyx_n_u_MathPoint2f_distance __pyx_string_tab[26]
#define __pyx_n_u_MathPoint3f __pyx_string_tab[27]
#define __pyx_n_u_MathPoint3f___reduce_cython __pyx_string_tab[28]
#define __pyx_n_u_MathPoint3f___setstate_cython __pyx_string_tab[29]
#define __pyx_n_u_MathPoint3f_distance __pyx_string_tab[30]
#define __pyx_n_u_MathVector2f __pyx_string_tab[31]
#define __pyx_n_u_MathVector2f___reduce_cython __pyx_string_tab[32]
#define __pyx_n_u_MathVector2f___setstate_cython __pyx_string_tab[33]
#define __pyx_n_u_MathVector2f_angle_between __pyx_string_tab[34]
#define __pyx_n_u_MathVector2f_basis __pyx_string_tab[35]
#define __pyx_n_u_MathVector2f_cosin __pyx_string_tab[36]
#define __pyx_n_u_MathVector2f_distance __pyx_string_tab[37]
#define __pyx_n_u_MathVector2f_from_points __pyx_string_tab[38]
#define __pyx_n_u_MathVector2f_is_parallel __pyx_string_tab[39]
#define __pyx_n_u_MathVector2f_is_perpendicular __pyx_string_tab[40]
#define __pyx_n_u_MathVector2f_multiply_num __pyx_string_tab[41]
#define __pyx_n_u_MathVector2f_scalar_product __pyx_string_tab[42]
#define __pyx_n_u_MathVector2f_sinus __pyx_string_tab[43]
#define __pyx_n_u_MathVector2f_sub __pyx_string_tab[44]
#define __pyx_n_u_MathVector2f_sum __pyx_string_tab[45]
#define __pyx_n_u_MathVector2f_vector_product __pyx_string_tab[46]
#define __pyx_n_u_MathVector3f __pyx_string_tab[47]
#define __pyx_n_u_MathVector3f___reduce_cython __pyx_string_tab[48]
#define __pyx_n_u_MathVector3f___setstate_cython __pyx_string_tab[49]
#define __pyx_n_u_MathVector3f_angle_between __pyx_string_tab[50]
#define __pyx_n_u_MathVector3f_basis __pyx_string_tab[51]
#define __pyx_n_u_MathVector3f_cosin __pyx_string_tab[52]
#define __pyx_n_u_MathVector3f_distance __pyx_string_tab[53]
#define __pyx_n_u_MathVector3f_from_points __pyx_string_tab[54]
#define __pyx_n_u_MathVector3f_is_parallel __pyx_string_tab[55]
#define __pyx_n_u_MathVector3f_is_perpendicular __pyx_string_tab[56]
#define __pyx_n_u_MathVector3f_multiply_num __pyx_string_tab[57]
#define __pyx_n_u_MathVector3f_scalar_product __pyx_string_tab[58]
#define __pyx_n_u_MathVector3f_sinus __pyx_string_tab[59]
#define __pyx_n_u_MathVector3f_sub __pyx_string_tab[60]
#define __pyx_n_u_MathVector3f_sum __pyx_string_tab[61]
#define __pyx_n_u_MathVector3f_vector_product __pyx_string_tab[62]
#define __pyx_n_u_None __pyx_string_tab[63]
#define __pyx_kp_u_None __pyx_string_tab[64]
#define __pyx_kp_u_Note_that_Cython_is_deliberately __pyx_string_tab[65]
#define __pyx_n_u_PickleError __pyx_string_tab[66]
#define __pyx_n_u_RESULTS __pyx_string_tab[67]
#define __pyx_n_u_RuntimeError __pyx_string_tab[68]
#define __pyx_n_u_TimeCollector __pyx_string_tab[69]
#define __pyx_n_u_TimeCollector___reduce_cython __pyx_string_tab[70]
#define __pyx_n_u_TimeCollector___setstate_cython __pyx_string_tab[71]
#define __pyx_n_u_TimeCollector_collect __pyx_string_tab[72]
#define __pyx_n_u_TimeCollector_reset __pyx_string_tab[73]
#define __pyx_n_u_TimedFloat __pyx_string_tab[74]
#define __pyx_n_u_TimedFloat___reduce_cython __pyx_string_tab[75]
#define __pyx_n_u_TimedFloat___setstate_cython __pyx_string_tab[76]
#define __pyx_n_u_TimedFloat_get_timed __pyx_string_tab[77]
#define __pyx_n_u_TimedFloat_get_value __pyx_string_tab[78]
#define __pyx_n_u_TimedFloat_set_value __pyx_string_tab[79]
#define __pyx_n_u_TransformSfSprite __pyx_string_tab[80]
#define __pyx_n_u_TransformSfSprite___reduce_cytho __pyx_string_tab[81]
#define __pyx_n_u_TransformSfSprite___setstate_cyt __pyx_string_tab[82]
#define __pyx_n_u_TransformSfSprite_flip __pyx_string_tab[83]
#define __pyx_n_u_TransformSfSprite_get_distance __pyx_string_tab[84]
#define __pyx_n_u_TransformSfSprite_keep_their_dis __pyx_string_tab[85]
#define __pyx_n_u_TransformSfSprite_move_with_angl __pyx_string_tab[86]
#define __pyx_n_u_TransformSfSprite_put_like __pyx_string_tab[87]
#define __pyx_n_u_TransformSfSprite_resize __pyx_string_tab[88]
#define __pyx_n_u_TransformSfSprite_rotate_around __pyx_string_tab[89]
#define __pyx_n_u_TransformSfSprite_scale __pyx_string_tab[90]
#define __pyx_n_u_TransformSfSprite_set_rotation_a __pyx_string_tab[91]
#define __pyx_n_u_TransformSfSprite_similar __pyx_string_tab[92]
#define __pyx_n_u_TransformSfSprite_swap __pyx_string_tab[93]
#define __pyx_n_u_TypeError __pyx_string_tab[94]
#define __pyx_kp_u_Unable_to_load_texture __pyx_string_tab[95]
#define __pyx_kp_u__2 __pyx_string_tab[96]
#define __pyx_kp_u__4 __pyx_string_tab[97]
#define __pyx_kp_u__5 __pyx_string_tab[98]
#define __pyx_n_u_a __pyx_string_tab[99]
#define __pyx_n_u_active __pyx_string_tab[100]
#define __pyx_kp_u_add_note __pyx_string_tab[101]
#define __pyx_n_u_after __pyx_string_tab[102]
#define __pyx_n_u_angle_between __pyx_string_tab[103]
#define __pyx_n_u_area __pyx_string_tab[104]
#define __pyx_n_u_asMicroseconds __pyx_string_tab[105]
#define __pyx_n_u_asMilliseconds __pyx_string_tab[106]
#define __pyx_n_u_asSeconds __pyx_string_tab[107]
#define __pyx_n_u_as_pystring __pyx_string_tab[108]
#define __pyx_n_u_asyncio_coroutines __pyx_string_tab[109]
#define __pyx_n_u_attenuation __pyx_string_tab[110]
#define __pyx_n_u_b __pyx_string_tab[111]
#define __pyx_n_u_basis __pyx_string_tab[112]
#define __pyx_n_u_before __pyx_string_tab[113]
#define __pyx_n_u_bitsPerPixel __pyx_string_tab[114]
#define __pyx_n_u_bool __pyx_string_tab[115]
#define __pyx_n_u_bounds __pyx_string_tab[116]
#define __pyx_n_u_buffer __pyx_string_tab[117]
#define __pyx_n_u_button __pyx_string_tab[118]
#define __pyx_n_u_center __pyx_string_tab[119]
#define __pyx_n_u_centerX __pyx_string_tab[120]
#define __pyx_n_u_centerX1 __pyx_string_tab[121]
#define __pyx_n_u_centerX2 __pyx_string_tab[122]
#define __pyx_n_u_centerY __pyx_string_tab[123]
#define __pyx_n_u_centerY1 __pyx_string_tab[124]
#define __pyx_n_u_centerY2 __pyx_string_tab[125]
#define __pyx_n_u_center_t_x __pyx_string_tab[126]
#define __pyx_n_u_center_t_y __pyx_string_tab[127]
#define __pyx_n_u_center_x __pyx_string_tab[128]
#define __pyx_n_u_center_x1 __pyx_string_tab[129]
#define __pyx_n_u_center_x2 __pyx_string_tab[130]
#define __pyx_n_u_center_y __pyx_string_tab[131]
#define __pyx_n_u_center_y1 __pyx_string_tab[132]
#define __pyx_n_u_center_y2 __pyx_string_tab[133]
#define __pyx_n_u_clear __pyx_string_tab[134]
#define __pyx_n_u_cline_in_traceback __pyx_string_tab[135]
#define __pyx_n_u_clone __pyx_string_tab[136]
#define __pyx_n_u_close __pyx_string_tab[137]
#define __pyx_n_u_clr __pyx_string_tab[138]
#define __pyx_n_u_collect __pyx_string_tab[139]
#define __pyx_n_u_collide_shift_h __pyx_string_tab[140]
#define __pyx_n_u_collide_shift_v __pyx_string_tab[141]
#define __pyx_n_u_color __pyx_string_tab[142]
#define __pyx_n_u_const_pos __pyx_string_tab[143]
#define __pyx_n_u_contains __pyx_string_tab[144]
#define __pyx_n_u_coord __pyx_string_tab[145]
#define __pyx_n_u_cosin __pyx_string_tab[146]
#define __pyx_n_u_current __pyx_string_tab[147]
#define __pyx_n_u_degrees __pyx_string_tab[148]
#define __pyx_n_u_dict __pyx_string_tab[149]
#define __pyx_n_u_dict_2 __pyx_string_tab[150]
#define __pyx_n_u_difX __pyx_string_tab[151]
#define __pyx_n_u_difY __pyx_string_tab[152]
#define __pyx_n_u_dif_x __pyx_string_tab[153]
#define __pyx_n_u_dif_y __pyx_string_tab[154]
#define __pyx_kp_u_disable __pyx_string_tab[155]
#define __pyx_n_u_display __pyx_string_tab[156]
#define __pyx_n_u_distance __pyx_string_tab[157]
#define __pyx_n_u_distance_x __pyx_string_tab[158]
#define __pyx_n_u_distance_x_2 __pyx_string_tab[159]
#define __pyx_n_u_distance_y __pyx_string_tab[160]
#define __pyx_n_u_distance_y_2 __pyx_string_tab[161]
#define __pyx_n_u_draw_circle_shape __pyx_string_tab[162]
#define __pyx_n_u_draw_rect_shape __pyx_string_tab[163]
#define __pyx_n_u_draw_sprite __pyx_string_tab[164]
#define __pyx_n_u_draw_sprite_use_state __pyx_string_tab[165]
#define __pyx_n_u_draw_text __pyx_string_tab[166]
#define __pyx_n_u_drop_cache __pyx_string_tab[167]
#define __pyx_n_u_dx __pyx_string_tab[168]
#define __pyx_n_u_dy __pyx_string_tab[169]
#define __pyx_n_u_elapsed __pyx_string_tab[170]
#define __pyx_kp_u_enable __pyx_string_tab[171]
#define __pyx_n_u_event __pyx_string_tab[172]
#define __pyx_n_u_factor __pyx_string_tab[173]
#define __pyx_n_u_filename __pyx_string_tab[174]
#define __pyx_n_u_flip __pyx_string_tab[175]
#define __pyx_n_u_flipX __pyx_string_tab[176]
#define __pyx_n_u_flipY __pyx_string_tab[177]
#define __pyx_n_u_float __pyx_string_tab[178]
#define __pyx_n_u_font __pyx_string_tab[179]
#define __pyx_n_u_format __pyx_string_tab[180]
#define __pyx_n_u_from_points __pyx_string_tab[181]
#define __pyx_n_u_from_pystring __pyx_string_tab[182]
#define __pyx_n_u_func __pyx_string_tab[183]
#define __pyx_n_u_g __pyx_string_tab[184]
#define __pyx_kp_u_gc __pyx_string_tab[185]
#define __pyx_n_u_get_alpha __pyx_string_tab[186]
#define __pyx_n_u_get_attenuation __pyx_string_tab[187]
#define __pyx_n_u_get_center __pyx_string_tab[188]
#define __pyx_n_u_get_color __pyx_string_tab[189]
#define __pyx_n_u_get_current_index __pyx_string_tab[190]
#define __pyx_n_u_get_desktop_mode __pyx_string_tab[191]
#define __pyx_n_u_get_desktop_rect __pyx_string_tab[192]
#define __pyx_n_u_get_distance __pyx_string_tab[193]
#define __pyx_n_u_get_elapsed_microseconds __pyx_string_tab[194]
#define __pyx_n_u_get_elapsed_milliseconds __pyx_string_tab[195]
#define __pyx_n_u_get_elapsed_seconds __pyx_string_tab[196]
#define __pyx_n_u_get_fill_color __pyx_string_tab[197]
#define __pyx_n_u_get_global_bounds __pyx_string_tab[198]
#define __pyx_n_u_get_key_code __pyx_string_tab[199]
#define __pyx_n_u_get_left_top __pyx_string_tab[200]
#define __pyx_n_u_get_local_bounds __pyx_string_tab[201]
#define __pyx_n_u_get_loop __pyx_string_tab[202]
#define __pyx_n_u_get_min_distance __pyx_string_tab[203]
#define __pyx_n_u_get_mouse_button __pyx_string_tab[204]
#define __pyx_n_u_get_pitch __pyx_string_tab[205]
#define __pyx_n_u_get_position __pyx_string_tab[206]
#define __pyx_n_u_get_pystring __pyx_string_tab[207]
#define __pyx_n_u_get_radius __pyx_string_tab[208]
#define __pyx_n_u_get_rect __pyx_string_tab[209]
#define __pyx_n_u_get_rotation __pyx_string_tab[210]
#define __pyx_n_u_get_scale __pyx_string_tab[211]
#define __pyx_n_u_get_size __pyx_string_tab[212]
#define __pyx_n_u_get_status __pyx_string_tab[213]
#define __pyx_n_u_get_text_unicode __pyx_string_tab[214]
#define __pyx_n_u_get_timed __pyx_string_tab[215]
#define __pyx_n_u_get_type __pyx_string_tab[216]
#define __pyx_n_u_get_value __pyx_string_tab[217]
#define __pyx_n_u_get_view __pyx_string_tab[218]
#define __pyx_n_u_get_volume __pyx_string_tab[219]
#define __pyx_n_u_getstate __pyx_string_tab[220]
#define __pyx_n_u_height __pyx_string_tab[221]
#define __pyx_n_u_icon __pyx_string_tab[222]
#define __pyx_n_u_in_area __pyx_string_tab[223]
#define __pyx_n_u_index __pyx_string_tab[224]
#define __pyx_n_u_int __pyx_string_tab[225]
#define __pyx_n_u_intersects __pyx_string_tab[226]
#define __pyx_n_u_intersects_rect __pyx_string_tab[227]
#define __pyx_n_u_is_available __pyx_string_tab[228]
#define __pyx_n_u_is_button_pressed __pyx_string_tab[229]
#define __pyx_n_u_is_coroutine __pyx_string_tab[230]
#define __pyx_n_u_is_empty __pyx_string_tab[231]
#define __pyx_n_u_is_key_pressed __pyx_string_tab[232]
#define __pyx_n_u_is_open __pyx_string_tab[233]
#define __pyx_n_u_is_parallel __pyx_string_tab[234]
#define __pyx_n_u_is_perpendicular __pyx_string_tab[235]
#define __pyx_n_u_is_smooth __pyx_string_tab[236]
#define __pyx_n_u_is_srgb __pyx_string_tab[237]
#define __pyx_n_u_is_valid __pyx_string_tab[238]
#define __pyx_kp_u_isenabled __pyx_string_tab[239]
#define __pyx_n_u_items __pyx_string_tab[240]
#define __pyx_n_u_k __pyx_string_tab[241]
#define __pyx_n_u_keep_h __pyx_string_tab[242]
#define __pyx_n_u_keep_left_top __pyx_string_tab[243]
#define __pyx_n_u_keep_their_distance __pyx_string_tab[244]
#define __pyx_n_u_keep_w __pyx_string_tab[245]
#define __pyx_n_u_keep_x __pyx_string_tab[246]
#define __pyx_n_u_keep_y __pyx_string_tab[247]
#define __pyx_n_u_key __pyx_string_tab[248]
#define __pyx_n_u_kx __pyx_string_tab[249]
#define __pyx_n_u_ky __pyx_string_tab[250]
#define __pyx_n_u_left __pyx_string_tab[251]
#define __pyx_n_u_left_2 __pyx_string_tab[252]
#define __pyx_n_u_length __pyx_string_tab[253]
#define __pyx_n_u_lengthX __pyx_string_tab[254]
#define __pyx_n_u_lengthY __pyx_string_tab[255]
#define __pyx_n_u_like_sprite1 __pyx_string_tab[256]
#define __pyx_n_u_limit __pyx_string_tab[257]
#define __pyx_n_u_local __pyx_string_tab[258]
#define __pyx_n_u_local_bounds __pyx_string_tab[259]
#define __pyx_n_u_localize __pyx_string_tab[260]
#define __pyx_n_u_loop __pyx_string_tab[261]
#define __pyx_n_u_m1 __pyx_string_tab[262]
#define __pyx_n_u_m2 __pyx_string_tab[263]
#define __pyx_n_u_main __pyx_string_tab[264]
#define __pyx_n_u_map_coords_to_pixel __pyx_string_tab[265]
#define __pyx_n_u_map_pixel_to_coords __pyx_string_tab[266]
#define __pyx_n_u_maxD __pyx_string_tab[267]
#define __pyx_n_u_maxIndex __pyx_string_tab[268]
#define __pyx_n_u_minDistance __pyx_string_tab[269]
#define __pyx_n_u_mod __pyx_string_tab[270]
#define __pyx_n_u_modeHeight __pyx_string_tab[271]
#define __pyx_n_u_modeWidth __pyx_string_tab[272]
#define __pyx_n_u_modul __pyx_string_tab[273]
#define __pyx_n_u_module __pyx_string_tab[274]
#define __pyx_n_u_mouse_pos __pyx_string_tab[275]
#define __pyx_n_u_mouse_pos_2 __pyx_string_tab[276]
#define __pyx_n_u_move __pyx_string_tab[277]
#define __pyx_n_u_move_with_angle __pyx_string_tab[278]
#define __pyx_n_u_multiply_num __pyx_string_tab[279]
#define __pyx_n_u_myRect __pyx_string_tab[280]
#define __pyx_n_u_name __pyx_string_tab[281]
#define __pyx_n_u_name_2 __pyx_string_tab[282]
#define __pyx_n_u_name_3 __pyx_string_tab[283]
#define __pyx_n_u_new __pyx_string_tab[284]
#define __pyx_kp_u_no_default___reduce___due_to_non __pyx_string_tab[285]
#define __pyx_n_u_num __pyx_string_tab[286]
#define __pyx_n_u_offsetX __pyx_string_tab[287]
#define __pyx_n_u_offsetY __pyx_string_tab[288]
#define __pyx_n_u_p __pyx_string_tab[289]
#define __pyx_n_u_p1 __pyx_string_tab[290]
#define __pyx_n_u_p2 __pyx_string_tab[291]
#define __pyx_n_u_pause __pyx_string_tab[292]
#define __pyx_n_u_pi __pyx_string_tab[293]
#define __pyx_n_u_pickle __pyx_string_tab[294]
#define __pyx_n_u_pitch __pyx_string_tab[295]
#define __pyx_n_u_pivot_x __pyx_string_tab[296]
#define __pyx_n_u_pivot_y __pyx_string_tab[297]
#define __pyx_n_u_pixel __pyx_string_tab[298]
#define __pyx_n_u_play __pyx_string_tab[299]
#define __pyx_n_u_poll_event __pyx_string_tab[300]
#define __pyx_n_u_pop __pyx_string_tab[301]
#define __pyx_n_u_pos __pyx_string_tab[302]
#define __pyx_n_u_pos_2 __pyx_string_tab[303]
#define __pyx_n_u_put_like __pyx_string_tab[304]
#define __pyx_n_u_pysfml261 __pyx_string_tab[305]
#define __pyx_kp_u_pysfml261_pyx __pyx_string_tab[306]
#define __pyx_n_u_pystring __pyx_string_tab[307]
#define __pyx_n_u_pyx_PickleError __pyx_string_tab[308]
#define __pyx_n_u_pyx_checksum __pyx_string_tab[309]
#define __pyx_n_u_pyx_result __pyx_string_tab[310]
#define __pyx_n_u_pyx_state __pyx_string_tab[311]
#define __pyx_n_u_pyx_type __pyx_string_tab[312]
#define __pyx_n_u_pyx_unpickle_TransformSfSprite __pyx_string_tab[313]
#define __pyx_n_u_pyx_unpickle_sfKeyboard __pyx_string_tab[314]
#define __pyx_n_u_pyx_unpickle_sfMouse __pyx_string_tab[315]
#define __pyx_n_u_qualname __pyx_string_tab[316]
#define __pyx_n_u_r __pyx_string_tab[317]
#define __pyx_n_u_radians __pyx_string_tab[318]
#define __pyx_n_u_radius __pyx_string_tab[319]
#define __pyx_n_u_rect __pyx_string_tab[320]
#define __pyx_n_u_rect1 __pyx_string_tab[321]
#define __pyx_n_u_rect2 __pyx_string_tab[322]
#define __pyx_n_u_rectHeight __pyx_string_tab[323]
#define __pyx_n_u_rectLeft __pyx_string_tab[324]
#define __pyx_n_u_rectTop __pyx_string_tab[325]
#define __pyx_n_u_rectWidth __pyx_string_tab[326]
#define __pyx_n_u_reduce __pyx_string_tab[327]
#define __pyx_n_u_reduce_cython __pyx_string_tab[328]
#define __pyx_n_u_reduce_ex __pyx_string_tab[329]
#define __pyx_n_u_relative_pos __pyx_string_tab[330]
#define __pyx_n_u_relative_to_rect __pyx_string_tab[331]
#define __pyx_n_u_reset __pyx_string_tab[332]
#define __pyx_n_u_resetRect __pyx_string_tab[333]
#define __pyx_n_u_reset_buffer __pyx_string_tab[334]
#define __pyx_n_u_resize __pyx_string_tab[335]
#define __pyx_n_u_restart_asmicroseconds __pyx_string_tab[336]
#define __pyx_n_u_restart_asmilliseconds __pyx_string_tab[337]
#define __pyx_n_u_restart_asseconds __pyx_string_tab[338]
#define __pyx_n_u_return __pyx_string_tab[339]
#define __pyx_n_u_rotate __pyx_string_tab[340]
#define __pyx_n_u_rotate_around_center __pyx_string_tab[341]
#define __pyx_n_u_sc __pyx_string_tab[342]
#define __pyx_n_u_scalar_product __pyx_string_tab[343]
#define __pyx_n_u_scale __pyx_string_tab[344]
#define __pyx_n_u_scancode __pyx_string_tab[345]
#define __pyx_n_u_seconds __pyx_string_tab[346]
#define __pyx_n_u_self __pyx_string_tab[347]
#define __pyx_n_u_set_active __pyx_string_tab[348]
#define __pyx_n_u_set_alpha __pyx_string_tab[349]
#define __pyx_n_u_set_attenuation __pyx_string_tab[350]
#define __pyx_n_u_set_buffer __pyx_string_tab[351]
#define __pyx_n_u_set_cache_size __pyx_string_tab[352]
#define __pyx_n_u_set_center __pyx_string_tab[353]
#define __pyx_n_u_set_character_size __pyx_string_tab[354]
#define __pyx_n_u_set_color __pyx_string_tab[355]
#define __pyx_n_u_set_fill_color __pyx_string_tab[356]
#define __pyx_n_u_set_font __pyx_string_tab[357]
#define __pyx_n_u_set_framerate_limit __pyx_string_tab[358]
#define __pyx_n_u_set_icon __pyx_string_tab[359]
#define __pyx_n_u_set_left_top __pyx_string_tab[360]
#define __pyx_n_u_set_loop __pyx_string_tab[361]
#define __pyx_n_u_set_min_distance __pyx_string_tab[362]
#define __pyx_n_u_set_mouse_cursor_visible __pyx_string_tab[363]
#define __pyx_n_u_set_name __pyx_string_tab[364]
#define __pyx_n_u_set_pitch __pyx_string_tab[365]
#define __pyx_n_u_set_position __pyx_string_tab[366]
#define __pyx_n_u_set_radius __pyx_string_tab[367]
#define __pyx_n_u_set_relative_to __pyx_string_tab[368]
#define __pyx_n_u_set_rotation __pyx_string_tab[369]
#define __pyx_n_u_set_rotation_around_center __pyx_string_tab[370]
#define __pyx_n_u_set_scale __pyx_string_tab[371]
#define __pyx_n_u_set_size __pyx_string_tab[372]
#define __pyx_n_u_set_smooth __pyx_string_tab[373]
#define __pyx_n_u_set_srgb __pyx_string_tab[374]
#define __pyx_n_u_set_string __pyx_string_tab[375]
#define __pyx_n_u_set_style __pyx_string_tab[376]
#define __pyx_n_u_set_uniform __pyx_string_tab[377]
#define __pyx_n_u_set_value __pyx_string_tab[378]
#define __pyx_n_u_set_view __pyx_string_tab[379]
#define __pyx_n_u_set_visible __pyx_string_tab[380]
#define __pyx_n_u_set_volume __pyx_string_tab[381]
#define __pyx_n_u_setstate __pyx_string_tab[382]
#define __pyx_n_u_setstate_cython __pyx_string_tab[383]
#define __pyx_n_u_sfCircleShape __pyx_string_tab[384]
#define __pyx_n_u_sfCircleShape___reduce_cython __pyx_string_tab[385]
#define __pyx_n_u_sfCircleShape___setstate_cython __pyx_string_tab[386]
#define __pyx_n_u_sfCircleShape_clone __pyx_string_tab[387]
#define __pyx_n_u_sfCircleShape_contains __pyx_string_tab[388]
#define __pyx_n_u_sfCircleShape_get_alpha __pyx_string_tab[389]
#define __pyx_n_u_sfCircleShape_get_fill_color __pyx_string_tab[390]
#define __pyx_n_u_sfCircleShape_get_global_bounds __pyx_string_tab[391]
#define __pyx_n_u_sfCircleShape_get_local_bounds __pyx_string_tab[392]
#define __pyx_n_u_sfCircleShape_get_position __pyx_string_tab[393]
#define __pyx_n_u_sfCircleShape_get_radius __pyx_string_tab[394]
#define __pyx_n_u_sfCircleShape_get_rotation __pyx_string_tab[395]
#define __pyx_n_u_sfCircleShape_intersects __pyx_string_tab[396]
#define __pyx_n_u_sfCircleShape_move __pyx_string_tab[397]
#define __pyx_n_u_sfCircleShape_rotate __pyx_string_tab[398]
#define __pyx_n_u_sfCircleShape_set_alpha __pyx_string_tab[399]
#define __pyx_n_u_sfCircleShape_set_fill_color __pyx_string_tab[400]
#define __pyx_n_u_sfCircleShape_set_position __pyx_string_tab[401]
#define __pyx_n_u_sfCircleShape_set_radius __pyx_string_tab[402]
#define __pyx_n_u_sfCircleShape_set_rotation __pyx_string_tab[403]
#define __pyx_n_u_sfClock __pyx_string_tab[404]
#define __pyx_n_u_sfClock___reduce_cython __pyx_string_tab[405]
#define __pyx_n_u_sfClock___setstate_cython __pyx_string_tab[406]
#define __pyx_n_u_sfClock_get_elapsed_microseconds __pyx_string_tab[407]
#define __pyx_n_u_sfClock_get_elapsed_milliseconds __pyx_string_tab[408]
#define __pyx_n_u_sfClock_get_elapsed_seconds __pyx_string_tab[409]
#define __pyx_n_u_sfClock_restart_asmicroseconds __pyx_string_tab[410]
#define __pyx_n_u_sfClock_restart_asmilliseconds __pyx_string_tab[411]
#define __pyx_n_u_sfClock_restart_asseconds __pyx_string_tab[412]
#define __pyx_n_u_sfColor __pyx_string_tab[413]
#define __pyx_n_u_sfColor___reduce_cython __pyx_string_tab[414]
#define __pyx_n_u_sfColor___setstate_cython __pyx_string_tab[415]
#define __pyx_n_u_sfEvent __pyx_string_tab[416]
#define __pyx_n_u_sfEvent___reduce_cython __pyx_string_tab[417]
#define __pyx_n_u_sfEvent___setstate_cython __pyx_string_tab[418]
#define __pyx_n_u_sfEvent_get_key_code __pyx_string_tab[419]
#define __pyx_n_u_sfEvent_get_mouse_button __pyx_string_tab[420]
#define __pyx_n_u_sfEvent_get_text_unicode __pyx_string_tab[421]
#define __pyx_n_u_sfEvent_get_type __pyx_string_tab[422]
#define __pyx_n_u_sfFloatRect __pyx_string_tab[423]
#define __pyx_n_u_sfFloatRect___reduce_cython __pyx_string_tab[424]
#define __pyx_n_u_sfFloatRect___setstate_cython __pyx_string_tab[425]
#define __pyx_n_u_sfFloatRect_contains __pyx_string_tab[426]
#define __pyx_n_u_sfFloatRect_get_center __pyx_string_tab[427]
#define __pyx_n_u_sfFloatRect_get_position __pyx_string_tab[428]
#define __pyx_n_u_sfFloatRect_get_size __pyx_string_tab[429]
#define __pyx_n_u_sfFloatRect_intersects __pyx_string_tab[430]
#define __pyx_n_u_sfFloatRect_move __pyx_string_tab[431]
#define __pyx_n_u_sfFloatRect_set_center __pyx_string_tab[432]
#define __pyx_n_u_sfFont __pyx_string_tab[433]
#define __pyx_n_u_sfFont___reduce_cython __pyx_string_tab[434]
#define __pyx_n_u_sfFont___setstate_cython __pyx_string_tab[435]
#define __pyx_n_u_sfFont_is_smooth __pyx_string_tab[436]
#define __pyx_n_u_sfFont_set_smooth __pyx_string_tab[437]
#define __pyx_n_u_sfImage __pyx_string_tab[438]
#define __pyx_n_u_sfImage___reduce_cython __pyx_string_tab[439]
#define __pyx_n_u_sfImage___setstate_cython __pyx_string_tab[440]
#define __pyx_n_u_sfKeyboard __pyx_string_tab[441]
#define __pyx_n_u_sfKeyboard___reduce_cython __pyx_string_tab[442]
#define __pyx_n_u_sfKeyboard___setstate_cython __pyx_string_tab[443]
#define __pyx_n_u_sfKeyboard_is_key_pressed __pyx_string_tab[444]
#define __pyx_n_u_sfKeyboard_localize __pyx_string_tab[445]
#define __pyx_n_u_sfMouse __pyx_string_tab[446]
#define __pyx_n_u_sfMouse___reduce_cython __pyx_string_tab[447]
#define __pyx_n_u_sfMouse___setstate_cython __pyx_string_tab[448]
#define __pyx_n_u_sfMouse_get_position __pyx_string_tab[449]
#define __pyx_n_u_sfMouse_is_button_pressed __pyx_string_tab[450]
#define __pyx_n_u_sfMouse_relative_pos __pyx_string_tab[451]
#define __pyx_n_u_sfMouse_relative_to_rect __pyx_string_tab[452]
#define __pyx_n_u_sfMouse_world_pos __pyx_string_tab[453]
#define __pyx_n_u_sfMusic __pyx_string_tab[454]
#define __pyx_n_u_sfMusic___reduce_cython __pyx_string_tab[455]
#define __pyx_n_u_sfMusic___setstate_cython __pyx_string_tab[456]
#define __pyx_n_u_sfMusic_get_attenuation __pyx_string_tab[457]
#define __pyx_n_u_sfMusic_get_loop __pyx_string_tab[458]
#define __pyx_n_u_sfMusic_get_min_distance __pyx_string_tab[459]
#define __pyx_n_u_sfMusic_get_pitch __pyx_string_tab[460]
#define __pyx_n_u_sfMusic_get_position __pyx_string_tab[461]
#define __pyx_n_u_sfMusic_get_status __pyx_string_tab[462]
#define __pyx_n_u_sfMusic_get_volume __pyx_string_tab[463]
#define __pyx_n_u_sfMusic_pause __pyx_string_tab[464]
#define __pyx_n_u_sfMusic_play __pyx_string_tab[465]
#define __pyx_n_u_sfMusic_set_attenuation __pyx_string_tab[466]
#define __pyx_n_u_sfMusic_set_loop __pyx_string_tab[467]
#define __pyx_n_u_sfMusic_set_min_distance __pyx_string_tab[468]
#define __pyx_n_u_sfMusic_set_pitch __pyx_string_tab[469]
#define __pyx_n_u_sfMusic_set_position __pyx_string_tab[470]
#define __pyx_n_u_sfMusic_set_relative_to __pyx_string_tab[471]
#define __pyx_n_u_sfMusic_set_volume __pyx_string_tab[472]
#define __pyx_n_u_sfMusic_stop __pyx_string_tab[473]
#define __pyx_n_u_sfRectangleShape __pyx_string_tab[474]
#define __pyx_n_u_sfRectangleShape___reduce_cython __pyx_string_tab[475]
#define __pyx_n_u_sfRectangleShape___setstate_cyth __pyx_string_tab[476]
#define __pyx_n_u_sfRectangleShape_clone __pyx_string_tab[477]
#define __pyx_n_u_sfRectangleShape_contains __pyx_string_tab[478]
#define __pyx_n_u_sfRectangleShape_get_alpha __pyx_string_tab[479]
#define __pyx_n_u_sfRectangleShape_get_fill_color __pyx_string_tab[480]
#define __pyx_n_u_sfRectangleShape_get_global_boun __pyx_string_tab[481]
#define __pyx_n_u_sfRectangleShape_get_local_bound __pyx_string_tab[482]
#define __pyx_n_u_sfRectangleShape_get_position __pyx_string_tab[483]
#define __pyx_n_u_sfRectangleShape_get_rotation __pyx_string_tab[484]
#define __pyx_n_u_sfRectangleShape_get_size __pyx_string_tab[485]
#define __pyx_n_u_sfRectangleShape_intersects __pyx_string_tab[486]
#define __pyx_n_u_sfRectangleShape_move __pyx_string_tab[487]
#define __pyx_n_u_sfRectangleShape_rotate __pyx_string_tab[488]
#define __pyx_n_u_sfRectangleShape_set_alpha __pyx_string_tab[489]
#define __pyx_n_u_sfRectangleShape_set_fill_color __pyx_string_tab[490]
#define __pyx_n_u_sfRectangleShape_set_position __pyx_string_tab[491]
#define __pyx_n_u_sfRectangleShape_set_rotation __pyx_string_tab[492]
#define __pyx_n_u_sfRectangleShape_set_size __pyx_string_tab[493]
#define __pyx_n_u_sfRenderStates __pyx_string_tab[494]
#define __pyx_n_u_sfRenderStates___reduce_cython __pyx_string_tab[495]
#define __pyx_n_u_sfRenderStates___setstate_cython __pyx_string_tab[496]
#define __pyx_n_u_sfRenderWindow __pyx_string_tab[497]
#define __pyx_n_u_sfRenderWindow___reduce_cython __pyx_string_tab[498]
#define __pyx_n_u_sfRenderWindow___setstate_cython __pyx_string_tab[499]
#define __pyx_n_u_sfRenderWindow_clear __pyx_string_tab[500]
#define __pyx_n_u_sfRenderWindow_close __pyx_string_tab[501]
#define __pyx_n_u_sfRenderWindow_display __pyx_string_tab[502]
#define __pyx_n_u_sfRenderWindow_draw_circle_shape __pyx_string_tab[503]
#define __pyx_n_u_sfRenderWindow_draw_rect_shape __pyx_string_tab[504]
#define __pyx_n_u_sfRenderWindow_draw_sprite __pyx_string_tab[505]
#define __pyx_n_u_sfRenderWindow_draw_sprite_use_s __pyx_string_tab[506]
#define __pyx_n_u_sfRenderWindow_draw_text __pyx_string_tab[507]
#define __pyx_n_u_sfRenderWindow_get_desktop_rect __pyx_string_tab[508]
#define __pyx_n_u_sfRenderWindow_get_position __pyx_string_tab[509]
#define __pyx_n_u_sfRenderWindow_get_size __pyx_string_tab[510]
#define __pyx_n_u_sfRenderWindow_get_view __pyx_string_tab[511]
#define __pyx_n_u_sfRenderWindow_is_open __pyx_string_tab[512]
#define __pyx_n_u_sfRenderWindow_map_coords_to_pix __pyx_string_tab[513]
#define __pyx_n_u_sfRenderWindow_map_pixel_to_coor __pyx_string_tab[514]
#define __pyx_n_u_sfRenderWindow_move __pyx_string_tab[515]
#define __pyx_n_u_sfRenderWindow_poll_event __pyx_string_tab[516]
#define __pyx_n_u_sfRenderWindow_set_active __pyx_string_tab[517]
#define __pyx_n_u_sfRenderWindow_set_framerate_lim __pyx_string_tab[518]
#define __pyx_n_u_sfRenderWindow_set_icon __pyx_string_tab[519]
#define __pyx_n_u_sfRenderWindow_set_mouse_cursor __pyx_string_tab[520]
#define __pyx_n_u_sfRenderWindow_set_position __pyx_string_tab[521]
#define __pyx_n_u_sfRenderWindow_set_view __pyx_string_tab[522]
#define __pyx_n_u_sfRenderWindow_set_visible __pyx_string_tab[523]
#define __pyx_n_u_sfShader __pyx_string_tab[524]
#define __pyx_n_u_sfShader___reduce_cython __pyx_string_tab[525]
#define __pyx_n_u_sfShader___setstate_cython __pyx_string_tab[526]
#define __pyx_n_u_sfShader_is_available __pyx_string_tab[527]
#define __pyx_n_u_sfShader_set_uniform __pyx_string_tab[528]
#define __pyx_n_u_sfSound __pyx_string_tab[529]
#define __pyx_n_u_sfSoundBuffer __pyx_string_tab[530]
#define __pyx_n_u_sfSoundBuffer___reduce_cython __pyx_string_tab[531]
#define __pyx_n_u_sfSoundBuffer___setstate_cython __pyx_string_tab[532]
#define __pyx_n_u_sfSound___reduce_cython __pyx_string_tab[533]
#define __pyx_n_u_sfSound___setstate_cython __pyx_string_tab[534]
#define __pyx_n_u_sfSound_get_attenuation __pyx_string_tab[535]
#define __pyx_n_u_sfSound_get_loop __pyx_string_tab[536]
#define __pyx_n_u_sfSound_get_min_distance __pyx_string_tab[537]
#define __pyx_n_u_sfSound_get_pitch __pyx_string_tab[538]
#define __pyx_n_u_sfSound_get_position __pyx_string_tab[539]
#define __pyx_n_u_sfSound_get_status __pyx_string_tab[540]
#define __pyx_n_u_sfSound_get_volume __pyx_string_tab[541]
#define __pyx_n_u_sfSound_pause __pyx_string_tab[542]
#define __pyx_n_u_sfSound_play __pyx_string_tab[543]
#define __pyx_n_u_sfSound_reset_buffer __pyx_string_tab[544]
#define __pyx_n_u_sfSound_set_attenuation __pyx_string_tab[545]
#define __pyx_n_u_sfSound_set_buffer __pyx_string_tab[546]
#define __pyx_n_u_sfSound_set_loop __pyx_string_tab[547]
#define __pyx_n_u_sfSound_set_min_distance __pyx_string_tab[548]
#define __pyx_n_u_sfSound_set_pitch __pyx_string_tab[549]
#define __pyx_n_u_sfSound_set_position __pyx_string_tab[550]
#define __pyx_n_u_sfSound_set_relative_to __pyx_string_tab[551]
#define __pyx_n_u_sfSound_set_volume __pyx_string_tab[552]
#define __pyx_n_u_sfSound_stop __pyx_string_tab[553]
#define __pyx_n_u_sfSprite __pyx_string_tab[554]
#define __pyx_n_u_sfSprite___reduce_cython __pyx_string_tab[555]
#define __pyx_n_u_sfSprite___setstate_cython __pyx_string_tab[556]
#define __pyx_n_u_sfSprite_clone __pyx_string_tab[557]
#define __pyx_n_u_sfSprite_collide_shift_h __pyx_string_tab[558]
#define __pyx_n_u_sfSprite_collide_shift_v __pyx_string_tab[559]
#define __pyx_n_u_sfSprite_contains __pyx_string_tab[560]
#define __pyx_n_u_sfSprite_get_alpha __pyx_string_tab[561]
#define __pyx_n_u_sfSprite_get_center __pyx_string_tab[562]
#define __pyx_n_u_sfSprite_get_color __pyx_string_tab[563]
#define __pyx_n_u_sfSprite_get_global_bounds __pyx_string_tab[564]
#define __pyx_n_u_sfSprite_get_local_bounds __pyx_string_tab[565]
#define __pyx_n_u_sfSprite_get_position __pyx_string_tab[566]
#define __pyx_n_u_sfSprite_get_rotation __pyx_string_tab[567]
#define __pyx_n_u_sfSprite_get_scale __pyx_string_tab[568]
#define __pyx_n_u_sfSprite_in_area __pyx_string_tab[569]
#define __pyx_n_u_sfSprite_intersects __pyx_string_tab[570]
#define __pyx_n_u_sfSprite_intersects_rect __pyx_string_tab[571]
#define __pyx_n_u_sfSprite_move __pyx_string_tab[572]
#define __pyx_n_u_sfSprite_rotate __pyx_string_tab[573]
#define __pyx_n_u_sfSprite_set_alpha __pyx_string_tab[574]
#define __pyx_n_u_sfSprite_set_center __pyx_string_tab[575]
#define __pyx_n_u_sfSprite_set_color __pyx_string_tab[576]
#define __pyx_n_u_sfSprite_set_position __pyx_string_tab[577]
#define __pyx_n_u_sfSprite_set_rotation __pyx_string_tab[578]
#define __pyx_n_u_sfSprite_set_scale __pyx_string_tab[579]
#define __pyx_n_u_sfString __pyx_string_tab[580]
#define __pyx_n_u_sfString___reduce_cython __pyx_string_tab[581]
#define __pyx_n_u_sfString___setstate_cython __pyx_string_tab[582]
#define __pyx_n_u_sfString_as_pystring __pyx_string_tab[583]
#define __pyx_n_u_sfString_clear __pyx_string_tab[584]
#define __pyx_n_u_sfString_drop_cache __pyx_string_tab[585]
#define __pyx_n_u_sfString_from_pystring __pyx_string_tab[586]
#define __pyx_n_u_sfString_is_empty __pyx_string_tab[587]
#define __pyx_n_u_sfString_set_cache_size __pyx_string_tab[588]
#define __pyx_n_u_sfText __pyx_string_tab[589]
#define __pyx_n_u_sfText___reduce_cython __pyx_string_tab[590]
#define __pyx_n_u_sfText___setstate_cython __pyx_string_tab[591]
#define __pyx_n_u_sfText_contains __pyx_string_tab[592]
#define __pyx_n_u_sfText_get_global_bounds __pyx_string_tab[593]
#define __pyx_n_u_sfText_get_local_bounds __pyx_string_tab[594]
#define __pyx_n_u_sfText_get_position __pyx_string_tab[595]
#define __pyx_n_u_sfText_get_pystring __pyx_string_tab[596]
#define __pyx_n_u_sfText_get_rotation __pyx_string_tab[597]
#define __pyx_n_u_sfText_get_scale __pyx_string_tab[598]
#define __pyx_n_u_sfText_intersects __pyx_string_tab[599]
#define __pyx_n_u_sfText_move __pyx_string_tab[600]
#define __pyx_n_u_sfText_rotate __pyx_string_tab[601]
#define __pyx_n_u_sfText_set_character_size __pyx_string_tab[602]
#define __pyx_n_u_sfText_set_fill_color __pyx_string_tab[603]
#define __pyx_n_u_sfText_set_font __pyx_string_tab[604]
#define __pyx_n_u_sfText_set_position __pyx_string_tab[605]
#define __pyx_n_u_sfText_set_rotation __pyx_string_tab[606]
#define __pyx_n_u_sfText_set_scale __pyx_string_tab[607]
#define __pyx_n_u_sfText_set_string __pyx_string_tab[608]
#define __pyx_n_u_sfText_set_style __pyx_string_tab[609]
#define __pyx_n_u_sfTexture __pyx_string_tab[610]
#define __pyx_n_u_sfTexture___reduce_cython __pyx_string_tab[611]
#define __pyx_n_u_sfTexture___setstate_cython __pyx_string_tab[612]
#define __pyx_n_u_sfTexture_get_size __pyx_string_tab[613]
#define __pyx_n_u_sfTexture_is_smooth __pyx_string_tab[614]
#define __pyx_n_u_sfTexture_is_srgb __pyx_string_tab[615]
#define __pyx_n_u_sfTexture_set_smooth __pyx_string_tab[616]
#define __pyx_n_u_sfTexture_set_srgb __pyx_string_tab[617]
#define __pyx_n_u_sfTime __pyx_string_tab[618]
#define __pyx_n_u_sfTime___reduce_cython __pyx_string_tab[619]
#define __pyx_n_u_sfTime___setstate_cython __pyx_string_tab[620]
#define __pyx_n_u_sfTime_asMicroseconds __pyx_string_tab[621]
#define __pyx_n_u_sfTime_asMilliseconds __pyx_string_tab[622]
#define __pyx_n_u_sfTime_asSeconds __pyx_string_tab[623]
#define __pyx_n_u_sfVideoMode __pyx_string_tab[624]
#define __pyx_n_u_sfVideoMode___reduce_cython __pyx_string_tab[625]
#define __pyx_n_u_sfVideoMode___setstate_cython __pyx_string_tab[626]
#define __pyx_n_u_sfVideoMode_get_desktop_mode __pyx_string_tab[627]
#define __pyx_n_u_sfVideoMode_is_valid __pyx_string_tab[628]
#define __pyx_n_u_sfView __pyx_string_tab[629]
#define __pyx_n_u_sfView___reduce_cython __pyx_string_tab[630]
#define __pyx_n_u_sfView___setstate_cython __pyx_string_tab[631]
#define __pyx_n_u_sfView_get_center __pyx_string_tab[632]
#define __pyx_n_u_sfView_get_left_top __pyx_string_tab[633]
#define __pyx_n_u_sfView_get_rect __pyx_string_tab[634]
#define __pyx_n_u_sfView_get_rotation __pyx_string_tab[635]
#define __pyx_n_u_sfView_get_size __pyx_string_tab[636]
#define __pyx_n_u_sfView_move __pyx_string_tab[637]
#define __pyx_n_u_sfView_rotate __pyx_string_tab[638]
#define __pyx_n_u_sfView_rotate_around_center __pyx_string_tab[639]
#define __pyx_n_u_sfView_set_center __pyx_string_tab[640]
#define __pyx_n_u_sfView_set_left_top __pyx_string_tab[641]
#define __pyx_n_u_sfView_set_rotation __pyx_string_tab[642]
#define __pyx_n_u_sfView_set_rotation_around_cente __pyx_string_tab[643]
#define __pyx_n_u_sfView_set_size __pyx_string_tab[644]
#define __pyx_n_u_sfView_zoom __pyx_string_tab[645]
#define __pyx_n_u_shader __pyx_string_tab[646]
#define __pyx_n_u_shape __pyx_string_tab[647]
#define __pyx_n_u_shift __pyx_string_tab[648]
#define __pyx_n_u_shift_dx __pyx_string_tab[649]
#define __pyx_n_u_shift_dy __pyx_string_tab[650]
#define __pyx_n_u_similar __pyx_string_tab[651]
#define __pyx_n_u_similar_pos __pyx_string_tab[652]
#define __pyx_n_u_similar_size __pyx_string_tab[653]
#define __pyx_n_u_sinus __pyx_string_tab[654]
#define __pyx_n_u_size __pyx_string_tab[655]
#define __pyx_n_u_smooth __pyx_string_tab[656]
#define __pyx_n_u_speed __pyx_string_tab[657]
#define __pyx_n_u_speed_2 __pyx_string_tab[658]
#define __pyx_n_u_sprite __pyx_string_tab[659]
#define __pyx_n_u_sprite1 __pyx_string_tab[660]
#define __pyx_n_u_sprite1Left __pyx_string_tab[661]
#define __pyx_n_u_sprite1Upper __pyx_string_tab[662]
#define __pyx_n_u_sprite1_main __pyx_string_tab[663]
#define __pyx_n_u_sprite2 __pyx_string_tab[664]
#define __pyx_n_u_sprites __pyx_string_tab[665]
#define __pyx_n_u_srgb __pyx_string_tab[666]
#define __pyx_n_u_state __pyx_string_tab[667]
#define __pyx_n_u_states __pyx_string_tab[668]
#define __pyx_n_u_staticmethod __pyx_string_tab[669]
#define __pyx_n_u_stop __pyx_string_tab[670]
#define __pyx_n_u_str __pyx_string_tab[671]
#define __pyx_kp_u_stringsource __pyx_string_tab[672]
#define __pyx_n_u_style __pyx_string_tab[673]
#define __pyx_n_u_sub __pyx_string_tab[674]
#define __pyx_n_u_sum __pyx_string_tab[675]
#define __pyx_n_u_swap __pyx_string_tab[676]
#define __pyx_n_u_swap_pos __pyx_string_tab[677]
#define __pyx_n_u_swap_size __pyx_string_tab[678]
#define __pyx_n_u_t_x1 __pyx_string_tab[679]
#define __pyx_n_u_t_x2 __pyx_string_tab[680]
#define __pyx_n_u_t_y1 __pyx_string_tab[681]
#define __pyx_n_u_t_y2 __pyx_string_tab[682]
#define __pyx_n_u_test __pyx_string_tab[683]
#define __pyx_n_u_text __pyx_string_tab[684]
#define __pyx_n_u_texture __pyx_string_tab[685]
#define __pyx_n_u_textureSize __pyx_string_tab[686]
#define __pyx_n_u_theyRect __pyx_string_tab[687]
#define __pyx_n_u_title __pyx_string_tab[688]
#define __pyx_n_u_to_degrees __pyx_string_tab[689]
#define __pyx_n_u_to_radians __pyx_string_tab[690]
#define __pyx_n_u_to_remove __pyx_string_tab[691]
#define __pyx_n_u_top __pyx_string_tab[692]
#define __pyx_n_u_top_2 __pyx_string_tab[693]
#define __pyx_kp_u_tuple_float_float __pyx_string_tab[694]
#define __pyx_kp_u_tuple_float_float_float __pyx_string_tab[695]
#define __pyx_kp_u_tuple_int_int __pyx_string_tab[696]
#define __pyx_kp_u_tuple_int_int_int __pyx_string_tab[697]
#define __pyx_n_u_txt __pyx_string_tab[698]
#define __pyx_n_u_txt_2 __pyx_string_tab[699]
#define __pyx_n_u_type __pyx_string_tab[700]
#define __pyx_n_u_update __pyx_string_tab[701]
#define __pyx_n_u_use_setstate __pyx_string_tab[702]
#define __pyx_n_u_v __pyx_string_tab[703]
#define __pyx_n_u_value __pyx_string_tab[704]
#define __pyx_n_u_vector_product __pyx_string_tab[705]
#define __pyx_n_u_view __pyx_string_tab[706]
#define __pyx_n_u_view_2 __pyx_string_tab[707]
#define __pyx_n_u_visible __pyx_string_tab[708]
#define __pyx_n_u_volume __pyx_string_tab[709]
#define __pyx_n_u_volumeFactor __pyx_string_tab[710]
#define __pyx_n_u_vp __pyx_string_tab[711]
#define __pyx_n_u_width __pyx_string_tab[712]
#define __pyx_n_u_widthHeight __pyx_string_tab[713]
#define __pyx_n_u_wnd __pyx_string_tab[714]
#define __pyx_n_u_wnd_pos __pyx_string_tab[715]
#define __pyx_n_u_wnd_rect __pyx_string_tab[716]
#define __pyx_n_u_wnd_size __pyx_string_tab[717]
#define __pyx_n_u_world_pos __pyx_string_tab[718]
#define __pyx_n_u_x __pyx_string_tab[719]
#define __pyx_n_u_x1 __pyx_string_tab[720]
#define __pyx_n_u_x2 __pyx_string_tab[721]
#define __pyx_n_u_y __pyx_string_tab[722]
#define __pyx_n_u_y1 __pyx_string_tab[723]
#define __pyx_n_u_y2 __pyx_string_tab[724]
#define __pyx_n_u_z __pyx_string_tab[725]
#define __pyx_n_u_zoom __pyx_string_tab[726]
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __pyx_m_clear(PyObject *m) {
  __pyx_mstatetype *clear_module_state = __Pyx_PyModule_GetState(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __Pyx_State_RemoveModule(NULL);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_MathPoint2f);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_MathPoint2f);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_MathVector2f);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_MathVector2f);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_MathPoint3f);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_MathPoint3f);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_MathVector3f);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_MathVector3f);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfSoundBuffer);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfSoundBuffer);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfSound);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfSound);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfMusic);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfMusic);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfTime);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfTime);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfClock);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfClock);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_TimeCollector);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_TimeCollector);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_TimedFloat);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_TimedFloat);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_Animator);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_Animator);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfImage);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfImage);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfVideoMode);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfVideoMode);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfColor);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfColor);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfEvent);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfEvent);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfKeyboard);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfKeyboard);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfFloatRect);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfFloatRect);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfFont);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfFont);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfString);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfString);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfText);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfText);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfTexture);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfTexture);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfSprite);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfSprite);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_TransformSfSprite);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_TransformSfSprite);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfRectangleShape);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfRectangleShape);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfCircleShape);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfCircleShape);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfView);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfView);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfShader);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfShader);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfRenderStates);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfRenderStates);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfRenderWindow);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfRenderWindow);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_sfMouse);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_sfMouse);
  Py_CLEAR(clear_module_state->__pyx_ptype_9pysfml261_Camera2D);
  Py_CLEAR(clear_module_state->__pyx_type_9pysfml261_Camera2D);
  for (int i=0; i<17; ++i) { Py_CLEAR(clear_module_state->__pyx_tuple[i]); }
  for (int i=0; i<308; ++i) { Py_CLEAR(clear_module_state->__pyx_codeobj_tab[i]); }
  for (int i=0; i<727; ++i) { Py_CLEAR(clear_module_state->__pyx_string_tab[i]); }
  Py_CLEAR(clear_module_state->__pyx_float__2);
  Py_CLEAR(clear_module_state->__pyx_float_0_0);
  Py_CLEAR(clear_module_state->__pyx_float_1_0);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_32);
  Py_CLEAR(clear_module_state->__pyx_int_128);
  Py_CLEAR(clear_module_state->__pyx_int_222419149);
  Py_CLEAR(clear_module_state->__pyx_int_228825662);
  Py_CLEAR(clear_module_state->__pyx_int_238750788);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstatetype *traverse_module_state = __Pyx_PyModule_GetState(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_tuple);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_bytes);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_MathPoint2f);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_MathPoint2f);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_MathVector2f);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_MathVector2f);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_MathPoint3f);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_MathPoint3f);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_MathVector3f);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_MathVector3f);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfSoundBuffer);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfSoundBuffer);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfSound);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfSound);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfMusic);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfMusic);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfTime);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfTime);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfClock);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfClock);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_TimeCollector);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_TimeCollector);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_TimedFloat);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_TimedFloat);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_Animator);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_Animator);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfImage);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfImage);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfVideoMode);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfVideoMode);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfColor);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfColor);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfEvent);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfEvent);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfKeyboard);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfKeyboard);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfFloatRect);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfFloatRect);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfFont);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfFont);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfString);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfString);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfText);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfText);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfTexture);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfTexture);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfSprite);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfSprite);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_TransformSfSprite);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_TransformSfSprite);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfRectangleShape);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfRectangleShape);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfCircleShape);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfCircleShape);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfView);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfView);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfShader);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfShader);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfRenderStates);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfRenderStates);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfRenderWindow);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfRenderWindow);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_sfMouse);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_sfMouse);
  Py_VISIT(traverse_module_state->__pyx_ptype_9pysfml261_Camera2D);
  Py_VISIT(traverse_module_state->__pyx_type_9pysfml261_Camera2D);
  for (int i=0; i<17; ++i) { __Pyx_VISIT_CONST(traverse_module_state->__pyx_tuple[i]); }
  for (int i=0; i<308; ++i) { __Pyx_VISIT_CONST(traverse_module_state->__pyx_codeobj_tab[i]); }
  for (int i=0; i<727; ++i) { __Pyx_VISIT_CONST(traverse_module_state->__pyx_string_tab[i]); }
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_float__2);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_float_0_0);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_float_1_0);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_int_0);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_int_32);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_int_128);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_int_222419149);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_int_228825662);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_int_238750788);
  return 0;
}
#endif
/* #### Code section: module_code ### */

/* "string.from_py":12
 *     cdef const char* __Pyx_PyObject_AsStringAndSize(object, Py_ssize_t*) except NULL
 * 
 * @cname("__pyx_convert_string_from_py_6libcpp_6string_std__in_string")             # <<<<<<<<<<<<<<
 * cdef string __pyx_convert_string_from_py_6libcpp_6string_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0
*/

static std::string __pyx_convert_string_from_py_6libcpp_6string_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char const *__pyx_v_data;
  std::string __pyx_r;
  char const *__pyx_t_1;
  std::string __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "string.from_py":14
 * @cname("__pyx_convert_string_from_py_6libcpp_6string_std__in_string")
 * cdef string __pyx_convert_string_from_py_6libcpp_6string_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0             # <<<<<<<<<<<<<<
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)
*/
  __pyx_v_length = 0;

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_6libcpp_6string_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
*/
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == ((char const *)0))) __PYX_ERR(1, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  try {
    __pyx_t_2 = std::string(__pyx_v_data, __pyx_v_length);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 16, __pyx_L1_error)
  }
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "string.from_py":12
 *     cdef const char* __Pyx_PyObject_AsStringAndSize(object, Py_ssize_t*) except NULL
 * 
 * @cname("__pyx_convert_string_from_py_6libcpp_6string_std__in_string")             # <<<<<<<<<<<<<<
 * cdef string __pyx_convert_string_from_py_6libcpp_6string_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_6libcpp_6string_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  return __pyx_r;
}

/* "pysfml261.pyx":37
 * 
 * 
 * def to_radians(float degrees) -> float:             # <<<<<<<<<<<<<<
 * 	cdef float pi = <float>M_PI
 * 	return pi * degrees / 180
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_1to_radians(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_1to_radians = {"to_radians", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_1to_radians, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_1to_radians(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("to_radians (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 37, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 37, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "to_radians", 0) < 0) __PYX_ERR(0, 37, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("to_radians", 1, 1, 1, i); __PYX_ERR(0, 37, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 37, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 37, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("to_radians", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 37, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.to_radians", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_to_radians(__pyx_self, __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_to_radians(CYTHON_UNUSED PyObject *__pyx_self, float __pyx_v_degrees) {
  float __pyx_v_pi;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("to_radians", 0);

  /* "pysfml261.pyx":38
 * 
 * def to_radians(float degrees) -> float:
 * 	cdef float pi = <float>M_PI             # <<<<<<<<<<<<<<
 * 	return pi * degrees / 180
 * 
*/
  __pyx_v_pi = ((float)M_PI);

  /* "pysfml261.pyx":39
 * def to_radians(float degrees) -> float:
 * 	cdef float pi = <float>M_PI
 * 	return pi * degrees / 180             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((__pyx_v_pi * __pyx_v_degrees) / 180.0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":37
 * 
 * 
 * def to_radians(float degrees) -> float:             # <<<<<<<<<<<<<<
 * 	cdef float pi = <float>M_PI
 * 	return pi * degrees / 180
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.to_radians", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":42
 * 
 * 
 * def to_degrees(float radians) -> float:             # <<<<<<<<<<<<<<
 * 	cdef float pi = <float>M_PI
 * 	return radians  * 180 / pi
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_3to_degrees(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_3to_degrees = {"to_degrees", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_3to_degrees, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_3to_degrees(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_radians;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("to_degrees (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_radians,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 42, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 42, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "to_degrees", 0) < 0) __PYX_ERR(0, 42, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("to_degrees", 1, 1, 1, i); __PYX_ERR(0, 42, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 42, __pyx_L3_error)
    }
    __pyx_v_radians = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_radians == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 42, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("to_degrees", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 42, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.to_degrees", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_2to_degrees(__pyx_self, __pyx_v_radians);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_2to_degrees(CYTHON_UNUSED PyObject *__pyx_self, float __pyx_v_radians) {
  float __pyx_v_pi;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  float __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("to_degrees", 0);

  /* "pysfml261.pyx":43
 * 
 * def to_degrees(float radians) -> float:
 * 	cdef float pi = <float>M_PI             # <<<<<<<<<<<<<<
 * 	return radians  * 180 / pi
 * 
*/
  __pyx_v_pi = ((float)M_PI);

  /* "pysfml261.pyx":44
 * def to_degrees(float radians) -> float:
 * 	cdef float pi = <float>M_PI
 * 	return radians  * 180 / pi             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = (__pyx_v_radians * 180.0);
  if (unlikely(__pyx_v_pi == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 44, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble((__pyx_t_1 / __pyx_v_pi)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":42
 * 
 * 
 * def to_degrees(float radians) -> float:             # <<<<<<<<<<<<<<
 * 	cdef float pi = <float>M_PI
 * 	return radians  * 180 / pi
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.to_degrees", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":47
 * 
 * 
 * cdef unicode _text(s):             # <<<<<<<<<<<<<<
 * 	if type(s) is unicode:
 * 		return <unicode>s
*/

static PyObject *__pyx_f_9pysfml261__text(PyObject *__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_text", 0);

  /* "pysfml261.pyx":48
 * 
 * cdef unicode _text(s):
 * 	if type(s) is unicode:             # <<<<<<<<<<<<<<
 * 		return <unicode>s
 * 	elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):
*/
  __pyx_t_1 = (((PyObject *)Py_TYPE(__pyx_v_s)) == ((PyObject *)(&PyUnicode_Type)));
  if (__pyx_t_1) {

    /* "pysfml261.pyx":49
 * cdef unicode _text(s):
 * 	if type(s) is unicode:
 * 		return <unicode>s             # <<<<<<<<<<<<<<
 * 	elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):
 * 		return (<bytes>s).decode('ascii')
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_s));
    __pyx_r = ((PyObject*)__pyx_v_s);
    goto __pyx_L0;

    /* "pysfml261.pyx":48
 * 
 * cdef unicode _text(s):
 * 	if type(s) is unicode:             # <<<<<<<<<<<<<<
 * 		return <unicode>s
 * 	elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):
*/
  }

  /* "pysfml261.pyx":50
 * 	if type(s) is unicode:
 * 		return <unicode>s
 * 	elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):             # <<<<<<<<<<<<<<
 * 		return (<bytes>s).decode('ascii')
 * 	elif isinstance(s, unicode):
*/
  __pyx_t_2 = (PY_MAJOR_VERSION < 3);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = PyBytes_Check(__pyx_v_s); 
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pysfml261.pyx":51
 * 		return <unicode>s
 * 	elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):
 * 		return (<bytes>s).decode('ascii')             # <<<<<<<<<<<<<<
 * 	elif isinstance(s, unicode):
 * 		return unicode(s)
*/
    __Pyx_XDECREF(__pyx_r);
    if (unlikely(__pyx_v_s == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "decode");
      __PYX_ERR(0, 51, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_decode_bytes(((PyObject*)__pyx_v_s), 0, PY_SSIZE_T_MAX, NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "pysfml261.pyx":50
 * 	if type(s) is unicode:
 * 		return <unicode>s
 * 	elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):             # <<<<<<<<<<<<<<
 * 		return (<bytes>s).decode('ascii')
 * 	elif isinstance(s, unicode):
*/
  }

  /* "pysfml261.pyx":52
 * 	elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):
 * 		return (<bytes>s).decode('ascii')
 * 	elif isinstance(s, unicode):             # <<<<<<<<<<<<<<
 * 		return unicode(s)
 * 	else:
*/
  __pyx_t_1 = PyUnicode_Check(__pyx_v_s); 
  if (likely(__pyx_t_1)) {

    /* "pysfml261.pyx":53
 * 		return (<bytes>s).decode('ascii')
 * 	elif isinstance(s, unicode):
 * 		return unicode(s)             # <<<<<<<<<<<<<<
 * 	else:
 * 		raise TypeError("Could not convert to unicode.")
*/
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_Unicode(__pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "pysfml261.pyx":52
 * 	elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):
 * 		return (<bytes>s).decode('ascii')
 * 	elif isinstance(s, unicode):             # <<<<<<<<<<<<<<
 * 		return unicode(s)
 * 	else:
*/
  }

  /* "pysfml261.pyx":55
 * 		return unicode(s)
 * 	else:
 * 		raise TypeError("Could not convert to unicode.")             # <<<<<<<<<<<<<<
 * 
 * 
*/
  /*else*/ {
    __pyx_t_4 = NULL;
    __Pyx_INCREF(__pyx_builtin_TypeError);
    __pyx_t_5 = __pyx_builtin_TypeError; 
    __pyx_t_6 = 1;
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_mstate_global->__pyx_kp_u_Could_not_convert_to_unicode};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 55, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 55, __pyx_L1_error)
  }

  /* "pysfml261.pyx":47
 * 
 * 
 * cdef unicode _text(s):             # <<<<<<<<<<<<<<
 * 	if type(s) is unicode:
 * 		return <unicode>s
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pysfml261._text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":63
 * 	cdef float y
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11MathPoint2f_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_11MathPoint2f_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 63, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 63, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 63, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 63, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 63, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 63, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 64, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 65, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 63, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathPoint2f.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint2f___cinit__(((struct __pyx_obj_9pysfml261_MathPoint2f *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11MathPoint2f___cinit__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, float __pyx_v_x, float __pyx_v_y) {
  int __pyx_r;

  /* "pysfml261.pyx":67
 * 		float y = 0
 * 		):
 * 		self.x = x             # <<<<<<<<<<<<<<
 * 		self.y = y
 * 
*/
  __pyx_v_self->x = __pyx_v_x;

  /* "pysfml261.pyx":68
 * 		):
 * 		self.x = x
 * 		self.y = y             # <<<<<<<<<<<<<<
 * 
 * 	def distance(self, MathPoint2f p) -> float:
*/
  __pyx_v_self->y = __pyx_v_y;

  /* "pysfml261.pyx":63
 * 	cdef float y
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":70
 * 		self.y = y
 * 
 * 	def distance(self, MathPoint2f p) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_3distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11MathPoint2f_3distance = {"distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint2f_3distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_3distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_p,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 70, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 70, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "distance", 0) < 0) __PYX_ERR(0, 70, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("distance", 1, 1, 1, i); __PYX_ERR(0, 70, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 70, __pyx_L3_error)
    }
    __pyx_v_p = ((struct __pyx_obj_9pysfml261_MathPoint2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("distance", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 70, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathPoint2f.distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathPoint2f, 1, "p", 0))) __PYX_ERR(0, 70, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint2f_2distance(((struct __pyx_obj_9pysfml261_MathPoint2f *)__pyx_v_self), __pyx_v_p);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_2distance(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("distance", 0);

  /* "pysfml261.pyx":71
 * 
 * 	def distance(self, MathPoint2f p) -> float:
 * 		return sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2)
 * 			)
*/
  __Pyx_XDECREF(__pyx_r);

  /* "pysfml261.pyx":72
 * 	def distance(self, MathPoint2f p) -> float:
 * 		return sqrtf(
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2)             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_1 = PyFloat_FromDouble(sqrtf((powf((__pyx_v_self->x - __pyx_v_p->x), 2.0) + powf((__pyx_v_self->y - __pyx_v_p->y), 2.0)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":70
 * 		self.y = y
 * 
 * 	def distance(self, MathPoint2f p) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathPoint2f.distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":75
 * 			)
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_x(self) -> float:
 * 		return self.x
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_5pos_x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_5pos_x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint2f_5pos_x___get__(((struct __pyx_obj_9pysfml261_MathPoint2f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_5pos_x___get__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":77
 * 	@property
 * 	def pos_x(self) -> float:
 * 		return self.x             # <<<<<<<<<<<<<<
 * 
 * 	@pos_x.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":75
 * 			)
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_x(self) -> float:
 * 		return self.x
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathPoint2f.pos_x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":79
 * 		return self.x
 * 
 * 	@pos_x.setter             # <<<<<<<<<<<<<<
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11MathPoint2f_5pos_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x); /*proto*/
static int __pyx_pw_9pysfml261_11MathPoint2f_5pos_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x) {
  float __pyx_v_x;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_x); {
    __pyx_v_x = __Pyx_PyFloat_AsFloat(__pyx_arg_x); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 80, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint2f.pos_x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint2f_5pos_x_2__set__(((struct __pyx_obj_9pysfml261_MathPoint2f *)__pyx_v_self), ((float)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11MathPoint2f_5pos_x_2__set__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, float __pyx_v_x) {
  int __pyx_r;

  /* "pysfml261.pyx":81
 * 	@pos_x.setter
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->x = __pyx_v_x;

  /* "pysfml261.pyx":79
 * 		return self.x
 * 
 * 	@pos_x.setter             # <<<<<<<<<<<<<<
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":83
 * 		self.x = x
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_y(self) -> float:
 * 		return self.y
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_5pos_y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_5pos_y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint2f_5pos_y___get__(((struct __pyx_obj_9pysfml261_MathPoint2f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_5pos_y___get__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":85
 * 	@property
 * 	def pos_y(self) -> float:
 * 		return self.y             # <<<<<<<<<<<<<<
 * 
 * 	@pos_y.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":83
 * 		self.x = x
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_y(self) -> float:
 * 		return self.y
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathPoint2f.pos_y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":87
 * 		return self.y
 * 
 * 	@pos_y.setter             # <<<<<<<<<<<<<<
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11MathPoint2f_5pos_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y); /*proto*/
static int __pyx_pw_9pysfml261_11MathPoint2f_5pos_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y) {
  float __pyx_v_y;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_y); {
    __pyx_v_y = __Pyx_PyFloat_AsFloat(__pyx_arg_y); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 88, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint2f.pos_y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint2f_5pos_y_2__set__(((struct __pyx_obj_9pysfml261_MathPoint2f *)__pyx_v_self), ((float)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11MathPoint2f_5pos_y_2__set__(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, float __pyx_v_y) {
  int __pyx_r;

  /* "pysfml261.pyx":89
 * 	@pos_y.setter
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->y = __pyx_v_y;

  /* "pysfml261.pyx":87
 * 		return self.y
 * 
 * 	@pos_y.setter             # <<<<<<<<<<<<<<
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11MathPoint2f_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint2f_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint2f_4__reduce_cython__(((struct __pyx_obj_9pysfml261_MathPoint2f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint2f.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11MathPoint2f_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint2f_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11MathPoint2f_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathPoint2f.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint2f_6__setstate_cython__(((struct __pyx_obj_9pysfml261_MathPoint2f *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint2f_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint2f.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":97
 * 	cdef float y
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0):
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_12MathVector2f_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_12MathVector2f_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 97, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 97, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 97, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 97, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 97, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 97, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 98, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 99, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 97, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f___cinit__(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_12MathVector2f___cinit__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, float __pyx_v_x, float __pyx_v_y) {
  int __pyx_r;

  /* "pysfml261.pyx":100
 * 		float x = 0,
 * 		float y = 0):
 * 		self.x = x             # <<<<<<<<<<<<<<
 * 		self.y = y
 * 
*/
  __pyx_v_self->x = __pyx_v_x;

  /* "pysfml261.pyx":101
 * 		float y = 0):
 * 		self.x = x
 * 		self.y = y             # <<<<<<<<<<<<<<
 * 
 * 	def sum(self, MathVector2f v) -> MathVector2f:
*/
  __pyx_v_self->y = __pyx_v_y;

  /* "pysfml261.pyx":97
 * 	cdef float y
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0):
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":103
 * 		self.y = y
 * 
 * 	def sum(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x + v.x, self.y + v.y
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_3sum(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_3sum = {"sum", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_3sum, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_3sum(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sum (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 103, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 103, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "sum", 0) < 0) __PYX_ERR(0, 103, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("sum", 1, 1, 1, i); __PYX_ERR(0, 103, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 103, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sum", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 103, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.sum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 103, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_2sum(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_2sum(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sum", 0);

  /* "pysfml261.pyx":104
 * 
 * 	def sum(self, MathVector2f v) -> MathVector2f:
 * 		return MathVector2f(             # <<<<<<<<<<<<<<
 * 			self.x + v.x, self.y + v.y
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f); 

  /* "pysfml261.pyx":105
 * 	def sum(self, MathVector2f v) -> MathVector2f:
 * 		return MathVector2f(
 * 			self.x + v.x, self.y + v.y             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->x + __pyx_v_v->x)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->y + __pyx_v_v->y)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (3-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":103
 * 		self.y = y
 * 
 * 	def sum(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x + v.x, self.y + v.y
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pysfml261.MathVector2f.sum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":108
 * 			)
 * 
 * 	def sub(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x - v.x, self.y - v.y
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_5sub(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_5sub = {"sub", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_5sub, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_5sub(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sub (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 108, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 108, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "sub", 0) < 0) __PYX_ERR(0, 108, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("sub", 1, 1, 1, i); __PYX_ERR(0, 108, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 108, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sub", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 108, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.sub", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 108, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_4sub(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_4sub(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sub", 0);

  /* "pysfml261.pyx":109
 * 
 * 	def sub(self, MathVector2f v) -> MathVector2f:
 * 		return MathVector2f(             # <<<<<<<<<<<<<<
 * 			self.x - v.x, self.y - v.y
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f); 

  /* "pysfml261.pyx":110
 * 	def sub(self, MathVector2f v) -> MathVector2f:
 * 		return MathVector2f(
 * 			self.x - v.x, self.y - v.y             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->x - __pyx_v_v->x)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->y - __pyx_v_v->y)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (3-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":108
 * 			)
 * 
 * 	def sub(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x - v.x, self.y - v.y
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pysfml261.MathVector2f.sub", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":113
 * 			)
 * 
 * 	def scalar_product(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		return self.x * v.x + self.y * v.y
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_7scalar_product(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_7scalar_product = {"scalar_product", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_7scalar_product, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_7scalar_product(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scalar_product (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 113, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 113, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "scalar_product", 0) < 0) __PYX_ERR(0, 113, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("scalar_product", 1, 1, 1, i); __PYX_ERR(0, 113, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 113, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scalar_product", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 113, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.scalar_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 113, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_6scalar_product(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_6scalar_product(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scalar_product", 0);

  /* "pysfml261.pyx":114
 * 
 * 	def scalar_product(self, MathVector2f v) -> float:
 * 		return self.x * v.x + self.y * v.y             # <<<<<<<<<<<<<<
 * 
 * 	def cosin(self, MathVector2f v) -> float:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((__pyx_v_self->x * __pyx_v_v->x) + (__pyx_v_self->y * __pyx_v_v->y))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":113
 * 			)
 * 
 * 	def scalar_product(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		return self.x * v.x + self.y * v.y
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector2f.scalar_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":116
 * 		return self.x * v.x + self.y * v.y
 * 
 * 	def cosin(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_9cosin(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_9cosin = {"cosin", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_9cosin, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_9cosin(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cosin (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 116, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 116, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "cosin", 0) < 0) __PYX_ERR(0, 116, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("cosin", 1, 1, 1, i); __PYX_ERR(0, 116, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 116, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cosin", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 116, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.cosin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 116, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_8cosin(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_8cosin(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  float __pyx_v_sc;
  float __pyx_v_m1;
  float __pyx_v_m2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  float __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cosin", 0);

  /* "pysfml261.pyx":117
 * 
 * 	def cosin(self, MathVector2f v) -> float:
 * 		cdef float sc = self.scalar_product(v)             # <<<<<<<<<<<<<<
 * 		cdef float m1 = self.modul, m2 = v.modul
 * 		return sc / (m1 * m2)
*/
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, ((PyObject *)__pyx_v_v)};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_scalar_product, __pyx_callargs+__pyx_t_3, (2-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_sc = __pyx_t_4;

  /* "pysfml261.pyx":118
 * 	def cosin(self, MathVector2f v) -> float:
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul             # <<<<<<<<<<<<<<
 * 		return sc / (m1 * m2)
 * 
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m1 = __pyx_t_4;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m2 = __pyx_t_4;

  /* "pysfml261.pyx":119
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
 * 		return sc / (m1 * m2)             # <<<<<<<<<<<<<<
 * 
 * 	def vector_product(self, MathVector2f v) -> MathVector2f:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = (__pyx_v_m1 * __pyx_v_m2);
  if (unlikely(__pyx_t_4 == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 119, __pyx_L1_error)
  }
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_sc / __pyx_t_4)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":116
 * 		return self.x * v.x + self.y * v.y
 * 
 * 	def cosin(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.MathVector2f.cosin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":121
 * 		return sc / (m1 * m2)
 * 
 * 	def vector_product(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x * v.y, -self.y * v.x
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_11vector_product(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_11vector_product = {"vector_product", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_11vector_product, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_11vector_product(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vector_product (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 121, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 121, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "vector_product", 0) < 0) __PYX_ERR(0, 121, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("vector_product", 1, 1, 1, i); __PYX_ERR(0, 121, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 121, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("vector_product", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 121, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.vector_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 121, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_10vector_product(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_10vector_product(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("vector_product", 0);

  /* "pysfml261.pyx":122
 * 
 * 	def vector_product(self, MathVector2f v) -> MathVector2f:
 * 		return MathVector2f(             # <<<<<<<<<<<<<<
 * 			self.x * v.y, -self.y * v.x
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f); 

  /* "pysfml261.pyx":123
 * 	def vector_product(self, MathVector2f v) -> MathVector2f:
 * 		return MathVector2f(
 * 			self.x * v.y, -self.y * v.x             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->x * __pyx_v_v->y)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(((-__pyx_v_self->y) * __pyx_v_v->x)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (3-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":121
 * 		return sc / (m1 * m2)
 * 
 * 	def vector_product(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x * v.y, -self.y * v.x
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pysfml261.MathVector2f.vector_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":126
 * 			)
 * 
 * 	def sinus(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef MathVector2f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_13sinus(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_13sinus = {"sinus", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_13sinus, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_13sinus(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sinus (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 126, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 126, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "sinus", 0) < 0) __PYX_ERR(0, 126, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("sinus", 1, 1, 1, i); __PYX_ERR(0, 126, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 126, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sinus", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 126, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.sinus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 126, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_12sinus(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_12sinus(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_vp = 0;
  float __pyx_v_m1;
  float __pyx_v_m2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  float __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sinus", 0);

  /* "pysfml261.pyx":127
 * 
 * 	def sinus(self, MathVector2f v) -> float:
 * 		cdef MathVector2f vp = self.vector_product(v)             # <<<<<<<<<<<<<<
 * 		cdef float m1 = self.modul, m2 = v.modul
 * 		return vp.modul / (m1 * m2)
*/
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, ((PyObject *)__pyx_v_v)};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_vector_product, __pyx_callargs+__pyx_t_3, (2-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f))))) __PYX_ERR(0, 127, __pyx_L1_error)
  __pyx_v_vp = ((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pysfml261.pyx":128
 * 	def sinus(self, MathVector2f v) -> float:
 * 		cdef MathVector2f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul             # <<<<<<<<<<<<<<
 * 		return vp.modul / (m1 * m2)
 * 
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m1 = __pyx_t_4;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m2 = __pyx_t_4;

  /* "pysfml261.pyx":129
 * 		cdef MathVector2f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
 * 		return vp.modul / (m1 * m2)             # <<<<<<<<<<<<<<
 * 
 * 	def distance(self, MathVector2f v) -> float:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vp), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_m1 * __pyx_v_m2)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":126
 * 			)
 * 
 * 	def sinus(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef MathVector2f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pysfml261.MathVector2f.sinus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":131
 * 		return vp.modul / (m1 * m2)
 * 
 * 	def distance(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_15distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_15distance = {"distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_15distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_15distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 131, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 131, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "distance", 0) < 0) __PYX_ERR(0, 131, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("distance", 1, 1, 1, i); __PYX_ERR(0, 131, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 131, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("distance", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 131, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 131, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_14distance(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_14distance(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("distance", 0);

  /* "pysfml261.pyx":132
 * 
 * 	def distance(self, MathVector2f v) -> float:
 * 		return sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2)
 * 			)
*/
  __Pyx_XDECREF(__pyx_r);

  /* "pysfml261.pyx":133
 * 	def distance(self, MathVector2f v) -> float:
 * 		return sqrtf(
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2)             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_1 = PyFloat_FromDouble(sqrtf((powf((__pyx_v_self->x - __pyx_v_v->x), 2.0) + powf((__pyx_v_self->y - __pyx_v_v->y), 2.0)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":131
 * 		return vp.modul / (m1 * m2)
 * 
 * 	def distance(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector2f.distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":136
 * 			)
 * 
 * 	def multiply_num(self, float num) -> None:             # <<<<<<<<<<<<<<
 * 		self.x *= num
 * 		self.y *= num
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_17multiply_num(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_17multiply_num = {"multiply_num", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_17multiply_num, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_17multiply_num(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_num;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("multiply_num (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_num,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 136, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 136, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "multiply_num", 0) < 0) __PYX_ERR(0, 136, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("multiply_num", 1, 1, 1, i); __PYX_ERR(0, 136, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 136, __pyx_L3_error)
    }
    __pyx_v_num = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_num == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 136, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("multiply_num", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 136, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.multiply_num", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_16multiply_num(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_num);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_16multiply_num(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, float __pyx_v_num) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("multiply_num", 0);

  /* "pysfml261.pyx":137
 * 
 * 	def multiply_num(self, float num) -> None:
 * 		self.x *= num             # <<<<<<<<<<<<<<
 * 		self.y *= num
 * 
*/
  __pyx_v_self->x = (__pyx_v_self->x * __pyx_v_num);

  /* "pysfml261.pyx":138
 * 	def multiply_num(self, float num) -> None:
 * 		self.x *= num
 * 		self.y *= num             # <<<<<<<<<<<<<<
 * 
 * 	def basis(self) -> MathVector2f:
*/
  __pyx_v_self->y = (__pyx_v_self->y * __pyx_v_num);

  /* "pysfml261.pyx":136
 * 			)
 * 
 * 	def multiply_num(self, float num) -> None:             # <<<<<<<<<<<<<<
 * 		self.x *= num
 * 		self.y *= num
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":140
 * 		self.y *= num
 * 
 * 	def basis(self) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		cdef float mod = self.modul
 * 		return MathVector2f(
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_19basis(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_19basis = {"basis", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_19basis, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_19basis(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("basis (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("basis", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("basis", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_18basis(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_18basis(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self) {
  float __pyx_v_mod;
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  float __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  size_t __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("basis", 0);

  /* "pysfml261.pyx":141
 * 
 * 	def basis(self) -> MathVector2f:
 * 		cdef float mod = self.modul             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x / mod, self.y / mod
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_mod = __pyx_t_2;

  /* "pysfml261.pyx":142
 * 	def basis(self) -> MathVector2f:
 * 		cdef float mod = self.modul
 * 		return MathVector2f(             # <<<<<<<<<<<<<<
 * 			self.x / mod, self.y / mod
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_3 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f);
  __pyx_t_4 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f); 

  /* "pysfml261.pyx":143
 * 		cdef float mod = self.modul
 * 		return MathVector2f(
 * 			self.x / mod, self.y / mod             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  if (unlikely(__pyx_v_mod == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 143, __pyx_L1_error)
  }
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->x / __pyx_v_mod)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (unlikely(__pyx_v_mod == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 143, __pyx_L1_error)
  }
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_self->y / __pyx_v_mod)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = 1;
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_7, (3-__pyx_t_7) | (__pyx_t_7*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 142, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":140
 * 		self.y *= num
 * 
 * 	def basis(self) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		cdef float mod = self.modul
 * 		return MathVector2f(
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pysfml261.MathVector2f.basis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":146
 * 			)
 * 
 * 	def is_parallel(self, MathVector2f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.x / v.x == self.y / v.y
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_21is_parallel(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_21is_parallel = {"is_parallel", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_21is_parallel, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_21is_parallel(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_parallel (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 146, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 146, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "is_parallel", 0) < 0) __PYX_ERR(0, 146, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("is_parallel", 1, 1, 1, i); __PYX_ERR(0, 146, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 146, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_parallel", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 146, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.is_parallel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 146, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_20is_parallel(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_20is_parallel(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_parallel", 0);

  /* "pysfml261.pyx":147
 * 
 * 	def is_parallel(self, MathVector2f v) -> bool:
 * 		return self.x / v.x == self.y / v.y             # <<<<<<<<<<<<<<
 * 
 * 	def is_perpendicular(self, MathVector2f v) -> bool:
*/
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_v->x == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 147, __pyx_L1_error)
  }
  if (unlikely(__pyx_v_v->y == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 147, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyBool_FromLong(((__pyx_v_self->x / __pyx_v_v->x) == (__pyx_v_self->y / __pyx_v_v->y))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":146
 * 			)
 * 
 * 	def is_parallel(self, MathVector2f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.x / v.x == self.y / v.y
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector2f.is_parallel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":149
 * 		return self.x / v.x == self.y / v.y
 * 
 * 	def is_perpendicular(self, MathVector2f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.scalar_product(v) == 0
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_23is_perpendicular(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_23is_perpendicular = {"is_perpendicular", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_23is_perpendicular, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_23is_perpendicular(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_perpendicular (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 149, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 149, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "is_perpendicular", 0) < 0) __PYX_ERR(0, 149, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("is_perpendicular", 1, 1, 1, i); __PYX_ERR(0, 149, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 149, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_perpendicular", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 149, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.is_perpendicular", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 149, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_22is_perpendicular(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_22is_perpendicular(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_perpendicular", 0);

  /* "pysfml261.pyx":150
 * 
 * 	def is_perpendicular(self, MathVector2f v) -> bool:
 * 		return self.scalar_product(v) == 0             # <<<<<<<<<<<<<<
 * 
 * 	def angle_between(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, ((PyObject *)__pyx_v_v)};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_scalar_product, __pyx_callargs+__pyx_t_3, (2-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_t_2 = __Pyx_PyLong_EqObjC(__pyx_t_1, __pyx_mstate_global->__pyx_int_0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":149
 * 		return self.x / v.x == self.y / v.y
 * 
 * 	def is_perpendicular(self, MathVector2f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.scalar_product(v) == 0
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.MathVector2f.is_perpendicular", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":152
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector2f v,
 * 		bint degrees = True) -> float:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_25angle_between(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_25angle_between = {"angle_between", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_25angle_between, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_25angle_between(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v = 0;
  int __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("angle_between (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 152, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 152, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 152, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "angle_between", 0) < 0) __PYX_ERR(0, 152, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("angle_between", 0, 1, 2, i); __PYX_ERR(0, 152, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 152, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 152, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector2f *)values[0]);
    if (values[1]) {
      __pyx_v_degrees = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_degrees == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 154, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":154
 * 	def angle_between(self,
 * 		MathVector2f v,
 * 		bint degrees = True) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = acos(self.cosin(v))
*/
      __pyx_v_degrees = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("angle_between", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 152, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.angle_between", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, 1, "v", 0))) __PYX_ERR(0, 153, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_24angle_between(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v_v, __pyx_v_degrees);

  /* "pysfml261.pyx":152
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector2f v,
 * 		bint degrees = True) -> float:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_24angle_between(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_v, int __pyx_v_degrees) {
  float __pyx_v_pi;
  float __pyx_v_radians;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  double __pyx_t_4;
  float __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("angle_between", 0);

  /* "pysfml261.pyx":155
 * 		MathVector2f v,
 * 		bint degrees = True) -> float:
 * 		cdef float pi = <float>M_PI             # <<<<<<<<<<<<<<
 * 		cdef float radians = acos(self.cosin(v))
 * 		if degrees:
*/
  __pyx_v_pi = ((float)M_PI);

  /* "pysfml261.pyx":156
 * 		bint degrees = True) -> float:
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = acos(self.cosin(v))             # <<<<<<<<<<<<<<
 * 		if degrees:
 * 			return radians * 180 / pi
*/
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, ((PyObject *)__pyx_v_v)};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_cosin, __pyx_callargs+__pyx_t_3, (2-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_t_4 = __Pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_radians = acos(__pyx_t_4);

  /* "pysfml261.pyx":157
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = acos(self.cosin(v))
 * 		if degrees:             # <<<<<<<<<<<<<<
 * 			return radians * 180 / pi
 * 		else:
*/
  if (__pyx_v_degrees) {

    /* "pysfml261.pyx":158
 * 		cdef float radians = acos(self.cosin(v))
 * 		if degrees:
 * 			return radians * 180 / pi             # <<<<<<<<<<<<<<
 * 		else:
 * 			return radians
*/
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = (__pyx_v_radians * 180.0);
    if (unlikely(__pyx_v_pi == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 158, __pyx_L1_error)
    }
    __pyx_t_1 = PyFloat_FromDouble((__pyx_t_5 / __pyx_v_pi)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pysfml261.pyx":157
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = acos(self.cosin(v))
 * 		if degrees:             # <<<<<<<<<<<<<<
 * 			return radians * 180 / pi
 * 		else:
*/
  }

  /* "pysfml261.pyx":160
 * 			return radians * 180 / pi
 * 		else:
 * 			return radians             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_radians); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pysfml261.pyx":152
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector2f v,
 * 		bint degrees = True) -> float:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.MathVector2f.angle_between", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":162
 * 			return radians
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def modul(self) -> float:
 * 		return sqrtf(
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_5modul_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_5modul_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_5modul___get__(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_5modul___get__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":164
 * 	@property
 * 	def modul(self) -> float:
 * 		return sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(self.x, 2) + powf(self.y, 2)
 * 			)
*/
  __Pyx_XDECREF(__pyx_r);

  /* "pysfml261.pyx":165
 * 	def modul(self) -> float:
 * 		return sqrtf(
 * 			powf(self.x, 2) + powf(self.y, 2)             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_1 = PyFloat_FromDouble(sqrtf((powf(__pyx_v_self->x, 2.0) + powf(__pyx_v_self->y, 2.0)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":162
 * 			return radians
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def modul(self) -> float:
 * 		return sqrtf(
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector2f.modul.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":168
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_points(MathPoint2f p1, MathPoint2f p2) -> MathVector2f:
 * 		return MathVector2f(
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_27from_points(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_27from_points = {"from_points", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_27from_points, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pw_9pysfml261_12MathVector2f_27from_points(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p1 = 0;
  struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p2 = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_points (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_p1,&__pyx_mstate_global->__pyx_n_u_p2,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 168, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 168, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 168, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "from_points", 0) < 0) __PYX_ERR(0, 168, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("from_points", 1, 2, 2, i); __PYX_ERR(0, 168, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 168, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 168, __pyx_L3_error)
    }
    __pyx_v_p1 = ((struct __pyx_obj_9pysfml261_MathPoint2f *)values[0]);
    __pyx_v_p2 = ((struct __pyx_obj_9pysfml261_MathPoint2f *)values[1]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_points", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 168, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.from_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p1), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathPoint2f, 1, "p1", 0))) __PYX_ERR(0, 169, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathPoint2f, 1, "p2", 0))) __PYX_ERR(0, 169, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_26from_points(__pyx_v_p1, __pyx_v_p2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector2f *__pyx_pf_9pysfml261_12MathVector2f_26from_points(struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p1, struct __pyx_obj_9pysfml261_MathPoint2f *__pyx_v_p2) {
  struct __pyx_obj_9pysfml261_MathVector2f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_points", 0);

  /* "pysfml261.pyx":170
 * 	@staticmethod
 * 	def from_points(MathPoint2f p1, MathPoint2f p2) -> MathVector2f:
 * 		return MathVector2f(             # <<<<<<<<<<<<<<
 * 			p2.x - p1.x, p2.y - p1.y
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f); 

  /* "pysfml261.pyx":171
 * 	def from_points(MathPoint2f p1, MathPoint2f p2) -> MathVector2f:
 * 		return MathVector2f(
 * 			p2.x - p1.x, p2.y - p1.y             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_p2->x - __pyx_v_p1->x)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_p2->y - __pyx_v_p1->y)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (3-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 170, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":168
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_points(MathPoint2f p1, MathPoint2f p2) -> MathVector2f:
 * 		return MathVector2f(
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pysfml261.MathVector2f.from_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":174
 * 			)
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_x(self) -> float:
 * 		return self.x
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_5pos_x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_5pos_x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_5pos_x___get__(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_5pos_x___get__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":176
 * 	@property
 * 	def pos_x(self) -> float:
 * 		return self.x             # <<<<<<<<<<<<<<
 * 
 * 	@pos_x.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":174
 * 			)
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_x(self) -> float:
 * 		return self.x
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector2f.pos_x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":178
 * 		return self.x
 * 
 * 	@pos_x.setter             # <<<<<<<<<<<<<<
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_12MathVector2f_5pos_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x); /*proto*/
static int __pyx_pw_9pysfml261_12MathVector2f_5pos_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x) {
  float __pyx_v_x;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_x); {
    __pyx_v_x = __Pyx_PyFloat_AsFloat(__pyx_arg_x); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathVector2f.pos_x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_5pos_x_2__set__(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), ((float)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_12MathVector2f_5pos_x_2__set__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, float __pyx_v_x) {
  int __pyx_r;

  /* "pysfml261.pyx":180
 * 	@pos_x.setter
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->x = __pyx_v_x;

  /* "pysfml261.pyx":178
 * 		return self.x
 * 
 * 	@pos_x.setter             # <<<<<<<<<<<<<<
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":182
 * 		self.x = x
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_y(self) -> float:
 * 		return self.y
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_5pos_y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_5pos_y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_5pos_y___get__(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_5pos_y___get__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":184
 * 	@property
 * 	def pos_y(self) -> float:
 * 		return self.y             # <<<<<<<<<<<<<<
 * 
 * 	@pos_y.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":182
 * 		self.x = x
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_y(self) -> float:
 * 		return self.y
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector2f.pos_y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":186
 * 		return self.y
 * 
 * 	@pos_y.setter             # <<<<<<<<<<<<<<
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_12MathVector2f_5pos_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y); /*proto*/
static int __pyx_pw_9pysfml261_12MathVector2f_5pos_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y) {
  float __pyx_v_y;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_y); {
    __pyx_v_y = __Pyx_PyFloat_AsFloat(__pyx_arg_y); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 187, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathVector2f.pos_y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_5pos_y_2__set__(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), ((float)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_12MathVector2f_5pos_y_2__set__(struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, float __pyx_v_y) {
  int __pyx_r;

  /* "pysfml261.pyx":188
 * 	@pos_y.setter
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->y = __pyx_v_y;

  /* "pysfml261.pyx":186
 * 		return self.y
 * 
 * 	@pos_y.setter             # <<<<<<<<<<<<<<
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_29__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_29__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_29__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_29__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_28__reduce_cython__(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_28__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.MathVector2f.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_31__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector2f_31__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_31__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector2f_31__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector2f.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector2f_30__setstate_cython__(((struct __pyx_obj_9pysfml261_MathVector2f *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector2f_30__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathVector2f *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.MathVector2f.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":197
 * 	cdef float z
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11MathPoint3f_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_11MathPoint3f_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_z,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 197, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 197, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 197, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 197, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 197, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 197, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 197, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 197, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 198, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 199, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_z = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 200, __pyx_L3_error)
    } else {
      __pyx_v_z = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 197, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathPoint3f.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f___cinit__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11MathPoint3f___cinit__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z) {
  int __pyx_r;

  /* "pysfml261.pyx":202
 * 		float z = 0
 * 		):
 * 		self.x = x             # <<<<<<<<<<<<<<
 * 		self.y = y
 * 		self.z = z
*/
  __pyx_v_self->x = __pyx_v_x;

  /* "pysfml261.pyx":203
 * 		):
 * 		self.x = x
 * 		self.y = y             # <<<<<<<<<<<<<<
 * 		self.z = z
 * 
*/
  __pyx_v_self->y = __pyx_v_y;

  /* "pysfml261.pyx":204
 * 		self.x = x
 * 		self.y = y
 * 		self.z = z             # <<<<<<<<<<<<<<
 * 
 * 	def distance(self, MathPoint3f p) -> float:
*/
  __pyx_v_self->z = __pyx_v_z;

  /* "pysfml261.pyx":197
 * 	cdef float z
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":206
 * 		self.z = z
 * 
 * 	def distance(self, MathPoint3f p) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2) + powf(self.z - p.z, 2)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_3distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11MathPoint3f_3distance = {"distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint3f_3distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_3distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_p,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 206, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 206, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "distance", 0) < 0) __PYX_ERR(0, 206, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("distance", 1, 1, 1, i); __PYX_ERR(0, 206, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 206, __pyx_L3_error)
    }
    __pyx_v_p = ((struct __pyx_obj_9pysfml261_MathPoint3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("distance", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 206, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathPoint3f.distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathPoint3f, 1, "p", 0))) __PYX_ERR(0, 206, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_2distance(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self), __pyx_v_p);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_2distance(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("distance", 0);

  /* "pysfml261.pyx":207
 * 
 * 	def distance(self, MathPoint3f p) -> float:
 * 		return sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2) + powf(self.z - p.z, 2)
 * 			)
*/
  __Pyx_XDECREF(__pyx_r);

  /* "pysfml261.pyx":208
 * 	def distance(self, MathPoint3f p) -> float:
 * 		return sqrtf(
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2) + powf(self.z - p.z, 2)             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_1 = PyFloat_FromDouble(sqrtf(((powf((__pyx_v_self->x - __pyx_v_p->x), 2.0) + powf((__pyx_v_self->y - __pyx_v_p->y), 2.0)) + powf((__pyx_v_self->z - __pyx_v_p->z), 2.0)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":206
 * 		self.z = z
 * 
 * 	def distance(self, MathPoint3f p) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2) + powf(self.z - p.z, 2)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathPoint3f.distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":211
 * 			)
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_x(self) -> float:
 * 		return self.x
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_5pos_x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_5pos_x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_5pos_x___get__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_5pos_x___get__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":213
 * 	@property
 * 	def pos_x(self) -> float:
 * 		return self.x             # <<<<<<<<<<<<<<
 * 
 * 	@pos_x.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":211
 * 			)
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_x(self) -> float:
 * 		return self.x
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathPoint3f.pos_x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":215
 * 		return self.x
 * 
 * 	@pos_x.setter             # <<<<<<<<<<<<<<
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11MathPoint3f_5pos_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x); /*proto*/
static int __pyx_pw_9pysfml261_11MathPoint3f_5pos_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x) {
  float __pyx_v_x;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_x); {
    __pyx_v_x = __Pyx_PyFloat_AsFloat(__pyx_arg_x); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 216, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint3f.pos_x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_5pos_x_2__set__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self), ((float)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11MathPoint3f_5pos_x_2__set__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, float __pyx_v_x) {
  int __pyx_r;

  /* "pysfml261.pyx":217
 * 	@pos_x.setter
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->x = __pyx_v_x;

  /* "pysfml261.pyx":215
 * 		return self.x
 * 
 * 	@pos_x.setter             # <<<<<<<<<<<<<<
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":219
 * 		self.x = x
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_y(self) -> float:
 * 		return self.y
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_5pos_y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_5pos_y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_5pos_y___get__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_5pos_y___get__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":221
 * 	@property
 * 	def pos_y(self) -> float:
 * 		return self.y             # <<<<<<<<<<<<<<
 * 
 * 	@pos_y.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":219
 * 		self.x = x
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_y(self) -> float:
 * 		return self.y
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathPoint3f.pos_y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":223
 * 		return self.y
 * 
 * 	@pos_y.setter             # <<<<<<<<<<<<<<
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11MathPoint3f_5pos_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y); /*proto*/
static int __pyx_pw_9pysfml261_11MathPoint3f_5pos_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y) {
  float __pyx_v_y;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_y); {
    __pyx_v_y = __Pyx_PyFloat_AsFloat(__pyx_arg_y); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 224, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint3f.pos_y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_5pos_y_2__set__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self), ((float)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11MathPoint3f_5pos_y_2__set__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, float __pyx_v_y) {
  int __pyx_r;

  /* "pysfml261.pyx":225
 * 	@pos_y.setter
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->y = __pyx_v_y;

  /* "pysfml261.pyx":223
 * 		return self.y
 * 
 * 	@pos_y.setter             # <<<<<<<<<<<<<<
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":227
 * 		self.y = y
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_z(self) -> float:
 * 		return self.z
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_5pos_z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_5pos_z_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_5pos_z___get__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_5pos_z___get__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":229
 * 	@property
 * 	def pos_z(self) -> float:
 * 		return self.z             # <<<<<<<<<<<<<<
 * 
 * 	@pos_z.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":227
 * 		self.y = y
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_z(self) -> float:
 * 		return self.z
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathPoint3f.pos_z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":231
 * 		return self.z
 * 
 * 	@pos_z.setter             # <<<<<<<<<<<<<<
 * 	def pos_z(self, float z) -> None:
 * 		self.z = z
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11MathPoint3f_5pos_z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_z); /*proto*/
static int __pyx_pw_9pysfml261_11MathPoint3f_5pos_z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_z) {
  float __pyx_v_z;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_z); {
    __pyx_v_z = __Pyx_PyFloat_AsFloat(__pyx_arg_z); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 232, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint3f.pos_z.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_5pos_z_2__set__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self), ((float)__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11MathPoint3f_5pos_z_2__set__(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, float __pyx_v_z) {
  int __pyx_r;

  /* "pysfml261.pyx":233
 * 	@pos_z.setter
 * 	def pos_z(self, float z) -> None:
 * 		self.z = z             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->z = __pyx_v_z;

  /* "pysfml261.pyx":231
 * 		return self.z
 * 
 * 	@pos_z.setter             # <<<<<<<<<<<<<<
 * 	def pos_z(self, float z) -> None:
 * 		self.z = z
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11MathPoint3f_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint3f_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_4__reduce_cython__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint3f.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11MathPoint3f_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint3f_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11MathPoint3f_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathPoint3f.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11MathPoint3f_6__setstate_cython__(((struct __pyx_obj_9pysfml261_MathPoint3f *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11MathPoint3f_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.MathPoint3f.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":242
 * 	cdef float z
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_12MathVector3f_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_12MathVector3f_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_z,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 242, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 242, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 242, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 242, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 242, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 242, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 242, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 242, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 244, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_z = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 245, __pyx_L3_error)
    } else {
      __pyx_v_z = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 242, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f___cinit__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_12MathVector3f___cinit__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z) {
  int __pyx_r;

  /* "pysfml261.pyx":246
 * 		float y = 0,
 * 		float z = 0):
 * 		self.x = x             # <<<<<<<<<<<<<<
 * 		self.y = y
 * 		self.z = z
*/
  __pyx_v_self->x = __pyx_v_x;

  /* "pysfml261.pyx":247
 * 		float z = 0):
 * 		self.x = x
 * 		self.y = y             # <<<<<<<<<<<<<<
 * 		self.z = z
 * 
*/
  __pyx_v_self->y = __pyx_v_y;

  /* "pysfml261.pyx":248
 * 		self.x = x
 * 		self.y = y
 * 		self.z = z             # <<<<<<<<<<<<<<
 * 
 * 	def sum(self, MathVector3f v) -> MathVector3f:
*/
  __pyx_v_self->z = __pyx_v_z;

  /* "pysfml261.pyx":242
 * 	cdef float z
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":250
 * 		self.z = z
 * 
 * 	def sum(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		return MathVector3f(
 * 			self.x + v.x, self.y + v.y, self.z + v.z
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_3sum(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_3sum = {"sum", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_3sum, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_3sum(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sum (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 250, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 250, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "sum", 0) < 0) __PYX_ERR(0, 250, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("sum", 1, 1, 1, i); __PYX_ERR(0, 250, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 250, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sum", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 250, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.sum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 250, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_2sum(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_2sum(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  size_t __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sum", 0);

  /* "pysfml261.pyx":251
 * 
 * 	def sum(self, MathVector3f v) -> MathVector3f:
 * 		return MathVector3f(             # <<<<<<<<<<<<<<
 * 			self.x + v.x, self.y + v.y, self.z + v.z
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f); 

  /* "pysfml261.pyx":252
 * 	def sum(self, MathVector3f v) -> MathVector3f:
 * 		return MathVector3f(
 * 			self.x + v.x, self.y + v.y, self.z + v.z             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->x + __pyx_v_v->x)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->y + __pyx_v_v->y)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_self->z + __pyx_v_v->z)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = 1;
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_7, (4-__pyx_t_7) | (__pyx_t_7*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":250
 * 		self.z = z
 * 
 * 	def sum(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		return MathVector3f(
 * 			self.x + v.x, self.y + v.y, self.z + v.z
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pysfml261.MathVector3f.sum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":255
 * 			)
 * 
 * 	def sub(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		return MathVector3f(
 * 			self.x - v.x, self.y - v.y, self.z - v.z
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_5sub(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_5sub = {"sub", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_5sub, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_5sub(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sub (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 255, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 255, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "sub", 0) < 0) __PYX_ERR(0, 255, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("sub", 1, 1, 1, i); __PYX_ERR(0, 255, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 255, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sub", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 255, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.sub", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 255, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_4sub(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_4sub(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  size_t __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sub", 0);

  /* "pysfml261.pyx":256
 * 
 * 	def sub(self, MathVector3f v) -> MathVector3f:
 * 		return MathVector3f(             # <<<<<<<<<<<<<<
 * 			self.x - v.x, self.y - v.y, self.z - v.z
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f); 

  /* "pysfml261.pyx":257
 * 	def sub(self, MathVector3f v) -> MathVector3f:
 * 		return MathVector3f(
 * 			self.x - v.x, self.y - v.y, self.z - v.z             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_self->x - __pyx_v_v->x)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->y - __pyx_v_v->y)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_self->z - __pyx_v_v->z)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = 1;
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_7, (4-__pyx_t_7) | (__pyx_t_7*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 256, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":255
 * 			)
 * 
 * 	def sub(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		return MathVector3f(
 * 			self.x - v.x, self.y - v.y, self.z - v.z
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pysfml261.MathVector3f.sub", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":260
 * 			)
 * 
 * 	def scalar_product(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		return self.x * v.x + self.y * v.y + self.z * v.z
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_7scalar_product(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_7scalar_product = {"scalar_product", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_7scalar_product, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_7scalar_product(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scalar_product (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 260, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 260, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "scalar_product", 0) < 0) __PYX_ERR(0, 260, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("scalar_product", 1, 1, 1, i); __PYX_ERR(0, 260, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 260, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scalar_product", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 260, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.scalar_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 260, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_6scalar_product(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_6scalar_product(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scalar_product", 0);

  /* "pysfml261.pyx":261
 * 
 * 	def scalar_product(self, MathVector3f v) -> float:
 * 		return self.x * v.x + self.y * v.y + self.z * v.z             # <<<<<<<<<<<<<<
 * 
 * 	def cosin(self, MathVector3f v) -> float:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((((__pyx_v_self->x * __pyx_v_v->x) + (__pyx_v_self->y * __pyx_v_v->y)) + (__pyx_v_self->z * __pyx_v_v->z))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":260
 * 			)
 * 
 * 	def scalar_product(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		return self.x * v.x + self.y * v.y + self.z * v.z
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector3f.scalar_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":263
 * 		return self.x * v.x + self.y * v.y + self.z * v.z
 * 
 * 	def cosin(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_9cosin(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_9cosin = {"cosin", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_9cosin, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_9cosin(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cosin (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 263, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 263, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "cosin", 0) < 0) __PYX_ERR(0, 263, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("cosin", 1, 1, 1, i); __PYX_ERR(0, 263, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 263, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cosin", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 263, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.cosin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 263, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_8cosin(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_8cosin(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  float __pyx_v_sc;
  float __pyx_v_m1;
  float __pyx_v_m2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  float __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cosin", 0);

  /* "pysfml261.pyx":264
 * 
 * 	def cosin(self, MathVector3f v) -> float:
 * 		cdef float sc = self.scalar_product(v)             # <<<<<<<<<<<<<<
 * 		cdef float m1 = self.modul, m2 = v.modul
 * 		return sc / (m1 * m2)
*/
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, ((PyObject *)__pyx_v_v)};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_scalar_product, __pyx_callargs+__pyx_t_3, (2-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_sc = __pyx_t_4;

  /* "pysfml261.pyx":265
 * 	def cosin(self, MathVector3f v) -> float:
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul             # <<<<<<<<<<<<<<
 * 		return sc / (m1 * m2)
 * 
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m1 = __pyx_t_4;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m2 = __pyx_t_4;

  /* "pysfml261.pyx":266
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
 * 		return sc / (m1 * m2)             # <<<<<<<<<<<<<<
 * 
 * 	def vector_product(self, MathVector3f v) -> MathVector3f:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = (__pyx_v_m1 * __pyx_v_m2);
  if (unlikely(__pyx_t_4 == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 266, __pyx_L1_error)
  }
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_sc / __pyx_t_4)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":263
 * 		return self.x * v.x + self.y * v.y + self.z * v.z
 * 
 * 	def cosin(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.MathVector3f.cosin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":268
 * 		return sc / (m1 * m2)
 * 
 * 	def vector_product(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		cdef float x = self.y * v.z - self.z * v.y
 * 		cdef float y = -(self.x * v.z - self.z * v.x)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_11vector_product(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_11vector_product = {"vector_product", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_11vector_product, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_11vector_product(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vector_product (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 268, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 268, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "vector_product", 0) < 0) __PYX_ERR(0, 268, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("vector_product", 1, 1, 1, i); __PYX_ERR(0, 268, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 268, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("vector_product", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 268, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.vector_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 268, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_10vector_product(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_10vector_product(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  size_t __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("vector_product", 0);

  /* "pysfml261.pyx":269
 * 
 * 	def vector_product(self, MathVector3f v) -> MathVector3f:
 * 		cdef float x = self.y * v.z - self.z * v.y             # <<<<<<<<<<<<<<
 * 		cdef float y = -(self.x * v.z - self.z * v.x)
 * 		cdef float z = self.x * v.y - self.y * v.x
*/
  __pyx_v_x = ((__pyx_v_self->y * __pyx_v_v->z) - (__pyx_v_self->z * __pyx_v_v->y));

  /* "pysfml261.pyx":270
 * 	def vector_product(self, MathVector3f v) -> MathVector3f:
 * 		cdef float x = self.y * v.z - self.z * v.y
 * 		cdef float y = -(self.x * v.z - self.z * v.x)             # <<<<<<<<<<<<<<
 * 		cdef float z = self.x * v.y - self.y * v.x
 * 		return MathVector3f(x, y, z)
*/
  __pyx_v_y = (-((__pyx_v_self->x * __pyx_v_v->z) - (__pyx_v_self->z * __pyx_v_v->x)));

  /* "pysfml261.pyx":271
 * 		cdef float x = self.y * v.z - self.z * v.y
 * 		cdef float y = -(self.x * v.z - self.z * v.x)
 * 		cdef float z = self.x * v.y - self.y * v.x             # <<<<<<<<<<<<<<
 * 		return MathVector3f(x, y, z)
 * 
*/
  __pyx_v_z = ((__pyx_v_self->x * __pyx_v_v->y) - (__pyx_v_self->y * __pyx_v_v->x));

  /* "pysfml261.pyx":272
 * 		cdef float y = -(self.x * v.z - self.z * v.x)
 * 		cdef float z = self.x * v.y - self.y * v.x
 * 		return MathVector3f(x, y, z)             # <<<<<<<<<<<<<<
 * 
 * 	def sinus(self, MathVector3f v) -> float:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_y); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_z); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = 1;
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_7, (4-__pyx_t_7) | (__pyx_t_7*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":268
 * 		return sc / (m1 * m2)
 * 
 * 	def vector_product(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		cdef float x = self.y * v.z - self.z * v.y
 * 		cdef float y = -(self.x * v.z - self.z * v.x)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pysfml261.MathVector3f.vector_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":274
 * 		return MathVector3f(x, y, z)
 * 
 * 	def sinus(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef MathVector3f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_13sinus(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_13sinus = {"sinus", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_13sinus, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_13sinus(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sinus (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 274, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 274, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "sinus", 0) < 0) __PYX_ERR(0, 274, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("sinus", 1, 1, 1, i); __PYX_ERR(0, 274, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 274, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sinus", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 274, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.sinus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 274, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_12sinus(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_12sinus(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_vp = 0;
  float __pyx_v_m1;
  float __pyx_v_m2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  float __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sinus", 0);

  /* "pysfml261.pyx":275
 * 
 * 	def sinus(self, MathVector3f v) -> float:
 * 		cdef MathVector3f vp = self.vector_product(v)             # <<<<<<<<<<<<<<
 * 		cdef float m1 = self.modul, m2 = v.modul
 * 		return vp.modul / (m1 * m2)
*/
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, ((PyObject *)__pyx_v_v)};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_vector_product, __pyx_callargs+__pyx_t_3, (2-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f))))) __PYX_ERR(0, 275, __pyx_L1_error)
  __pyx_v_vp = ((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pysfml261.pyx":276
 * 	def sinus(self, MathVector3f v) -> float:
 * 		cdef MathVector3f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul             # <<<<<<<<<<<<<<
 * 		return vp.modul / (m1 * m2)
 * 
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 276, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m1 = __pyx_t_4;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 276, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m2 = __pyx_t_4;

  /* "pysfml261.pyx":277
 * 		cdef MathVector3f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
 * 		return vp.modul / (m1 * m2)             # <<<<<<<<<<<<<<
 * 
 * 	def distance(self, MathVector3f v) -> float:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vp), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_m1 * __pyx_v_m2)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":274
 * 		return MathVector3f(x, y, z)
 * 
 * 	def sinus(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef MathVector3f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pysfml261.MathVector3f.sinus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":279
 * 		return vp.modul / (m1 * m2)
 * 
 * 	def distance(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2) + powf(self.z - v.z, 2)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_15distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_15distance = {"distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_15distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_15distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 279, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 279, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "distance", 0) < 0) __PYX_ERR(0, 279, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("distance", 1, 1, 1, i); __PYX_ERR(0, 279, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 279, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("distance", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 279, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 279, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_14distance(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_14distance(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("distance", 0);

  /* "pysfml261.pyx":280
 * 
 * 	def distance(self, MathVector3f v) -> float:
 * 		return sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2) + powf(self.z - v.z, 2)
 * 			)
*/
  __Pyx_XDECREF(__pyx_r);

  /* "pysfml261.pyx":281
 * 	def distance(self, MathVector3f v) -> float:
 * 		return sqrtf(
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2) + powf(self.z - v.z, 2)             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_1 = PyFloat_FromDouble(sqrtf(((powf((__pyx_v_self->x - __pyx_v_v->x), 2.0) + powf((__pyx_v_self->y - __pyx_v_v->y), 2.0)) + powf((__pyx_v_self->z - __pyx_v_v->z), 2.0)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":279
 * 		return vp.modul / (m1 * m2)
 * 
 * 	def distance(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2) + powf(self.z - v.z, 2)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector3f.distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":284
 * 			)
 * 
 * 	def multiply_num(self, float num) -> None:             # <<<<<<<<<<<<<<
 * 		self.x *= num
 * 		self.y *= num
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_17multiply_num(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_17multiply_num = {"multiply_num", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_17multiply_num, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_17multiply_num(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_num;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("multiply_num (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_num,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 284, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 284, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "multiply_num", 0) < 0) __PYX_ERR(0, 284, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("multiply_num", 1, 1, 1, i); __PYX_ERR(0, 284, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 284, __pyx_L3_error)
    }
    __pyx_v_num = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_num == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 284, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("multiply_num", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 284, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.multiply_num", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_16multiply_num(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_num);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_16multiply_num(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_num) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("multiply_num", 0);

  /* "pysfml261.pyx":285
 * 
 * 	def multiply_num(self, float num) -> None:
 * 		self.x *= num             # <<<<<<<<<<<<<<
 * 		self.y *= num
 * 		self.z *= num
*/
  __pyx_v_self->x = (__pyx_v_self->x * __pyx_v_num);

  /* "pysfml261.pyx":286
 * 	def multiply_num(self, float num) -> None:
 * 		self.x *= num
 * 		self.y *= num             # <<<<<<<<<<<<<<
 * 		self.z *= num
 * 
*/
  __pyx_v_self->y = (__pyx_v_self->y * __pyx_v_num);

  /* "pysfml261.pyx":287
 * 		self.x *= num
 * 		self.y *= num
 * 		self.z *= num             # <<<<<<<<<<<<<<
 * 
 * 	def basis(self) -> MathVector3f:
*/
  __pyx_v_self->z = (__pyx_v_self->z * __pyx_v_num);

  /* "pysfml261.pyx":284
 * 			)
 * 
 * 	def multiply_num(self, float num) -> None:             # <<<<<<<<<<<<<<
 * 		self.x *= num
 * 		self.y *= num
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":289
 * 		self.z *= num
 * 
 * 	def basis(self) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		cdef float mod = self.modul
 * 		return MathVector3f(
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_19basis(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_19basis = {"basis", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_19basis, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_19basis(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("basis (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("basis", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("basis", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_18basis(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_18basis(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self) {
  float __pyx_v_mod;
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  float __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("basis", 0);

  /* "pysfml261.pyx":290
 * 
 * 	def basis(self) -> MathVector3f:
 * 		cdef float mod = self.modul             # <<<<<<<<<<<<<<
 * 		return MathVector3f(
 * 			self.x / mod, self.y / mod, self.z / mod
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_modul); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_mod = __pyx_t_2;

  /* "pysfml261.pyx":291
 * 	def basis(self) -> MathVector3f:
 * 		cdef float mod = self.modul
 * 		return MathVector3f(             # <<<<<<<<<<<<<<
 * 			self.x / mod, self.y / mod, self.z / mod
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_3 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f);
  __pyx_t_4 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f); 

  /* "pysfml261.pyx":292
 * 		cdef float mod = self.modul
 * 		return MathVector3f(
 * 			self.x / mod, self.y / mod, self.z / mod             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  if (unlikely(__pyx_v_mod == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 292, __pyx_L1_error)
  }
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_self->x / __pyx_v_mod)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (unlikely(__pyx_v_mod == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 292, __pyx_L1_error)
  }
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_self->y / __pyx_v_mod)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (unlikely(__pyx_v_mod == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 292, __pyx_L1_error)
  }
  __pyx_t_7 = PyFloat_FromDouble((__pyx_v_self->z / __pyx_v_mod)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_8, (4-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 291, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":289
 * 		self.z *= num
 * 
 * 	def basis(self) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		cdef float mod = self.modul
 * 		return MathVector3f(
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.MathVector3f.basis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":295
 * 			)
 * 
 * 	def is_parallel(self, MathVector3f v) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef float k = self.x / v.x
 * 		return k == self.y / v.y and k == self.z / v.z
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_21is_parallel(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_21is_parallel = {"is_parallel", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_21is_parallel, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_21is_parallel(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_parallel (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 295, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 295, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "is_parallel", 0) < 0) __PYX_ERR(0, 295, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("is_parallel", 1, 1, 1, i); __PYX_ERR(0, 295, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 295, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_parallel", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 295, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.is_parallel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 295, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_20is_parallel(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_20is_parallel(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  float __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_parallel", 0);

  /* "pysfml261.pyx":296
 * 
 * 	def is_parallel(self, MathVector3f v) -> bool:
 * 		cdef float k = self.x / v.x             # <<<<<<<<<<<<<<
 * 		return k == self.y / v.y and k == self.z / v.z
 * 
*/
  if (unlikely(__pyx_v_v->x == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 296, __pyx_L1_error)
  }
  __pyx_v_k = (__pyx_v_self->x / __pyx_v_v->x);

  /* "pysfml261.pyx":297
 * 	def is_parallel(self, MathVector3f v) -> bool:
 * 		cdef float k = self.x / v.x
 * 		return k == self.y / v.y and k == self.z / v.z             # <<<<<<<<<<<<<<
 * 
 * 	def is_perpendicular(self, MathVector3f v) -> bool:
*/
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_v->y == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 297, __pyx_L1_error)
  }
  __pyx_t_2 = (__pyx_v_k == (__pyx_v_self->y / __pyx_v_v->y));
  if (__pyx_t_2) {
  } else {
    __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  if (unlikely(__pyx_v_v->z == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 297, __pyx_L1_error)
  }
  __pyx_t_2 = (__pyx_v_k == (__pyx_v_self->z / __pyx_v_v->z));
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":295
 * 			)
 * 
 * 	def is_parallel(self, MathVector3f v) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef float k = self.x / v.x
 * 		return k == self.y / v.y and k == self.z / v.z
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.MathVector3f.is_parallel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":299
 * 		return k == self.y / v.y and k == self.z / v.z
 * 
 * 	def is_perpendicular(self, MathVector3f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.scalar_product(v) == 0
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_23is_perpendicular(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_23is_perpendicular = {"is_perpendicular", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_23is_perpendicular, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_23is_perpendicular(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_perpendicular (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 299, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 299, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "is_perpendicular", 0) < 0) __PYX_ERR(0, 299, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("is_perpendicular", 1, 1, 1, i); __PYX_ERR(0, 299, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 299, __pyx_L3_error)
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_perpendicular", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 299, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.is_perpendicular", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 299, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_22is_perpendicular(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_22is_perpendicular(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_perpendicular", 0);

  /* "pysfml261.pyx":300
 * 
 * 	def is_perpendicular(self, MathVector3f v) -> bool:
 * 		return self.scalar_product(v) == 0             # <<<<<<<<<<<<<<
 * 
 * 	def angle_between(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, ((PyObject *)__pyx_v_v)};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_scalar_product, __pyx_callargs+__pyx_t_3, (2-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_t_2 = __Pyx_PyLong_EqObjC(__pyx_t_1, __pyx_mstate_global->__pyx_int_0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":299
 * 		return k == self.y / v.y and k == self.z / v.z
 * 
 * 	def is_perpendicular(self, MathVector3f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.scalar_product(v) == 0
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.MathVector3f.is_perpendicular", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":302
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector3f v,
 * 		bint degrees = True) -> float:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_25angle_between(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_25angle_between = {"angle_between", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_25angle_between, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_25angle_between(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v = 0;
  int __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("angle_between (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_v,&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 302, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 302, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 302, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "angle_between", 0) < 0) __PYX_ERR(0, 302, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("angle_between", 0, 1, 2, i); __PYX_ERR(0, 302, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 302, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 302, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_v = ((struct __pyx_obj_9pysfml261_MathVector3f *)values[0]);
    if (values[1]) {
      __pyx_v_degrees = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_degrees == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 304, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":304
 * 	def angle_between(self,
 * 		MathVector3f v,
 * 		bint degrees = True) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = acos(self.cosin(v))
*/
      __pyx_v_degrees = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("angle_between", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 302, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.angle_between", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, 1, "v", 0))) __PYX_ERR(0, 303, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_24angle_between(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v_v, __pyx_v_degrees);

  /* "pysfml261.pyx":302
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector3f v,
 * 		bint degrees = True) -> float:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_24angle_between(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_v, int __pyx_v_degrees) {
  float __pyx_v_pi;
  float __pyx_v_radians;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  double __pyx_t_4;
  float __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("angle_between", 0);

  /* "pysfml261.pyx":305
 * 		MathVector3f v,
 * 		bint degrees = True) -> float:
 * 		cdef float pi = <float>M_PI             # <<<<<<<<<<<<<<
 * 		cdef float radians = acos(self.cosin(v))
 * 		if degrees:
*/
  __pyx_v_pi = ((float)M_PI);

  /* "pysfml261.pyx":306
 * 		bint degrees = True) -> float:
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = acos(self.cosin(v))             # <<<<<<<<<<<<<<
 * 		if degrees:
 * 			return radians * 180 / pi
*/
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, ((PyObject *)__pyx_v_v)};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_cosin, __pyx_callargs+__pyx_t_3, (2-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_t_4 = __Pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 306, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_radians = acos(__pyx_t_4);

  /* "pysfml261.pyx":307
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = acos(self.cosin(v))
 * 		if degrees:             # <<<<<<<<<<<<<<
 * 			return radians * 180 / pi
 * 		else:
*/
  if (__pyx_v_degrees) {

    /* "pysfml261.pyx":308
 * 		cdef float radians = acos(self.cosin(v))
 * 		if degrees:
 * 			return radians * 180 / pi             # <<<<<<<<<<<<<<
 * 		else:
 * 			return radians
*/
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = (__pyx_v_radians * 180.0);
    if (unlikely(__pyx_v_pi == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 308, __pyx_L1_error)
    }
    __pyx_t_1 = PyFloat_FromDouble((__pyx_t_5 / __pyx_v_pi)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pysfml261.pyx":307
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = acos(self.cosin(v))
 * 		if degrees:             # <<<<<<<<<<<<<<
 * 			return radians * 180 / pi
 * 		else:
*/
  }

  /* "pysfml261.pyx":310
 * 			return radians * 180 / pi
 * 		else:
 * 			return radians             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_radians); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 310, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pysfml261.pyx":302
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector3f v,
 * 		bint degrees = True) -> float:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.MathVector3f.angle_between", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":312
 * 			return radians
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def modul(self) -> float:
 * 		return sqrtf(
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_5modul_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_5modul_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_5modul___get__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_5modul___get__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":314
 * 	@property
 * 	def modul(self) -> float:
 * 		return sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(self.x, 2) + powf(self.y, 2) + powf(self.z, 2)
 * 			)
*/
  __Pyx_XDECREF(__pyx_r);

  /* "pysfml261.pyx":315
 * 	def modul(self) -> float:
 * 		return sqrtf(
 * 			powf(self.x, 2) + powf(self.y, 2) + powf(self.z, 2)             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_1 = PyFloat_FromDouble(sqrtf(((powf(__pyx_v_self->x, 2.0) + powf(__pyx_v_self->y, 2.0)) + powf(__pyx_v_self->z, 2.0)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":312
 * 			return radians
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def modul(self) -> float:
 * 		return sqrtf(
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector3f.modul.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":318
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_points(MathPoint3f p1, MathPoint3f p2) -> MathVector3f:
 * 		return MathVector3f(
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_27from_points(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_27from_points = {"from_points", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_27from_points, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pw_9pysfml261_12MathVector3f_27from_points(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p1 = 0;
  struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p2 = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_points (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_p1,&__pyx_mstate_global->__pyx_n_u_p2,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 318, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 318, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 318, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "from_points", 0) < 0) __PYX_ERR(0, 318, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("from_points", 1, 2, 2, i); __PYX_ERR(0, 318, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 318, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 318, __pyx_L3_error)
    }
    __pyx_v_p1 = ((struct __pyx_obj_9pysfml261_MathPoint3f *)values[0]);
    __pyx_v_p2 = ((struct __pyx_obj_9pysfml261_MathPoint3f *)values[1]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_points", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 318, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.from_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p1), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathPoint3f, 1, "p1", 0))) __PYX_ERR(0, 319, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2), __pyx_mstate_global->__pyx_ptype_9pysfml261_MathPoint3f, 1, "p2", 0))) __PYX_ERR(0, 319, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_26from_points(__pyx_v_p1, __pyx_v_p2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_MathVector3f *__pyx_pf_9pysfml261_12MathVector3f_26from_points(struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p1, struct __pyx_obj_9pysfml261_MathPoint3f *__pyx_v_p2) {
  struct __pyx_obj_9pysfml261_MathVector3f *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  size_t __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_points", 0);

  /* "pysfml261.pyx":320
 * 	@staticmethod
 * 	def from_points(MathPoint3f p1, MathPoint3f p2) -> MathVector3f:
 * 		return MathVector3f(             # <<<<<<<<<<<<<<
 * 			p2.x - p1.x, p2.y - p1.y, p2.z - p1.z
 * 			)
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f); 

  /* "pysfml261.pyx":321
 * 	def from_points(MathPoint3f p1, MathPoint3f p2) -> MathVector3f:
 * 		return MathVector3f(
 * 			p2.x - p1.x, p2.y - p1.y, p2.z - p1.z             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_p2->x - __pyx_v_p1->x)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_p2->y - __pyx_v_p1->y)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_p2->z - __pyx_v_p1->z)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = 1;
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_7, (4-__pyx_t_7) | (__pyx_t_7*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":318
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_points(MathPoint3f p1, MathPoint3f p2) -> MathVector3f:
 * 		return MathVector3f(
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pysfml261.MathVector3f.from_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":324
 * 			)
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_x(self) -> float:
 * 		return self.x
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_5pos_x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_5pos_x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_5pos_x___get__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_5pos_x___get__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":326
 * 	@property
 * 	def pos_x(self) -> float:
 * 		return self.x             # <<<<<<<<<<<<<<
 * 
 * 	@pos_x.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":324
 * 			)
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_x(self) -> float:
 * 		return self.x
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector3f.pos_x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":328
 * 		return self.x
 * 
 * 	@pos_x.setter             # <<<<<<<<<<<<<<
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_12MathVector3f_5pos_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x); /*proto*/
static int __pyx_pw_9pysfml261_12MathVector3f_5pos_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x) {
  float __pyx_v_x;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_x); {
    __pyx_v_x = __Pyx_PyFloat_AsFloat(__pyx_arg_x); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 329, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathVector3f.pos_x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_5pos_x_2__set__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), ((float)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_12MathVector3f_5pos_x_2__set__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_x) {
  int __pyx_r;

  /* "pysfml261.pyx":330
 * 	@pos_x.setter
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->x = __pyx_v_x;

  /* "pysfml261.pyx":328
 * 		return self.x
 * 
 * 	@pos_x.setter             # <<<<<<<<<<<<<<
 * 	def pos_x(self, float x) -> None:
 * 		self.x = x
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":332
 * 		self.x = x
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_y(self) -> float:
 * 		return self.y
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_5pos_y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_5pos_y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_5pos_y___get__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_5pos_y___get__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":334
 * 	@property
 * 	def pos_y(self) -> float:
 * 		return self.y             # <<<<<<<<<<<<<<
 * 
 * 	@pos_y.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":332
 * 		self.x = x
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_y(self) -> float:
 * 		return self.y
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector3f.pos_y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":336
 * 		return self.y
 * 
 * 	@pos_y.setter             # <<<<<<<<<<<<<<
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_12MathVector3f_5pos_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y); /*proto*/
static int __pyx_pw_9pysfml261_12MathVector3f_5pos_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y) {
  float __pyx_v_y;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_y); {
    __pyx_v_y = __Pyx_PyFloat_AsFloat(__pyx_arg_y); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 337, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathVector3f.pos_y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_5pos_y_2__set__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), ((float)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_12MathVector3f_5pos_y_2__set__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_y) {
  int __pyx_r;

  /* "pysfml261.pyx":338
 * 	@pos_y.setter
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->y = __pyx_v_y;

  /* "pysfml261.pyx":336
 * 		return self.y
 * 
 * 	@pos_y.setter             # <<<<<<<<<<<<<<
 * 	def pos_y(self, float y) -> None:
 * 		self.y = y
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":340
 * 		self.y = y
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_z(self) -> float:
 * 		return self.z
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_5pos_z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_5pos_z_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_5pos_z___get__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_5pos_z___get__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":342
 * 	@property
 * 	def pos_z(self) -> float:
 * 		return self.z             # <<<<<<<<<<<<<<
 * 
 * 	@pos_z.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":340
 * 		self.y = y
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pos_z(self) -> float:
 * 		return self.z
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.MathVector3f.pos_z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":344
 * 		return self.z
 * 
 * 	@pos_z.setter             # <<<<<<<<<<<<<<
 * 	def pos_z(self, float z) -> None:
 * 		self.z = z
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_12MathVector3f_5pos_z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_z); /*proto*/
static int __pyx_pw_9pysfml261_12MathVector3f_5pos_z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_z) {
  float __pyx_v_z;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_z); {
    __pyx_v_z = __Pyx_PyFloat_AsFloat(__pyx_arg_z); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 345, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.MathVector3f.pos_z.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_5pos_z_2__set__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), ((float)__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_12MathVector3f_5pos_z_2__set__(struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, float __pyx_v_z) {
  int __pyx_r;

  /* "pysfml261.pyx":346
 * 	@pos_z.setter
 * 	def pos_z(self, float z) -> None:
 * 		self.z = z             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->z = __pyx_v_z;

  /* "pysfml261.pyx":344
 * 		return self.z
 * 
 * 	@pos_z.setter             # <<<<<<<<<<<<<<
 * 	def pos_z(self, float z) -> None:
 * 		self.z = z
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_29__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_29__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_29__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_29__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_28__reduce_cython__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_28__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.MathVector3f.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_31__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_12MathVector3f_31__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_31__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_12MathVector3f_31__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.MathVector3f.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_12MathVector3f_30__setstate_cython__(((struct __pyx_obj_9pysfml261_MathVector3f *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_12MathVector3f_30__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_MathVector3f *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.MathVector3f.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":362
 * 	cdef SoundBuffer* buffer
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.buffer = new SoundBuffer()
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_13sfSoundBuffer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_13sfSoundBuffer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_filename,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 362, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 362, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 362, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 362, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 362, __pyx_L3_error)
    }
    __pyx_v_filename = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 362, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSoundBuffer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_filename), (&PyUnicode_Type), 1, "filename", 1))) __PYX_ERR(0, 362, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_13sfSoundBuffer___cinit__(((struct __pyx_obj_9pysfml261_sfSoundBuffer *)__pyx_v_self), __pyx_v_filename);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_13sfSoundBuffer___cinit__(struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_self, PyObject *__pyx_v_filename) {
  std::string __pyx_v_path;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  PyObject *__pyx_t_9[3];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pysfml261.pyx":363
 * 
 * 	def __cinit__(self, str filename):
 * 		cdef string path = _text(filename).encode('utf-8')             # <<<<<<<<<<<<<<
 * 		self.buffer = new SoundBuffer()
 * 		if not self.buffer.loadFromFile(path):
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 363, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_convert_string_from_py_6libcpp_6string_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_path = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "pysfml261.pyx":364
 * 	def __cinit__(self, str filename):
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.buffer = new SoundBuffer()             # <<<<<<<<<<<<<<
 * 		if not self.buffer.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
*/
  __pyx_v_self->buffer = new sf::SoundBuffer();

  /* "pysfml261.pyx":365
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.buffer = new SoundBuffer()
 * 		if not self.buffer.loadFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load sound from {0}!'.format(filename))
*/
  __pyx_t_4 = (!__pyx_v_self->buffer->loadFromFile(__pyx_v_path));
  if (__pyx_t_4) {

    /* "pysfml261.pyx":366
 * 		self.buffer = new SoundBuffer()
 * 		if not self.buffer.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load sound from {0}!'.format(filename))
 * 			else:
*/
    __pyx_t_4 = (PY_MAJOR_VERSION < 3);
    if (unlikely(__pyx_t_4)) {

      /* "pysfml261.pyx":367
 * 		if not self.buffer.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load sound from {0}!'.format(filename))             # <<<<<<<<<<<<<<
 * 			else:
 * 				raise RuntimeError(f'Failed to load sound from {filename}!')
*/
      __pyx_t_1 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_5 = __pyx_builtin_RuntimeError; 
      __pyx_t_7 = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_sound_from_0;
      __Pyx_INCREF(__pyx_t_7);
      __pyx_t_8 = 0;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_filename};
        __pyx_t_6 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_format, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 367, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
      }
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_6};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 367, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 367, __pyx_L1_error)

      /* "pysfml261.pyx":366
 * 		self.buffer = new SoundBuffer()
 * 		if not self.buffer.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load sound from {0}!'.format(filename))
 * 			else:
*/
    }

    /* "pysfml261.pyx":369
 * 				raise RuntimeError('Failed to load sound from {0}!'.format(filename))
 * 			else:
 * 				raise RuntimeError(f'Failed to load sound from {filename}!')             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
    /*else*/ {
      __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_6 = __pyx_builtin_RuntimeError; 
      __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 369, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9[0] = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_sound_from;
      __pyx_t_9[1] = __pyx_t_1;
      __pyx_t_9[2] = __pyx_mstate_global->__pyx_kp_u_;
      __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_9, 3, 26 + __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1) + 1, 127 | __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1));
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 369, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 369, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 369, __pyx_L1_error)
    }

    /* "pysfml261.pyx":365
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.buffer = new SoundBuffer()
 * 		if not self.buffer.loadFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load sound from {0}!'.format(filename))
*/
  }

  /* "pysfml261.pyx":362
 * 	cdef SoundBuffer* buffer
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.buffer = new SoundBuffer()
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfSoundBuffer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":371
 * 				raise RuntimeError(f'Failed to load sound from {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.buffer is not NULL:
 * 			del self.buffer
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_13sfSoundBuffer_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_13sfSoundBuffer_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_13sfSoundBuffer_2__dealloc__(((struct __pyx_obj_9pysfml261_sfSoundBuffer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_13sfSoundBuffer_2__dealloc__(struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_self) {
  int __pyx_t_1;

  /* "pysfml261.pyx":372
 * 
 * 	def __dealloc__(self):
 * 		if self.buffer is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.buffer
 * 
*/
  __pyx_t_1 = (__pyx_v_self->buffer != NULL);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":373
 * 	def __dealloc__(self):
 * 		if self.buffer is not NULL:
 * 			del self.buffer             # <<<<<<<<<<<<<<
 * 
 * 
*/
    delete __pyx_v_self->buffer;

    /* "pysfml261.pyx":372
 * 
 * 	def __dealloc__(self):
 * 		if self.buffer is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.buffer
 * 
*/
  }

  /* "pysfml261.pyx":371
 * 				raise RuntimeError(f'Failed to load sound from {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.buffer is not NULL:
 * 			del self.buffer
*/

  /* function exit code */
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfSoundBuffer_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfSoundBuffer_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfSoundBuffer_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfSoundBuffer_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfSoundBuffer_4__reduce_cython__(((struct __pyx_obj_9pysfml261_sfSoundBuffer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfSoundBuffer_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfSoundBuffer.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfSoundBuffer_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfSoundBuffer_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfSoundBuffer_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfSoundBuffer_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSoundBuffer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfSoundBuffer_6__setstate_cython__(((struct __pyx_obj_9pysfml261_sfSoundBuffer *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfSoundBuffer_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfSoundBuffer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":380
 * 	cdef sf_Sound.Sound* sound
 * 
 * 	def __cinit__(self, sfSoundBuffer buffer):             # <<<<<<<<<<<<<<
 * 		self.sound = new sf_Sound.Sound(buffer.buffer[0])
 * 
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfSound_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_7sfSound_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_buffer = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_buffer,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 380, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 380, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 380, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 380, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 380, __pyx_L3_error)
    }
    __pyx_v_buffer = ((struct __pyx_obj_9pysfml261_sfSoundBuffer *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 380, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_buffer), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSoundBuffer, 1, "buffer", 0))) __PYX_ERR(0, 380, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_7sfSound___cinit__(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_buffer);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfSound___cinit__(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_buffer) {
  int __pyx_r;

  /* "pysfml261.pyx":381
 * 
 * 	def __cinit__(self, sfSoundBuffer buffer):
 * 		self.sound = new sf_Sound.Sound(buffer.buffer[0])             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->sound = new sf::Sound((__pyx_v_buffer->buffer[0]));

  /* "pysfml261.pyx":380
 * 	cdef sf_Sound.Sound* sound
 * 
 * 	def __cinit__(self, sfSoundBuffer buffer):             # <<<<<<<<<<<<<<
 * 		self.sound = new sf_Sound.Sound(buffer.buffer[0])
 * 
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":383
 * 		self.sound = new sf_Sound.Sound(buffer.buffer[0])
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.sound
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_7sfSound_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_7sfSound_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_7sfSound_2__dealloc__(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_7sfSound_2__dealloc__(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {

  /* "pysfml261.pyx":384
 * 
 * 	def __dealloc__(self):
 * 		del self.sound             # <<<<<<<<<<<<<<
 * 
 * 	def play(self) -> None:
*/
  delete __pyx_v_self->sound;

  /* "pysfml261.pyx":383
 * 		self.sound = new sf_Sound.Sound(buffer.buffer[0])
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.sound
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":386
 * 		del self.sound
 * 
 * 	def play(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.play()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_5play(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_5play = {"play", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_5play, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_5play(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("play (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("play", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("play", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_4play(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_4play(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("play", 0);

  /* "pysfml261.pyx":387
 * 
 * 	def play(self) -> None:
 * 		self.sound.play()             # <<<<<<<<<<<<<<
 * 
 * 	def pause(self) -> None:
*/
  __pyx_v_self->sound->play();

  /* "pysfml261.pyx":386
 * 		del self.sound
 * 
 * 	def play(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.play()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":389
 * 		self.sound.play()
 * 
 * 	def pause(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.pause()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_7pause(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_7pause = {"pause", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_7pause, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_7pause(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pause (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("pause", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("pause", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_6pause(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_6pause(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pause", 0);

  /* "pysfml261.pyx":390
 * 
 * 	def pause(self) -> None:
 * 		self.sound.pause()             # <<<<<<<<<<<<<<
 * 
 * 	def stop(self) -> None:
*/
  __pyx_v_self->sound->pause();

  /* "pysfml261.pyx":389
 * 		self.sound.play()
 * 
 * 	def pause(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.pause()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":392
 * 		self.sound.pause()
 * 
 * 	def stop(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.stop()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_9stop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_9stop = {"stop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_9stop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_9stop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("stop (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("stop", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("stop", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_8stop(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_8stop(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("stop", 0);

  /* "pysfml261.pyx":393
 * 
 * 	def stop(self) -> None:
 * 		self.sound.stop()             # <<<<<<<<<<<<<<
 * 
 * 	def get_status(self) -> int:
*/
  __pyx_v_self->sound->stop();

  /* "pysfml261.pyx":392
 * 		self.sound.pause()
 * 
 * 	def stop(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.stop()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":395
 * 		self.sound.stop()
 * 
 * 	def get_status(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.sound.getStatus()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_11get_status(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_11get_status = {"get_status", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_11get_status, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_11get_status(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_status (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_status", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_status", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_10get_status(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_10get_status(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_status", 0);

  /* "pysfml261.pyx":396
 * 
 * 	def get_status(self) -> int:
 * 		return self.sound.getStatus()             # <<<<<<<<<<<<<<
 * 
 * 	def set_buffer(self, sfSoundBuffer buffer) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_enum__sf_3a__3a_SoundSource_3a__3a_Status(__pyx_v_self->sound->getStatus()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 396, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":395
 * 		self.sound.stop()
 * 
 * 	def get_status(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.sound.getStatus()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSound.get_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":398
 * 		return self.sound.getStatus()
 * 
 * 	def set_buffer(self, sfSoundBuffer buffer) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setBuffer(buffer.buffer[0])
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_13set_buffer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_13set_buffer = {"set_buffer", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_13set_buffer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_13set_buffer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_buffer = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_buffer (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_buffer,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 398, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 398, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_buffer", 0) < 0) __PYX_ERR(0, 398, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_buffer", 1, 1, 1, i); __PYX_ERR(0, 398, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 398, __pyx_L3_error)
    }
    __pyx_v_buffer = ((struct __pyx_obj_9pysfml261_sfSoundBuffer *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_buffer", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 398, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.set_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_buffer), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSoundBuffer, 1, "buffer", 0))) __PYX_ERR(0, 398, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_12set_buffer(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_buffer);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_12set_buffer(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSoundBuffer *__pyx_v_buffer) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_buffer", 0);

  /* "pysfml261.pyx":399
 * 
 * 	def set_buffer(self, sfSoundBuffer buffer) -> None:
 * 		self.sound.setBuffer(buffer.buffer[0])             # <<<<<<<<<<<<<<
 * 
 * 	def reset_buffer(self) -> None:
*/
  __pyx_v_self->sound->setBuffer((__pyx_v_buffer->buffer[0]));

  /* "pysfml261.pyx":398
 * 		return self.sound.getStatus()
 * 
 * 	def set_buffer(self, sfSoundBuffer buffer) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setBuffer(buffer.buffer[0])
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":401
 * 		self.sound.setBuffer(buffer.buffer[0])
 * 
 * 	def reset_buffer(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.resetBuffer()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_15reset_buffer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_15reset_buffer = {"reset_buffer", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_15reset_buffer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_15reset_buffer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_buffer (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("reset_buffer", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("reset_buffer", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_14reset_buffer(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_14reset_buffer(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_buffer", 0);

  /* "pysfml261.pyx":402
 * 
 * 	def reset_buffer(self) -> None:
 * 		self.sound.resetBuffer()             # <<<<<<<<<<<<<<
 * 
 * 	def set_relative_to(self,
*/
  __pyx_v_self->sound->resetBuffer();

  /* "pysfml261.pyx":401
 * 		self.sound.setBuffer(buffer.buffer[0])
 * 
 * 	def reset_buffer(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.resetBuffer()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":404
 * 		self.sound.resetBuffer()
 * 
 * 	def set_relative_to(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_17set_relative_to(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_17set_relative_to = {"set_relative_to", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_17set_relative_to, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_17set_relative_to(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_relative_to (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_z,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 404, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 404, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 404, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 404, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_relative_to", 0) < 0) __PYX_ERR(0, 404, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 404, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 404, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 404, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 405, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 406, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_z = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 407, __pyx_L3_error)
    } else {
      __pyx_v_z = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_relative_to", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 404, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.set_relative_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_16set_relative_to(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_16set_relative_to(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z) {
  sf::Vector3f __pyx_v_pos;
  float __pyx_v_minDistance;
  float __pyx_v_attenuation;
  float __pyx_v_distance;
  float __pyx_v_maxD;
  float __pyx_v_volumeFactor;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  float __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_relative_to", 0);

  /* "pysfml261.pyx":408
 * 		float y = 0,
 * 		float z = 0) -> float:
 * 		cdef Vector3f pos = self.sound.getPosition()             # <<<<<<<<<<<<<<
 * 		cdef float minDistance = self.sound.getMinDistance()
 * 		cdef float attenuation = self.sound.getAttenuation()
*/
  __pyx_v_pos = ((sf::Vector3f)__pyx_v_self->sound->getPosition());

  /* "pysfml261.pyx":409
 * 		float z = 0) -> float:
 * 		cdef Vector3f pos = self.sound.getPosition()
 * 		cdef float minDistance = self.sound.getMinDistance()             # <<<<<<<<<<<<<<
 * 		cdef float attenuation = self.sound.getAttenuation()
 * 		cdef float distance = sqrtf(
*/
  __pyx_v_minDistance = __pyx_v_self->sound->getMinDistance();

  /* "pysfml261.pyx":410
 * 		cdef Vector3f pos = self.sound.getPosition()
 * 		cdef float minDistance = self.sound.getMinDistance()
 * 		cdef float attenuation = self.sound.getAttenuation()             # <<<<<<<<<<<<<<
 * 		cdef float distance = sqrtf(
 * 			powf(pos.x - x, 2) + powf(pos.y - y, 2) + powf(pos.z - z, 2)
*/
  __pyx_v_attenuation = __pyx_v_self->sound->getAttenuation();

  /* "pysfml261.pyx":411
 * 		cdef float minDistance = self.sound.getMinDistance()
 * 		cdef float attenuation = self.sound.getAttenuation()
 * 		cdef float distance = sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(pos.x - x, 2) + powf(pos.y - y, 2) + powf(pos.z - z, 2)
 * 			)
*/
  __pyx_v_distance = sqrtf(((powf((__pyx_v_pos.x - __pyx_v_x), 2.0) + powf((__pyx_v_pos.y - __pyx_v_y), 2.0)) + powf((__pyx_v_pos.z - __pyx_v_z), 2.0)));

  /* "pysfml261.pyx":415
 * 			)
 * 		cdef float maxD
 * 		if distance > minDistance:             # <<<<<<<<<<<<<<
 * 			maxD = distance
 * 		else:
*/
  __pyx_t_1 = (__pyx_v_distance > __pyx_v_minDistance);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":416
 * 		cdef float maxD
 * 		if distance > minDistance:
 * 			maxD = distance             # <<<<<<<<<<<<<<
 * 		else:
 * 			maxD = minDistance
*/
    __pyx_v_maxD = __pyx_v_distance;

    /* "pysfml261.pyx":415
 * 			)
 * 		cdef float maxD
 * 		if distance > minDistance:             # <<<<<<<<<<<<<<
 * 			maxD = distance
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":418
 * 			maxD = distance
 * 		else:
 * 			maxD = minDistance             # <<<<<<<<<<<<<<
 * 		cdef float volumeFactor = minDistance / (minDistance + attenuation * (maxD - minDistance))
 * 		self.sound.setVolume(volumeFactor)
*/
  /*else*/ {
    __pyx_v_maxD = __pyx_v_minDistance;
  }
  __pyx_L3:;

  /* "pysfml261.pyx":419
 * 		else:
 * 			maxD = minDistance
 * 		cdef float volumeFactor = minDistance / (minDistance + attenuation * (maxD - minDistance))             # <<<<<<<<<<<<<<
 * 		self.sound.setVolume(volumeFactor)
 * 		return volumeFactor
*/
  __pyx_t_2 = (__pyx_v_minDistance + (__pyx_v_attenuation * (__pyx_v_maxD - __pyx_v_minDistance)));
  if (unlikely(__pyx_t_2 == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 419, __pyx_L1_error)
  }
  __pyx_v_volumeFactor = (__pyx_v_minDistance / __pyx_t_2);

  /* "pysfml261.pyx":420
 * 			maxD = minDistance
 * 		cdef float volumeFactor = minDistance / (minDistance + attenuation * (maxD - minDistance))
 * 		self.sound.setVolume(volumeFactor)             # <<<<<<<<<<<<<<
 * 		return volumeFactor
 * 
*/
  __pyx_v_self->sound->setVolume(__pyx_v_volumeFactor);

  /* "pysfml261.pyx":421
 * 		cdef float volumeFactor = minDistance / (minDistance + attenuation * (maxD - minDistance))
 * 		self.sound.setVolume(volumeFactor)
 * 		return volumeFactor             # <<<<<<<<<<<<<<
 * 
 * 	def get_position(self) -> tuple[float, float, float]:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_volumeFactor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 421, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":404
 * 		self.sound.resetBuffer()
 * 
 * 	def set_relative_to(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfSound.set_relative_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":423
 * 		return volumeFactor
 * 
 * 	def get_position(self) -> tuple[float, float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector3f pos = self.sound.getPosition()
 * 		return (pos.x, pos.y, pos.z)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_19get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_19get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_19get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_19get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_18get_position(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_18get_position(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  sf::Vector3f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":424
 * 
 * 	def get_position(self) -> tuple[float, float, float]:
 * 		cdef Vector3f pos = self.sound.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y, pos.z)
 * 
*/
  __pyx_v_pos = ((sf::Vector3f)__pyx_v_self->sound->getPosition());

  /* "pysfml261.pyx":425
 * 	def get_position(self) -> tuple[float, float, float]:
 * 		cdef Vector3f pos = self.sound.getPosition()
 * 		return (pos.x, pos.y, pos.z)             # <<<<<<<<<<<<<<
 * 
 * 	def set_position(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_pos.z); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 425, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 425, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3) != (0)) __PYX_ERR(0, 425, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":423
 * 		return volumeFactor
 * 
 * 	def get_position(self) -> tuple[float, float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector3f pos = self.sound.getPosition()
 * 		return (pos.x, pos.y, pos.z)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pysfml261.sfSound.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":427
 * 		return (pos.x, pos.y, pos.z)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_21set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_21set_position = {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_21set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_21set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_z,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 427, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 427, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 427, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 427, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_position", 0) < 0) __PYX_ERR(0, 427, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 427, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 427, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 427, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 428, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 429, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_z = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 430, __pyx_L3_error)
    } else {
      __pyx_v_z = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_position", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 427, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.set_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_20set_position(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_20set_position(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position", 0);

  /* "pysfml261.pyx":431
 * 		float y = 0,
 * 		float z = 0) -> None:
 * 		self.sound.setPosition(x, y, z)             # <<<<<<<<<<<<<<
 * 
 * 	def get_min_distance(self) -> float:
*/
  __pyx_v_self->sound->setPosition(__pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* "pysfml261.pyx":427
 * 		return (pos.x, pos.y, pos.z)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":433
 * 		self.sound.setPosition(x, y, z)
 * 
 * 	def get_min_distance(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getMinDistance()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_23get_min_distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_23get_min_distance = {"get_min_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_23get_min_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_23get_min_distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_min_distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_min_distance", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_min_distance", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_22get_min_distance(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_22get_min_distance(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_min_distance", 0);

  /* "pysfml261.pyx":434
 * 
 * 	def get_min_distance(self) -> float:
 * 		return self.sound.getMinDistance()             # <<<<<<<<<<<<<<
 * 
 * 	def set_min_distance(self, float distance) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->sound->getMinDistance()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":433
 * 		self.sound.setPosition(x, y, z)
 * 
 * 	def get_min_distance(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getMinDistance()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSound.get_min_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":436
 * 		return self.sound.getMinDistance()
 * 
 * 	def set_min_distance(self, float distance) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setMinDistance(distance)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_25set_min_distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_25set_min_distance = {"set_min_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_25set_min_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_25set_min_distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_distance;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_min_distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_distance,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 436, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 436, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_min_distance", 0) < 0) __PYX_ERR(0, 436, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_min_distance", 1, 1, 1, i); __PYX_ERR(0, 436, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 436, __pyx_L3_error)
    }
    __pyx_v_distance = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_distance == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 436, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_min_distance", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 436, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.set_min_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_24set_min_distance(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_distance);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_24set_min_distance(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_distance) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_min_distance", 0);

  /* "pysfml261.pyx":437
 * 
 * 	def set_min_distance(self, float distance) -> None:
 * 		self.sound.setMinDistance(distance)             # <<<<<<<<<<<<<<
 * 
 * 	def get_attenuation(self) -> float:
*/
  __pyx_v_self->sound->setMinDistance(__pyx_v_distance);

  /* "pysfml261.pyx":436
 * 		return self.sound.getMinDistance()
 * 
 * 	def set_min_distance(self, float distance) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setMinDistance(distance)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":439
 * 		self.sound.setMinDistance(distance)
 * 
 * 	def get_attenuation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getAttenuation()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_27get_attenuation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_27get_attenuation = {"get_attenuation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_27get_attenuation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_27get_attenuation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_attenuation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_attenuation", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_attenuation", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_26get_attenuation(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_26get_attenuation(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_attenuation", 0);

  /* "pysfml261.pyx":440
 * 
 * 	def get_attenuation(self) -> float:
 * 		return self.sound.getAttenuation()             # <<<<<<<<<<<<<<
 * 
 * 	def set_attenuation(self, float attenuation) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->sound->getAttenuation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":439
 * 		self.sound.setMinDistance(distance)
 * 
 * 	def get_attenuation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getAttenuation()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSound.get_attenuation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":442
 * 		return self.sound.getAttenuation()
 * 
 * 	def set_attenuation(self, float attenuation) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setAttenuation(attenuation)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_29set_attenuation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_29set_attenuation = {"set_attenuation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_29set_attenuation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_29set_attenuation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_attenuation;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_attenuation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_attenuation,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 442, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 442, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_attenuation", 0) < 0) __PYX_ERR(0, 442, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_attenuation", 1, 1, 1, i); __PYX_ERR(0, 442, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 442, __pyx_L3_error)
    }
    __pyx_v_attenuation = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_attenuation == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 442, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_attenuation", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 442, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.set_attenuation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_28set_attenuation(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_attenuation);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_28set_attenuation(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_attenuation) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_attenuation", 0);

  /* "pysfml261.pyx":443
 * 
 * 	def set_attenuation(self, float attenuation) -> None:
 * 		self.sound.setAttenuation(attenuation)             # <<<<<<<<<<<<<<
 * 
 * 	def get_loop(self) -> bool:
*/
  __pyx_v_self->sound->setAttenuation(__pyx_v_attenuation);

  /* "pysfml261.pyx":442
 * 		return self.sound.getAttenuation()
 * 
 * 	def set_attenuation(self, float attenuation) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setAttenuation(attenuation)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":445
 * 		self.sound.setAttenuation(attenuation)
 * 
 * 	def get_loop(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.sound.getLoop()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_31get_loop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_31get_loop = {"get_loop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_31get_loop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_31get_loop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_loop (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_loop", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_loop", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_30get_loop(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_30get_loop(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_loop", 0);

  /* "pysfml261.pyx":446
 * 
 * 	def get_loop(self) -> bool:
 * 		return self.sound.getLoop()             # <<<<<<<<<<<<<<
 * 
 * 	def set_loop(self, bint loop) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->sound->getLoop()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 446, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":445
 * 		self.sound.setAttenuation(attenuation)
 * 
 * 	def get_loop(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.sound.getLoop()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSound.get_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":448
 * 		return self.sound.getLoop()
 * 
 * 	def set_loop(self, bint loop) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setLoop(loop)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_33set_loop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_33set_loop = {"set_loop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_33set_loop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_33set_loop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_loop;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_loop (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_loop,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 448, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 448, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_loop", 0) < 0) __PYX_ERR(0, 448, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_loop", 1, 1, 1, i); __PYX_ERR(0, 448, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 448, __pyx_L3_error)
    }
    __pyx_v_loop = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_loop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 448, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_loop", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 448, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.set_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_32set_loop(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_loop);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_32set_loop(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, int __pyx_v_loop) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_loop", 0);

  /* "pysfml261.pyx":449
 * 
 * 	def set_loop(self, bint loop) -> None:
 * 		self.sound.setLoop(loop)             # <<<<<<<<<<<<<<
 * 
 * 	def get_volume(self) -> float:
*/
  __pyx_v_self->sound->setLoop(__pyx_v_loop);

  /* "pysfml261.pyx":448
 * 		return self.sound.getLoop()
 * 
 * 	def set_loop(self, bint loop) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setLoop(loop)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":451
 * 		self.sound.setLoop(loop)
 * 
 * 	def get_volume(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getVolume()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_35get_volume(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_35get_volume = {"get_volume", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_35get_volume, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_35get_volume(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_volume (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_volume", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_volume", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_34get_volume(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_34get_volume(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_volume", 0);

  /* "pysfml261.pyx":452
 * 
 * 	def get_volume(self) -> float:
 * 		return self.sound.getVolume()             # <<<<<<<<<<<<<<
 * 
 * 	def set_volume(self, float volume) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->sound->getVolume()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":451
 * 		self.sound.setLoop(loop)
 * 
 * 	def get_volume(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getVolume()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSound.get_volume", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":454
 * 		return self.sound.getVolume()
 * 
 * 	def set_volume(self, float volume) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setVolume(volume)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_37set_volume(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_37set_volume = {"set_volume", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_37set_volume, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_37set_volume(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_volume;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_volume (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_volume,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 454, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 454, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_volume", 0) < 0) __PYX_ERR(0, 454, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_volume", 1, 1, 1, i); __PYX_ERR(0, 454, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 454, __pyx_L3_error)
    }
    __pyx_v_volume = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_volume == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 454, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_volume", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 454, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.set_volume", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_36set_volume(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_volume);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_36set_volume(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_volume) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_volume", 0);

  /* "pysfml261.pyx":455
 * 
 * 	def set_volume(self, float volume) -> None:
 * 		self.sound.setVolume(volume)             # <<<<<<<<<<<<<<
 * 
 * 	def get_pitch(self) -> float:
*/
  __pyx_v_self->sound->setVolume(__pyx_v_volume);

  /* "pysfml261.pyx":454
 * 		return self.sound.getVolume()
 * 
 * 	def set_volume(self, float volume) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setVolume(volume)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":457
 * 		self.sound.setVolume(volume)
 * 
 * 	def get_pitch(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getPitch()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_39get_pitch(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_39get_pitch = {"get_pitch", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_39get_pitch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_39get_pitch(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pitch (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_pitch", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_pitch", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_38get_pitch(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_38get_pitch(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_pitch", 0);

  /* "pysfml261.pyx":458
 * 
 * 	def get_pitch(self) -> float:
 * 		return self.sound.getPitch()             # <<<<<<<<<<<<<<
 * 
 * 	def set_pitch(self, float pitch) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->sound->getPitch()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 458, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":457
 * 		self.sound.setVolume(volume)
 * 
 * 	def get_pitch(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getPitch()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSound.get_pitch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":460
 * 		return self.sound.getPitch()
 * 
 * 	def set_pitch(self, float pitch) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setPitch(pitch)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_41set_pitch(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_41set_pitch = {"set_pitch", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_41set_pitch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_41set_pitch(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_pitch;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_pitch (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pitch,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 460, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 460, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_pitch", 0) < 0) __PYX_ERR(0, 460, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_pitch", 1, 1, 1, i); __PYX_ERR(0, 460, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 460, __pyx_L3_error)
    }
    __pyx_v_pitch = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_pitch == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_pitch", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 460, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.set_pitch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_40set_pitch(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v_pitch);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_40set_pitch(struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, float __pyx_v_pitch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_pitch", 0);

  /* "pysfml261.pyx":461
 * 
 * 	def set_pitch(self, float pitch) -> None:
 * 		self.sound.setPitch(pitch)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->sound->setPitch(__pyx_v_pitch);

  /* "pysfml261.pyx":460
 * 		return self.sound.getPitch()
 * 
 * 	def set_pitch(self, float pitch) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setPitch(pitch)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_43__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_43__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_43__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_43__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_42__reduce_cython__(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_42__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfSound.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfSound_45__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfSound_45__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_45__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfSound_45__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSound.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfSound_44__setstate_cython__(((struct __pyx_obj_9pysfml261_sfSound *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfSound_44__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSound *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfSound.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":468
 * 	cdef Music* music
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.music = new Music()
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfMusic_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_7sfMusic_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_filename,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 468, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 468, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 468, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 468, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 468, __pyx_L3_error)
    }
    __pyx_v_filename = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 468, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_filename), (&PyUnicode_Type), 1, "filename", 1))) __PYX_ERR(0, 468, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic___cinit__(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v_filename);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfMusic___cinit__(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, PyObject *__pyx_v_filename) {
  std::string __pyx_v_path;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  PyObject *__pyx_t_9[3];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pysfml261.pyx":469
 * 
 * 	def __cinit__(self, str filename):
 * 		cdef string path = _text(filename).encode('utf-8')             # <<<<<<<<<<<<<<
 * 		self.music = new Music()
 * 		if not self.music.openFromFile(path):
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 469, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_convert_string_from_py_6libcpp_6string_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 469, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_path = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "pysfml261.pyx":470
 * 	def __cinit__(self, str filename):
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.music = new Music()             # <<<<<<<<<<<<<<
 * 		if not self.music.openFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
*/
  __pyx_v_self->music = new sf::Music();

  /* "pysfml261.pyx":471
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.music = new Music()
 * 		if not self.music.openFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load music from {0}!'.format(filename))
*/
  __pyx_t_4 = (!__pyx_v_self->music->openFromFile(__pyx_v_path));
  if (__pyx_t_4) {

    /* "pysfml261.pyx":472
 * 		self.music = new Music()
 * 		if not self.music.openFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load music from {0}!'.format(filename))
 * 			else:
*/
    __pyx_t_4 = (PY_MAJOR_VERSION < 3);
    if (unlikely(__pyx_t_4)) {

      /* "pysfml261.pyx":473
 * 		if not self.music.openFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load music from {0}!'.format(filename))             # <<<<<<<<<<<<<<
 * 			else:
 * 				raise RuntimeError(f'Failed to load music from {filename}!')
*/
      __pyx_t_1 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_5 = __pyx_builtin_RuntimeError; 
      __pyx_t_7 = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_music_from_0;
      __Pyx_INCREF(__pyx_t_7);
      __pyx_t_8 = 0;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_filename};
        __pyx_t_6 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_format, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 473, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
      }
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_6};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 473, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 473, __pyx_L1_error)

      /* "pysfml261.pyx":472
 * 		self.music = new Music()
 * 		if not self.music.openFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load music from {0}!'.format(filename))
 * 			else:
*/
    }

    /* "pysfml261.pyx":475
 * 				raise RuntimeError('Failed to load music from {0}!'.format(filename))
 * 			else:
 * 				raise RuntimeError(f'Failed to load music from {filename}!')             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
    /*else*/ {
      __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_6 = __pyx_builtin_RuntimeError; 
      __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 475, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9[0] = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_music_from;
      __pyx_t_9[1] = __pyx_t_1;
      __pyx_t_9[2] = __pyx_mstate_global->__pyx_kp_u_;
      __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_9, 3, 26 + __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1) + 1, 127 | __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1));
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 475, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 475, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 475, __pyx_L1_error)
    }

    /* "pysfml261.pyx":471
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.music = new Music()
 * 		if not self.music.openFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load music from {0}!'.format(filename))
*/
  }

  /* "pysfml261.pyx":468
 * 	cdef Music* music
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.music = new Music()
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfMusic.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":477
 * 				raise RuntimeError(f'Failed to load music from {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.music is not NULL:
 * 			del self.music
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_7sfMusic_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_7sfMusic_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_7sfMusic_2__dealloc__(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_7sfMusic_2__dealloc__(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  int __pyx_t_1;

  /* "pysfml261.pyx":478
 * 
 * 	def __dealloc__(self):
 * 		if self.music is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.music
 * 
*/
  __pyx_t_1 = (__pyx_v_self->music != NULL);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":479
 * 	def __dealloc__(self):
 * 		if self.music is not NULL:
 * 			del self.music             # <<<<<<<<<<<<<<
 * 
 * 	def play(self) -> None:
*/
    delete __pyx_v_self->music;

    /* "pysfml261.pyx":478
 * 
 * 	def __dealloc__(self):
 * 		if self.music is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.music
 * 
*/
  }

  /* "pysfml261.pyx":477
 * 				raise RuntimeError(f'Failed to load music from {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.music is not NULL:
 * 			del self.music
*/

  /* function exit code */
}

/* "pysfml261.pyx":481
 * 			del self.music
 * 
 * 	def play(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.play()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_5play(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_5play = {"play", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_5play, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_5play(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("play (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("play", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("play", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_4play(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_4play(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("play", 0);

  /* "pysfml261.pyx":482
 * 
 * 	def play(self) -> None:
 * 		self.music.play()             # <<<<<<<<<<<<<<
 * 
 * 	def pause(self) -> None:
*/
  __pyx_v_self->music->play();

  /* "pysfml261.pyx":481
 * 			del self.music
 * 
 * 	def play(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.play()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":484
 * 		self.music.play()
 * 
 * 	def pause(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.pause()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_7pause(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_7pause = {"pause", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_7pause, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_7pause(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pause (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("pause", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("pause", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_6pause(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_6pause(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pause", 0);

  /* "pysfml261.pyx":485
 * 
 * 	def pause(self) -> None:
 * 		self.music.pause()             # <<<<<<<<<<<<<<
 * 
 * 	def stop(self) -> None:
*/
  __pyx_v_self->music->pause();

  /* "pysfml261.pyx":484
 * 		self.music.play()
 * 
 * 	def pause(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.pause()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":487
 * 		self.music.pause()
 * 
 * 	def stop(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.stop()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_9stop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_9stop = {"stop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_9stop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_9stop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("stop (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("stop", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("stop", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_8stop(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_8stop(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("stop", 0);

  /* "pysfml261.pyx":488
 * 
 * 	def stop(self) -> None:
 * 		self.music.stop()             # <<<<<<<<<<<<<<
 * 
 * 	def get_status(self) -> int:
*/
  __pyx_v_self->music->stop();

  /* "pysfml261.pyx":487
 * 		self.music.pause()
 * 
 * 	def stop(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.stop()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":490
 * 		self.music.stop()
 * 
 * 	def get_status(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.music.getStatus()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_11get_status(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_11get_status = {"get_status", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_11get_status, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_11get_status(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_status (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_status", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_status", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_10get_status(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_10get_status(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_status", 0);

  /* "pysfml261.pyx":491
 * 
 * 	def get_status(self) -> int:
 * 		return self.music.getStatus()             # <<<<<<<<<<<<<<
 * 
 * 	def set_relative_to(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_enum__sf_3a__3a_SoundSource_3a__3a_Status(__pyx_v_self->music->getStatus()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 491, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 491, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":490
 * 		self.music.stop()
 * 
 * 	def get_status(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.music.getStatus()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfMusic.get_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":493
 * 		return self.music.getStatus()
 * 
 * 	def set_relative_to(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_13set_relative_to(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_13set_relative_to = {"set_relative_to", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_13set_relative_to, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_13set_relative_to(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_relative_to (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_z,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 493, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 493, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 493, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 493, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_relative_to", 0) < 0) __PYX_ERR(0, 493, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 493, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 493, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 493, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 494, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 495, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_z = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 496, __pyx_L3_error)
    } else {
      __pyx_v_z = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_relative_to", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 493, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.set_relative_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_12set_relative_to(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_12set_relative_to(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z) {
  sf::Vector3f __pyx_v_pos;
  float __pyx_v_minDistance;
  float __pyx_v_attenuation;
  float __pyx_v_distance;
  float __pyx_v_maxD;
  float __pyx_v_volumeFactor;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  float __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_relative_to", 0);

  /* "pysfml261.pyx":497
 * 		float y = 0,
 * 		float z = 0) -> float:
 * 		cdef Vector3f pos = self.music.getPosition()             # <<<<<<<<<<<<<<
 * 		cdef float minDistance = self.music.getMinDistance()
 * 		cdef float attenuation = self.music.getAttenuation()
*/
  __pyx_v_pos = ((sf::Vector3f)__pyx_v_self->music->getPosition());

  /* "pysfml261.pyx":498
 * 		float z = 0) -> float:
 * 		cdef Vector3f pos = self.music.getPosition()
 * 		cdef float minDistance = self.music.getMinDistance()             # <<<<<<<<<<<<<<
 * 		cdef float attenuation = self.music.getAttenuation()
 * 		cdef float distance = sqrtf(
*/
  __pyx_v_minDistance = __pyx_v_self->music->getMinDistance();

  /* "pysfml261.pyx":499
 * 		cdef Vector3f pos = self.music.getPosition()
 * 		cdef float minDistance = self.music.getMinDistance()
 * 		cdef float attenuation = self.music.getAttenuation()             # <<<<<<<<<<<<<<
 * 		cdef float distance = sqrtf(
 * 			powf(pos.x - x, 2) + powf(pos.y - y, 2) + powf(pos.z - z, 2)
*/
  __pyx_v_attenuation = __pyx_v_self->music->getAttenuation();

  /* "pysfml261.pyx":500
 * 		cdef float minDistance = self.music.getMinDistance()
 * 		cdef float attenuation = self.music.getAttenuation()
 * 		cdef float distance = sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(pos.x - x, 2) + powf(pos.y - y, 2) + powf(pos.z - z, 2)
 * 			)
*/
  __pyx_v_distance = sqrtf(((powf((__pyx_v_pos.x - __pyx_v_x), 2.0) + powf((__pyx_v_pos.y - __pyx_v_y), 2.0)) + powf((__pyx_v_pos.z - __pyx_v_z), 2.0)));

  /* "pysfml261.pyx":504
 * 			)
 * 		cdef float maxD
 * 		if distance > minDistance:             # <<<<<<<<<<<<<<
 * 			maxD = distance
 * 		else:
*/
  __pyx_t_1 = (__pyx_v_distance > __pyx_v_minDistance);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":505
 * 		cdef float maxD
 * 		if distance > minDistance:
 * 			maxD = distance             # <<<<<<<<<<<<<<
 * 		else:
 * 			maxD = minDistance
*/
    __pyx_v_maxD = __pyx_v_distance;

    /* "pysfml261.pyx":504
 * 			)
 * 		cdef float maxD
 * 		if distance > minDistance:             # <<<<<<<<<<<<<<
 * 			maxD = distance
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":507
 * 			maxD = distance
 * 		else:
 * 			maxD = minDistance             # <<<<<<<<<<<<<<
 * 		cdef float volumeFactor = minDistance / (minDistance + attenuation * (maxD - minDistance))
 * 		self.music.setVolume(volumeFactor)
*/
  /*else*/ {
    __pyx_v_maxD = __pyx_v_minDistance;
  }
  __pyx_L3:;

  /* "pysfml261.pyx":508
 * 		else:
 * 			maxD = minDistance
 * 		cdef float volumeFactor = minDistance / (minDistance + attenuation * (maxD - minDistance))             # <<<<<<<<<<<<<<
 * 		self.music.setVolume(volumeFactor)
 * 		return volumeFactor
*/
  __pyx_t_2 = (__pyx_v_minDistance + (__pyx_v_attenuation * (__pyx_v_maxD - __pyx_v_minDistance)));
  if (unlikely(__pyx_t_2 == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 508, __pyx_L1_error)
  }
  __pyx_v_volumeFactor = (__pyx_v_minDistance / __pyx_t_2);

  /* "pysfml261.pyx":509
 * 			maxD = minDistance
 * 		cdef float volumeFactor = minDistance / (minDistance + attenuation * (maxD - minDistance))
 * 		self.music.setVolume(volumeFactor)             # <<<<<<<<<<<<<<
 * 		return volumeFactor
 * 
*/
  __pyx_v_self->music->setVolume(__pyx_v_volumeFactor);

  /* "pysfml261.pyx":510
 * 		cdef float volumeFactor = minDistance / (minDistance + attenuation * (maxD - minDistance))
 * 		self.music.setVolume(volumeFactor)
 * 		return volumeFactor             # <<<<<<<<<<<<<<
 * 
 * 	def get_position(self) -> tuple[float, float, float]:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_volumeFactor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 510, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":493
 * 		return self.music.getStatus()
 * 
 * 	def set_relative_to(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfMusic.set_relative_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":512
 * 		return volumeFactor
 * 
 * 	def get_position(self) -> tuple[float, float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector3f pos = self.music.getPosition()
 * 		return (pos.x, pos.y, pos.z)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_15get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_15get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_15get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_15get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_14get_position(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_14get_position(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  sf::Vector3f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":513
 * 
 * 	def get_position(self) -> tuple[float, float, float]:
 * 		cdef Vector3f pos = self.music.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y, pos.z)
 * 
*/
  __pyx_v_pos = ((sf::Vector3f)__pyx_v_self->music->getPosition());

  /* "pysfml261.pyx":514
 * 	def get_position(self) -> tuple[float, float, float]:
 * 		cdef Vector3f pos = self.music.getPosition()
 * 		return (pos.x, pos.y, pos.z)             # <<<<<<<<<<<<<<
 * 
 * 	def set_position(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_pos.z); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 514, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 514, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3) != (0)) __PYX_ERR(0, 514, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":512
 * 		return volumeFactor
 * 
 * 	def get_position(self) -> tuple[float, float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector3f pos = self.music.getPosition()
 * 		return (pos.x, pos.y, pos.z)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pysfml261.sfMusic.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":516
 * 		return (pos.x, pos.y, pos.z)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_17set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_17set_position = {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_17set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_17set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_z,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 516, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 516, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 516, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 516, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_position", 0) < 0) __PYX_ERR(0, 516, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 516, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 516, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 516, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 517, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 518, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_z = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 519, __pyx_L3_error)
    } else {
      __pyx_v_z = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_position", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 516, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.set_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_16set_position(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_16set_position(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position", 0);

  /* "pysfml261.pyx":520
 * 		float y = 0,
 * 		float z = 0) -> None:
 * 		self.music.setPosition(x, y, z)             # <<<<<<<<<<<<<<
 * 
 * 	def get_min_distance(self) -> float:
*/
  __pyx_v_self->music->setPosition(__pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* "pysfml261.pyx":516
 * 		return (pos.x, pos.y, pos.z)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":522
 * 		self.music.setPosition(x, y, z)
 * 
 * 	def get_min_distance(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getMinDistance()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_19get_min_distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_19get_min_distance = {"get_min_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_19get_min_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_19get_min_distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_min_distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_min_distance", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_min_distance", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_18get_min_distance(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_18get_min_distance(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_min_distance", 0);

  /* "pysfml261.pyx":523
 * 
 * 	def get_min_distance(self) -> float:
 * 		return self.music.getMinDistance()             # <<<<<<<<<<<<<<
 * 
 * 	def set_min_distance(self, float distance) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->music->getMinDistance()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":522
 * 		self.music.setPosition(x, y, z)
 * 
 * 	def get_min_distance(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getMinDistance()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfMusic.get_min_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":525
 * 		return self.music.getMinDistance()
 * 
 * 	def set_min_distance(self, float distance) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setMinDistance(distance)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_21set_min_distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_21set_min_distance = {"set_min_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_21set_min_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_21set_min_distance(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_distance;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_min_distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_distance,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 525, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 525, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_min_distance", 0) < 0) __PYX_ERR(0, 525, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_min_distance", 1, 1, 1, i); __PYX_ERR(0, 525, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 525, __pyx_L3_error)
    }
    __pyx_v_distance = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_distance == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 525, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_min_distance", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 525, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.set_min_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_20set_min_distance(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v_distance);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_20set_min_distance(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_distance) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_min_distance", 0);

  /* "pysfml261.pyx":526
 * 
 * 	def set_min_distance(self, float distance) -> None:
 * 		self.music.setMinDistance(distance)             # <<<<<<<<<<<<<<
 * 
 * 	def get_attenuation(self) -> float:
*/
  __pyx_v_self->music->setMinDistance(__pyx_v_distance);

  /* "pysfml261.pyx":525
 * 		return self.music.getMinDistance()
 * 
 * 	def set_min_distance(self, float distance) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setMinDistance(distance)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":528
 * 		self.music.setMinDistance(distance)
 * 
 * 	def get_attenuation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getAttenuation()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_23get_attenuation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_23get_attenuation = {"get_attenuation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_23get_attenuation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_23get_attenuation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_attenuation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_attenuation", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_attenuation", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_22get_attenuation(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_22get_attenuation(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_attenuation", 0);

  /* "pysfml261.pyx":529
 * 
 * 	def get_attenuation(self) -> float:
 * 		return self.music.getAttenuation()             # <<<<<<<<<<<<<<
 * 
 * 	def set_attenuation(self, float attenuation) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->music->getAttenuation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 529, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":528
 * 		self.music.setMinDistance(distance)
 * 
 * 	def get_attenuation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getAttenuation()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfMusic.get_attenuation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":531
 * 		return self.music.getAttenuation()
 * 
 * 	def set_attenuation(self, float attenuation) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setAttenuation(attenuation)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_25set_attenuation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_25set_attenuation = {"set_attenuation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_25set_attenuation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_25set_attenuation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_attenuation;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_attenuation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_attenuation,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 531, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_attenuation", 0) < 0) __PYX_ERR(0, 531, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_attenuation", 1, 1, 1, i); __PYX_ERR(0, 531, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 531, __pyx_L3_error)
    }
    __pyx_v_attenuation = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_attenuation == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 531, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_attenuation", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 531, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.set_attenuation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_24set_attenuation(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v_attenuation);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_24set_attenuation(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_attenuation) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_attenuation", 0);

  /* "pysfml261.pyx":532
 * 
 * 	def set_attenuation(self, float attenuation) -> None:
 * 		self.music.setAttenuation(attenuation)             # <<<<<<<<<<<<<<
 * 
 * 	def get_loop(self) -> bool:
*/
  __pyx_v_self->music->setAttenuation(__pyx_v_attenuation);

  /* "pysfml261.pyx":531
 * 		return self.music.getAttenuation()
 * 
 * 	def set_attenuation(self, float attenuation) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setAttenuation(attenuation)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":534
 * 		self.music.setAttenuation(attenuation)
 * 
 * 	def get_loop(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.music.getLoop()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_27get_loop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_27get_loop = {"get_loop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_27get_loop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_27get_loop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_loop (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_loop", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_loop", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_26get_loop(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_26get_loop(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_loop", 0);

  /* "pysfml261.pyx":535
 * 
 * 	def get_loop(self) -> bool:
 * 		return self.music.getLoop()             # <<<<<<<<<<<<<<
 * 
 * 	def set_loop(self, bint loop) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->music->getLoop()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":534
 * 		self.music.setAttenuation(attenuation)
 * 
 * 	def get_loop(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.music.getLoop()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfMusic.get_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":537
 * 		return self.music.getLoop()
 * 
 * 	def set_loop(self, bint loop) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setLoop(loop)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_29set_loop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_29set_loop = {"set_loop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_29set_loop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_29set_loop(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_loop;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_loop (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_loop,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 537, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_loop", 0) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_loop", 1, 1, 1, i); __PYX_ERR(0, 537, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 537, __pyx_L3_error)
    }
    __pyx_v_loop = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_loop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 537, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_loop", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 537, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.set_loop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_28set_loop(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v_loop);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_28set_loop(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, int __pyx_v_loop) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_loop", 0);

  /* "pysfml261.pyx":538
 * 
 * 	def set_loop(self, bint loop) -> None:
 * 		self.music.setLoop(loop)             # <<<<<<<<<<<<<<
 * 
 * 	def get_volume(self) -> float:
*/
  __pyx_v_self->music->setLoop(__pyx_v_loop);

  /* "pysfml261.pyx":537
 * 		return self.music.getLoop()
 * 
 * 	def set_loop(self, bint loop) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setLoop(loop)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":540
 * 		self.music.setLoop(loop)
 * 
 * 	def get_volume(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getVolume()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_31get_volume(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_31get_volume = {"get_volume", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_31get_volume, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_31get_volume(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_volume (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_volume", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_volume", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_30get_volume(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_30get_volume(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_volume", 0);

  /* "pysfml261.pyx":541
 * 
 * 	def get_volume(self) -> float:
 * 		return self.music.getVolume()             # <<<<<<<<<<<<<<
 * 
 * 	def set_volume(self, float volume) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->music->getVolume()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":540
 * 		self.music.setLoop(loop)
 * 
 * 	def get_volume(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getVolume()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfMusic.get_volume", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":543
 * 		return self.music.getVolume()
 * 
 * 	def set_volume(self, float volume) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setVolume(volume)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_33set_volume(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_33set_volume = {"set_volume", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_33set_volume, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_33set_volume(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_volume;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_volume (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_volume,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 543, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 543, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_volume", 0) < 0) __PYX_ERR(0, 543, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_volume", 1, 1, 1, i); __PYX_ERR(0, 543, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 543, __pyx_L3_error)
    }
    __pyx_v_volume = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_volume == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 543, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_volume", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 543, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.set_volume", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_32set_volume(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v_volume);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_32set_volume(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_volume) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_volume", 0);

  /* "pysfml261.pyx":544
 * 
 * 	def set_volume(self, float volume) -> None:
 * 		self.music.setVolume(volume)             # <<<<<<<<<<<<<<
 * 
 * 	def get_pitch(self) -> float:
*/
  __pyx_v_self->music->setVolume(__pyx_v_volume);

  /* "pysfml261.pyx":543
 * 		return self.music.getVolume()
 * 
 * 	def set_volume(self, float volume) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setVolume(volume)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":546
 * 		self.music.setVolume(volume)
 * 
 * 	def get_pitch(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getPitch()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_35get_pitch(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_35get_pitch = {"get_pitch", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_35get_pitch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_35get_pitch(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pitch (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_pitch", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_pitch", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_34get_pitch(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_34get_pitch(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_pitch", 0);

  /* "pysfml261.pyx":547
 * 
 * 	def get_pitch(self) -> float:
 * 		return self.music.getPitch()             # <<<<<<<<<<<<<<
 * 
 * 	def set_pitch(self, float pitch) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->music->getPitch()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":546
 * 		self.music.setVolume(volume)
 * 
 * 	def get_pitch(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getPitch()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfMusic.get_pitch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":549
 * 		return self.music.getPitch()
 * 
 * 	def set_pitch(self, float pitch) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setPitch(pitch)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_37set_pitch(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_37set_pitch = {"set_pitch", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_37set_pitch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_37set_pitch(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_pitch;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_pitch (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pitch,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 549, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 549, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_pitch", 0) < 0) __PYX_ERR(0, 549, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_pitch", 1, 1, 1, i); __PYX_ERR(0, 549, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 549, __pyx_L3_error)
    }
    __pyx_v_pitch = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_pitch == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 549, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_pitch", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 549, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.set_pitch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_36set_pitch(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v_pitch);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_36set_pitch(struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, float __pyx_v_pitch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_pitch", 0);

  /* "pysfml261.pyx":550
 * 
 * 	def set_pitch(self, float pitch) -> None:
 * 		self.music.setPitch(pitch)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->music->setPitch(__pyx_v_pitch);

  /* "pysfml261.pyx":549
 * 		return self.music.getPitch()
 * 
 * 	def set_pitch(self, float pitch) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setPitch(pitch)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_39__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_39__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_39__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_39__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_38__reduce_cython__(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_38__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfMusic.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMusic_41__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMusic_41__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_41__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMusic_41__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMusic.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMusic_40__setstate_cython__(((struct __pyx_obj_9pysfml261_sfMusic *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMusic_40__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfMusic *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfMusic.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":557
 * 	cdef sf_Time.Time* time
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.time = new sf_Time.Time()
 * 
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_6sfTime_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_6sfTime_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, __pyx_nargs); return -1; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return -1;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__cinit__", __pyx_kwds); return -1;}
  __pyx_r = __pyx_pf_9pysfml261_6sfTime___cinit__(((struct __pyx_obj_9pysfml261_sfTime *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_6sfTime___cinit__(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self) {
  int __pyx_r;

  /* "pysfml261.pyx":558
 * 
 * 	def __cinit__(self):
 * 		self.time = new sf_Time.Time()             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->time = new sf::Time();

  /* "pysfml261.pyx":557
 * 	cdef sf_Time.Time* time
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.time = new sf_Time.Time()
 * 
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":560
 * 		self.time = new sf_Time.Time()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.time
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_6sfTime_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_6sfTime_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_6sfTime_2__dealloc__(((struct __pyx_obj_9pysfml261_sfTime *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_6sfTime_2__dealloc__(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self) {

  /* "pysfml261.pyx":561
 * 
 * 	def __dealloc__(self):
 * 		del self.time             # <<<<<<<<<<<<<<
 * 
 * 	def asSeconds(self) -> float:
*/
  delete __pyx_v_self->time;

  /* "pysfml261.pyx":560
 * 		self.time = new sf_Time.Time()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.time
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":563
 * 		del self.time
 * 
 * 	def asSeconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.time.asSeconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfTime_5asSeconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfTime_5asSeconds = {"asSeconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_5asSeconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfTime_5asSeconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("asSeconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("asSeconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("asSeconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfTime_4asSeconds(((struct __pyx_obj_9pysfml261_sfTime *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfTime_4asSeconds(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("asSeconds", 0);

  /* "pysfml261.pyx":564
 * 
 * 	def asSeconds(self) -> float:
 * 		return self.time.asSeconds()             # <<<<<<<<<<<<<<
 * 
 * 	def asMilliseconds(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->time->asSeconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":563
 * 		del self.time
 * 
 * 	def asSeconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.time.asSeconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfTime.asSeconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":566
 * 		return self.time.asSeconds()
 * 
 * 	def asMilliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.time.asMilliseconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfTime_7asMilliseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfTime_7asMilliseconds = {"asMilliseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_7asMilliseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfTime_7asMilliseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("asMilliseconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("asMilliseconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("asMilliseconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfTime_6asMilliseconds(((struct __pyx_obj_9pysfml261_sfTime *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfTime_6asMilliseconds(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("asMilliseconds", 0);

  /* "pysfml261.pyx":567
 * 
 * 	def asMilliseconds(self) -> int:
 * 		return self.time.asMilliseconds()             # <<<<<<<<<<<<<<
 * 
 * 	def asMicroseconds(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_int(__pyx_v_self->time->asMilliseconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 567, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":566
 * 		return self.time.asSeconds()
 * 
 * 	def asMilliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.time.asMilliseconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfTime.asMilliseconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":569
 * 		return self.time.asMilliseconds()
 * 
 * 	def asMicroseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.time.asMicroseconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfTime_9asMicroseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfTime_9asMicroseconds = {"asMicroseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_9asMicroseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfTime_9asMicroseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("asMicroseconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("asMicroseconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("asMicroseconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfTime_8asMicroseconds(((struct __pyx_obj_9pysfml261_sfTime *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfTime_8asMicroseconds(struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("asMicroseconds", 0);

  /* "pysfml261.pyx":570
 * 
 * 	def asMicroseconds(self) -> int:
 * 		return self.time.asMicroseconds()             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_long(__pyx_v_self->time->asMicroseconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 570, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":569
 * 		return self.time.asMilliseconds()
 * 
 * 	def asMicroseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.time.asMicroseconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfTime.asMicroseconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfTime_11__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfTime_11__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_11__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfTime_11__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfTime_10__reduce_cython__(((struct __pyx_obj_9pysfml261_sfTime *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfTime_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfTime.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfTime_13__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfTime_13__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_13__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfTime_13__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfTime.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfTime_12__setstate_cython__(((struct __pyx_obj_9pysfml261_sfTime *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfTime_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfTime *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfTime.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":577
 * 	cdef Clock* clock
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.clock = new Clock()
 * 
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfClock_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_7sfClock_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, __pyx_nargs); return -1; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return -1;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__cinit__", __pyx_kwds); return -1;}
  __pyx_r = __pyx_pf_9pysfml261_7sfClock___cinit__(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfClock___cinit__(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {
  int __pyx_r;

  /* "pysfml261.pyx":578
 * 
 * 	def __cinit__(self):
 * 		self.clock = new Clock()             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->clock = new sf::Clock();

  /* "pysfml261.pyx":577
 * 	cdef Clock* clock
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.clock = new Clock()
 * 
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":580
 * 		self.clock = new Clock()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.clock
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_7sfClock_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_7sfClock_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_7sfClock_2__dealloc__(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_7sfClock_2__dealloc__(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {

  /* "pysfml261.pyx":581
 * 
 * 	def __dealloc__(self):
 * 		del self.clock             # <<<<<<<<<<<<<<
 * 
 * 	def get_elapsed_seconds(self) -> float:
*/
  delete __pyx_v_self->clock;

  /* "pysfml261.pyx":580
 * 		self.clock = new Clock()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.clock
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":583
 * 		del self.clock
 * 
 * 	def get_elapsed_seconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asSeconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfClock_5get_elapsed_seconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfClock_5get_elapsed_seconds = {"get_elapsed_seconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_5get_elapsed_seconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfClock_5get_elapsed_seconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elapsed_seconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_elapsed_seconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_elapsed_seconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfClock_4get_elapsed_seconds(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfClock_4get_elapsed_seconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elapsed_seconds", 0);

  /* "pysfml261.pyx":584
 * 
 * 	def get_elapsed_seconds(self) -> float:
 * 		return self.clock.getElapsedTime().asSeconds()             # <<<<<<<<<<<<<<
 * 
 * 	def get_elapsed_milliseconds(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->clock->getElapsedTime().asSeconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":583
 * 		del self.clock
 * 
 * 	def get_elapsed_seconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asSeconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfClock.get_elapsed_seconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":586
 * 		return self.clock.getElapsedTime().asSeconds()
 * 
 * 	def get_elapsed_milliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asMilliseconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfClock_7get_elapsed_milliseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfClock_7get_elapsed_milliseconds = {"get_elapsed_milliseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_7get_elapsed_milliseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfClock_7get_elapsed_milliseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elapsed_milliseconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_elapsed_milliseconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_elapsed_milliseconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfClock_6get_elapsed_milliseconds(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfClock_6get_elapsed_milliseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elapsed_milliseconds", 0);

  /* "pysfml261.pyx":587
 * 
 * 	def get_elapsed_milliseconds(self) -> int:
 * 		return self.clock.getElapsedTime().asMilliseconds()             # <<<<<<<<<<<<<<
 * 
 * 	def get_elapsed_microseconds(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_int(__pyx_v_self->clock->getElapsedTime().asMilliseconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 587, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":586
 * 		return self.clock.getElapsedTime().asSeconds()
 * 
 * 	def get_elapsed_milliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asMilliseconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfClock.get_elapsed_milliseconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":589
 * 		return self.clock.getElapsedTime().asMilliseconds()
 * 
 * 	def get_elapsed_microseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asMicroseconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfClock_9get_elapsed_microseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfClock_9get_elapsed_microseconds = {"get_elapsed_microseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_9get_elapsed_microseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfClock_9get_elapsed_microseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_elapsed_microseconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_elapsed_microseconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_elapsed_microseconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfClock_8get_elapsed_microseconds(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfClock_8get_elapsed_microseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_elapsed_microseconds", 0);

  /* "pysfml261.pyx":590
 * 
 * 	def get_elapsed_microseconds(self) -> int:
 * 		return self.clock.getElapsedTime().asMicroseconds()             # <<<<<<<<<<<<<<
 * 
 * 	def restart_asseconds(self) -> float:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_long(__pyx_v_self->clock->getElapsedTime().asMicroseconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 590, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":589
 * 		return self.clock.getElapsedTime().asMilliseconds()
 * 
 * 	def get_elapsed_microseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asMicroseconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfClock.get_elapsed_microseconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":592
 * 		return self.clock.getElapsedTime().asMicroseconds()
 * 
 * 	def restart_asseconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asSeconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfClock_11restart_asseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfClock_11restart_asseconds = {"restart_asseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_11restart_asseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfClock_11restart_asseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("restart_asseconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("restart_asseconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("restart_asseconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfClock_10restart_asseconds(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfClock_10restart_asseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("restart_asseconds", 0);

  /* "pysfml261.pyx":593
 * 
 * 	def restart_asseconds(self) -> float:
 * 		return self.clock.restart().asSeconds()             # <<<<<<<<<<<<<<
 * 
 * 	def restart_asmilliseconds(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->clock->restart().asSeconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":592
 * 		return self.clock.getElapsedTime().asMicroseconds()
 * 
 * 	def restart_asseconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asSeconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfClock.restart_asseconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":595
 * 		return self.clock.restart().asSeconds()
 * 
 * 	def restart_asmilliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asMilliseconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfClock_13restart_asmilliseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfClock_13restart_asmilliseconds = {"restart_asmilliseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_13restart_asmilliseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfClock_13restart_asmilliseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("restart_asmilliseconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("restart_asmilliseconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("restart_asmilliseconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfClock_12restart_asmilliseconds(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfClock_12restart_asmilliseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("restart_asmilliseconds", 0);

  /* "pysfml261.pyx":596
 * 
 * 	def restart_asmilliseconds(self) -> int:
 * 		return self.clock.restart().asMilliseconds()             # <<<<<<<<<<<<<<
 * 
 * 	def restart_asmicroseconds(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_int(__pyx_v_self->clock->restart().asMilliseconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 596, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":595
 * 		return self.clock.restart().asSeconds()
 * 
 * 	def restart_asmilliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asMilliseconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfClock.restart_asmilliseconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":598
 * 		return self.clock.restart().asMilliseconds()
 * 
 * 	def restart_asmicroseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asMicroseconds()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfClock_15restart_asmicroseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfClock_15restart_asmicroseconds = {"restart_asmicroseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_15restart_asmicroseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfClock_15restart_asmicroseconds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("restart_asmicroseconds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("restart_asmicroseconds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("restart_asmicroseconds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfClock_14restart_asmicroseconds(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfClock_14restart_asmicroseconds(struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("restart_asmicroseconds", 0);

  /* "pysfml261.pyx":599
 * 
 * 	def restart_asmicroseconds(self) -> int:
 * 		return self.clock.restart().asMicroseconds()             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_long(__pyx_v_self->clock->restart().asMicroseconds()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 599, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":598
 * 		return self.clock.restart().asMilliseconds()
 * 
 * 	def restart_asmicroseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asMicroseconds()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfClock.restart_asmicroseconds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfClock_17__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfClock_17__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_17__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfClock_17__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfClock_16__reduce_cython__(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfClock_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfClock.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfClock_19__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfClock_19__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_19__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfClock_19__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfClock.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfClock_18__setstate_cython__(((struct __pyx_obj_9pysfml261_sfClock *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfClock_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfClock *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfClock.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":607
 * 	cdef float __buffer
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.clock = new Clock()
 * 		self.__buffer = <float>0.0
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_13TimeCollector_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_13TimeCollector_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, __pyx_nargs); return -1; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return -1;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__cinit__", __pyx_kwds); return -1;}
  __pyx_r = __pyx_pf_9pysfml261_13TimeCollector___cinit__(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_13TimeCollector___cinit__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self) {
  int __pyx_r;

  /* "pysfml261.pyx":608
 * 
 * 	def __cinit__(self):
 * 		self.clock = new Clock()             # <<<<<<<<<<<<<<
 * 		self.__buffer = <float>0.0
 * 
*/
  __pyx_v_self->clock = new sf::Clock();

  /* "pysfml261.pyx":609
 * 	def __cinit__(self):
 * 		self.clock = new Clock()
 * 		self.__buffer = <float>0.0             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->_TimeCollector__buffer = ((float)0.0);

  /* "pysfml261.pyx":607
 * 	cdef float __buffer
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.clock = new Clock()
 * 		self.__buffer = <float>0.0
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":611
 * 		self.__buffer = <float>0.0
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.clock
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_13TimeCollector_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_13TimeCollector_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_13TimeCollector_2__dealloc__(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_13TimeCollector_2__dealloc__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self) {

  /* "pysfml261.pyx":612
 * 
 * 	def __dealloc__(self):
 * 		del self.clock             # <<<<<<<<<<<<<<
 * 
 * 	def collect(self) -> None:
*/
  delete __pyx_v_self->clock;

  /* "pysfml261.pyx":611
 * 		self.__buffer = <float>0.0
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.clock
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":614
 * 		del self.clock
 * 
 * 	def collect(self) -> None:             # <<<<<<<<<<<<<<
 * 		cdef float elapsed = self.clock.restart().asMilliseconds()
 * 		self.__buffer += elapsed
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_5collect(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13TimeCollector_5collect = {"collect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13TimeCollector_5collect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_5collect(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("collect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("collect", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("collect", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13TimeCollector_4collect(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13TimeCollector_4collect(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self) {
  float __pyx_v_elapsed;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("collect", 0);

  /* "pysfml261.pyx":615
 * 
 * 	def collect(self) -> None:
 * 		cdef float elapsed = self.clock.restart().asMilliseconds()             # <<<<<<<<<<<<<<
 * 		self.__buffer += elapsed
 * 
*/
  __pyx_v_elapsed = __pyx_v_self->clock->restart().asMilliseconds();

  /* "pysfml261.pyx":616
 * 	def collect(self) -> None:
 * 		cdef float elapsed = self.clock.restart().asMilliseconds()
 * 		self.__buffer += elapsed             # <<<<<<<<<<<<<<
 * 
 * 	def reset(self) -> None:
*/
  __pyx_v_self->_TimeCollector__buffer = (__pyx_v_self->_TimeCollector__buffer + __pyx_v_elapsed);

  /* "pysfml261.pyx":614
 * 		del self.clock
 * 
 * 	def collect(self) -> None:             # <<<<<<<<<<<<<<
 * 		cdef float elapsed = self.clock.restart().asMilliseconds()
 * 		self.__buffer += elapsed
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":618
 * 		self.__buffer += elapsed
 * 
 * 	def reset(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.__buffer = <float>0.0
 * 		self.clock.restart()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_7reset(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13TimeCollector_7reset = {"reset", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13TimeCollector_7reset, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_7reset(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("reset", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("reset", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13TimeCollector_6reset(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13TimeCollector_6reset(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset", 0);

  /* "pysfml261.pyx":619
 * 
 * 	def reset(self) -> None:
 * 		self.__buffer = <float>0.0             # <<<<<<<<<<<<<<
 * 		self.clock.restart()
 * 
*/
  __pyx_v_self->_TimeCollector__buffer = ((float)0.0);

  /* "pysfml261.pyx":620
 * 	def reset(self) -> None:
 * 		self.__buffer = <float>0.0
 * 		self.clock.restart()             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  (void)(__pyx_v_self->clock->restart());

  /* "pysfml261.pyx":618
 * 		self.__buffer += elapsed
 * 
 * 	def reset(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.__buffer = <float>0.0
 * 		self.clock.restart()
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":622
 * 		self.clock.restart()
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def seconds(self) -> float:
 * 		return self.__buffer / 1000
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_7seconds_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_7seconds_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_13TimeCollector_7seconds___get__(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13TimeCollector_7seconds___get__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":624
 * 	@property
 * 	def seconds(self) -> float:
 * 		return self.__buffer / 1000             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->_TimeCollector__buffer / 1000.0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":622
 * 		self.clock.restart()
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def seconds(self) -> float:
 * 		return self.__buffer / 1000
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.TimeCollector.seconds.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":626
 * 		return self.__buffer / 1000
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def milliseconds(self) -> float:
 * 		return self.__buffer
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_12milliseconds_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_12milliseconds_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_13TimeCollector_12milliseconds___get__(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13TimeCollector_12milliseconds___get__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":628
 * 	@property
 * 	def milliseconds(self) -> float:
 * 		return self.__buffer             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->_TimeCollector__buffer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":626
 * 		return self.__buffer / 1000
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def milliseconds(self) -> float:
 * 		return self.__buffer
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.TimeCollector.milliseconds.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":630
 * 		return self.__buffer
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def microseconds(self) -> float:
 * 		return self.__buffer * 1000
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_12microseconds_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_12microseconds_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_13TimeCollector_12microseconds___get__(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13TimeCollector_12microseconds___get__(struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":632
 * 	@property
 * 	def microseconds(self) -> float:
 * 		return self.__buffer * 1000             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->_TimeCollector__buffer * 1000.0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":630
 * 		return self.__buffer
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def microseconds(self) -> float:
 * 		return self.__buffer * 1000
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.TimeCollector.microseconds.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13TimeCollector_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13TimeCollector_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13TimeCollector_8__reduce_cython__(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13TimeCollector_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.TimeCollector.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13TimeCollector_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13TimeCollector_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13TimeCollector_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TimeCollector.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13TimeCollector_10__setstate_cython__(((struct __pyx_obj_9pysfml261_TimeCollector *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13TimeCollector_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_TimeCollector *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.TimeCollector.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":640
 * 	cdef float __value
 * 
 * 	def __cinit__(self, float value):             # <<<<<<<<<<<<<<
 * 		self.clock = new Clock()
 * 		self.__value = value
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_10TimedFloat_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_10TimedFloat_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_value;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_value,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 640, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 640, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 640, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 640, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 640, __pyx_L3_error)
    }
    __pyx_v_value = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 640, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 640, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TimedFloat.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_10TimedFloat___cinit__(((struct __pyx_obj_9pysfml261_TimedFloat *)__pyx_v_self), __pyx_v_value);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_10TimedFloat___cinit__(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self, float __pyx_v_value) {
  int __pyx_r;

  /* "pysfml261.pyx":641
 * 
 * 	def __cinit__(self, float value):
 * 		self.clock = new Clock()             # <<<<<<<<<<<<<<
 * 		self.__value = value
 * 
*/
  __pyx_v_self->clock = new sf::Clock();

  /* "pysfml261.pyx":642
 * 	def __cinit__(self, float value):
 * 		self.clock = new Clock()
 * 		self.__value = value             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->_TimedFloat__value = __pyx_v_value;

  /* "pysfml261.pyx":640
 * 	cdef float __value
 * 
 * 	def __cinit__(self, float value):             # <<<<<<<<<<<<<<
 * 		self.clock = new Clock()
 * 		self.__value = value
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":644
 * 		self.__value = value
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.clock
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_10TimedFloat_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_10TimedFloat_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_10TimedFloat_2__dealloc__(((struct __pyx_obj_9pysfml261_TimedFloat *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_10TimedFloat_2__dealloc__(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self) {

  /* "pysfml261.pyx":645
 * 
 * 	def __dealloc__(self):
 * 		del self.clock             # <<<<<<<<<<<<<<
 * 
 * 	def get_timed(self) -> float:
*/
  delete __pyx_v_self->clock;

  /* "pysfml261.pyx":644
 * 		self.__value = value
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.clock
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":647
 * 		del self.clock
 * 
 * 	def get_timed(self) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float seconds = self.clock.restart().asSeconds()
 * 		return self.__value * seconds
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_5get_timed(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10TimedFloat_5get_timed = {"get_timed", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_5get_timed, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_5get_timed(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_timed (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_timed", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_timed", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_10TimedFloat_4get_timed(((struct __pyx_obj_9pysfml261_TimedFloat *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10TimedFloat_4get_timed(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self) {
  float __pyx_v_seconds;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_timed", 0);

  /* "pysfml261.pyx":648
 * 
 * 	def get_timed(self) -> float:
 * 		cdef float seconds = self.clock.restart().asSeconds()             # <<<<<<<<<<<<<<
 * 		return self.__value * seconds
 * 
*/
  __pyx_v_seconds = __pyx_v_self->clock->restart().asSeconds();

  /* "pysfml261.pyx":649
 * 	def get_timed(self) -> float:
 * 		cdef float seconds = self.clock.restart().asSeconds()
 * 		return self.__value * seconds             # <<<<<<<<<<<<<<
 * 
 * 	def get_value(self) -> float:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->_TimedFloat__value * __pyx_v_seconds)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":647
 * 		del self.clock
 * 
 * 	def get_timed(self) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float seconds = self.clock.restart().asSeconds()
 * 		return self.__value * seconds
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.TimedFloat.get_timed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":651
 * 		return self.__value * seconds
 * 
 * 	def get_value(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.__value
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_7get_value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10TimedFloat_7get_value = {"get_value", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_7get_value, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_7get_value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_value (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_value", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_value", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_10TimedFloat_6get_value(((struct __pyx_obj_9pysfml261_TimedFloat *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10TimedFloat_6get_value(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_value", 0);

  /* "pysfml261.pyx":652
 * 
 * 	def get_value(self) -> float:
 * 		return self.__value             # <<<<<<<<<<<<<<
 * 
 * 	def set_value(self, float value) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->_TimedFloat__value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":651
 * 		return self.__value * seconds
 * 
 * 	def get_value(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.__value
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.TimedFloat.get_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":654
 * 		return self.__value
 * 
 * 	def set_value(self, float value) -> None:             # <<<<<<<<<<<<<<
 * 		self.__value = value
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_9set_value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10TimedFloat_9set_value = {"set_value", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_9set_value, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_9set_value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_value;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_value (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_value,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 654, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 654, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_value", 0) < 0) __PYX_ERR(0, 654, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_value", 1, 1, 1, i); __PYX_ERR(0, 654, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 654, __pyx_L3_error)
    }
    __pyx_v_value = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 654, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_value", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 654, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TimedFloat.set_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_10TimedFloat_8set_value(((struct __pyx_obj_9pysfml261_TimedFloat *)__pyx_v_self), __pyx_v_value);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10TimedFloat_8set_value(struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self, float __pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_value", 0);

  /* "pysfml261.pyx":655
 * 
 * 	def set_value(self, float value) -> None:
 * 		self.__value = value             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->_TimedFloat__value = __pyx_v_value;

  /* "pysfml261.pyx":654
 * 		return self.__value
 * 
 * 	def set_value(self, float value) -> None:             # <<<<<<<<<<<<<<
 * 		self.__value = value
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_11__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10TimedFloat_11__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_11__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_11__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_10TimedFloat_10__reduce_cython__(((struct __pyx_obj_9pysfml261_TimedFloat *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10TimedFloat_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.TimedFloat.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_13__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10TimedFloat_13__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_13__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10TimedFloat_13__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TimedFloat.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_10TimedFloat_12__setstate_cython__(((struct __pyx_obj_9pysfml261_TimedFloat *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10TimedFloat_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_TimedFloat *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.TimedFloat.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":666
 * 	cdef bint __animeStarted
 * 
 * 	def __cinit__(             # <<<<<<<<<<<<<<
 * 		self,
 * 		int length,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8Animator_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_8Animator_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_length;
  float __pyx_v_speed_;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_length,&__pyx_mstate_global->__pyx_n_u_speed,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 666, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 666, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 666, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 666, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, i); __PYX_ERR(0, 666, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 666, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 666, __pyx_L3_error)
    }
    __pyx_v_length = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_length == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 668, __pyx_L3_error)
    __pyx_v_speed_ = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_speed_ == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 669, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 666, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.Animator.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Animator___cinit__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self), __pyx_v_length, __pyx_v_speed_);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8Animator___cinit__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self, int __pyx_v_length, float __pyx_v_speed_) {
  int __pyx_r;

  /* "pysfml261.pyx":671
 * 		float speed_
 * 		):
 * 		self.length = length             # <<<<<<<<<<<<<<
 * 		self.speed = speed_
 * 		self.__animeEnded = False
*/
  __pyx_v_self->length = __pyx_v_length;

  /* "pysfml261.pyx":672
 * 		):
 * 		self.length = length
 * 		self.speed = speed_             # <<<<<<<<<<<<<<
 * 		self.__animeEnded = False
 * 		self.__animeStarted = False
*/
  __pyx_v_self->speed = __pyx_v_speed_;

  /* "pysfml261.pyx":673
 * 		self.length = length
 * 		self.speed = speed_
 * 		self.__animeEnded = False             # <<<<<<<<<<<<<<
 * 		self.__animeStarted = False
 * 		self.__buffer = <float>0.0
*/
  __pyx_v_self->_Animator__animeEnded = 0;

  /* "pysfml261.pyx":674
 * 		self.speed = speed_
 * 		self.__animeEnded = False
 * 		self.__animeStarted = False             # <<<<<<<<<<<<<<
 * 		self.__buffer = <float>0.0
 * 
*/
  __pyx_v_self->_Animator__animeStarted = 0;

  /* "pysfml261.pyx":675
 * 		self.__animeEnded = False
 * 		self.__animeStarted = False
 * 		self.__buffer = <float>0.0             # <<<<<<<<<<<<<<
 * 
 * 	def get_current_index(self) -> int:
*/
  __pyx_v_self->_Animator__buffer = ((float)0.0);

  /* "pysfml261.pyx":666
 * 	cdef bint __animeStarted
 * 
 * 	def __cinit__(             # <<<<<<<<<<<<<<
 * 		self,
 * 		int length,
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":677
 * 		self.__buffer = <float>0.0
 * 
 * 	def get_current_index(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef int index = <int>self.__buffer
 * 		cdef int maxIndex = self.length - 1
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Animator_3get_current_index(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8Animator_3get_current_index = {"get_current_index", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Animator_3get_current_index, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8Animator_3get_current_index(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_current_index (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_current_index", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_current_index", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8Animator_2get_current_index(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Animator_2get_current_index(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self) {
  int __pyx_v_index;
  int __pyx_v_maxIndex;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_current_index", 0);

  /* "pysfml261.pyx":678
 * 
 * 	def get_current_index(self) -> int:
 * 		cdef int index = <int>self.__buffer             # <<<<<<<<<<<<<<
 * 		cdef int maxIndex = self.length - 1
 * 		if index > maxIndex:
*/
  __pyx_v_index = ((int)__pyx_v_self->_Animator__buffer);

  /* "pysfml261.pyx":679
 * 	def get_current_index(self) -> int:
 * 		cdef int index = <int>self.__buffer
 * 		cdef int maxIndex = self.length - 1             # <<<<<<<<<<<<<<
 * 		if index > maxIndex:
 * 			index = 0
*/
  __pyx_v_maxIndex = (__pyx_v_self->length - 1);

  /* "pysfml261.pyx":680
 * 		cdef int index = <int>self.__buffer
 * 		cdef int maxIndex = self.length - 1
 * 		if index > maxIndex:             # <<<<<<<<<<<<<<
 * 			index = 0
 * 			self.__buffer = 0
*/
  __pyx_t_1 = (__pyx_v_index > __pyx_v_maxIndex);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":681
 * 		cdef int maxIndex = self.length - 1
 * 		if index > maxIndex:
 * 			index = 0             # <<<<<<<<<<<<<<
 * 			self.__buffer = 0
 * 		if index == 0:
*/
    __pyx_v_index = 0;

    /* "pysfml261.pyx":682
 * 		if index > maxIndex:
 * 			index = 0
 * 			self.__buffer = 0             # <<<<<<<<<<<<<<
 * 		if index == 0:
 * 			self.__animeStarted = True
*/
    __pyx_v_self->_Animator__buffer = 0.0;

    /* "pysfml261.pyx":680
 * 		cdef int index = <int>self.__buffer
 * 		cdef int maxIndex = self.length - 1
 * 		if index > maxIndex:             # <<<<<<<<<<<<<<
 * 			index = 0
 * 			self.__buffer = 0
*/
  }

  /* "pysfml261.pyx":683
 * 			index = 0
 * 			self.__buffer = 0
 * 		if index == 0:             # <<<<<<<<<<<<<<
 * 			self.__animeStarted = True
 * 			self.__animeEnded = False
*/
  __pyx_t_1 = (__pyx_v_index == 0);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":684
 * 			self.__buffer = 0
 * 		if index == 0:
 * 			self.__animeStarted = True             # <<<<<<<<<<<<<<
 * 			self.__animeEnded = False
 * 		elif index == maxIndex:
*/
    __pyx_v_self->_Animator__animeStarted = 1;

    /* "pysfml261.pyx":685
 * 		if index == 0:
 * 			self.__animeStarted = True
 * 			self.__animeEnded = False             # <<<<<<<<<<<<<<
 * 		elif index == maxIndex:
 * 			self.__animeStarted = False
*/
    __pyx_v_self->_Animator__animeEnded = 0;

    /* "pysfml261.pyx":683
 * 			index = 0
 * 			self.__buffer = 0
 * 		if index == 0:             # <<<<<<<<<<<<<<
 * 			self.__animeStarted = True
 * 			self.__animeEnded = False
*/
    goto __pyx_L4;
  }

  /* "pysfml261.pyx":686
 * 			self.__animeStarted = True
 * 			self.__animeEnded = False
 * 		elif index == maxIndex:             # <<<<<<<<<<<<<<
 * 			self.__animeStarted = False
 * 			self.__animeEnded = True
*/
  __pyx_t_1 = (__pyx_v_index == __pyx_v_maxIndex);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":687
 * 			self.__animeEnded = False
 * 		elif index == maxIndex:
 * 			self.__animeStarted = False             # <<<<<<<<<<<<<<
 * 			self.__animeEnded = True
 * 		else:
*/
    __pyx_v_self->_Animator__animeStarted = 0;

    /* "pysfml261.pyx":688
 * 		elif index == maxIndex:
 * 			self.__animeStarted = False
 * 			self.__animeEnded = True             # <<<<<<<<<<<<<<
 * 		else:
 * 			self.__animeStarted = False
*/
    __pyx_v_self->_Animator__animeEnded = 1;

    /* "pysfml261.pyx":686
 * 			self.__animeStarted = True
 * 			self.__animeEnded = False
 * 		elif index == maxIndex:             # <<<<<<<<<<<<<<
 * 			self.__animeStarted = False
 * 			self.__animeEnded = True
*/
    goto __pyx_L4;
  }

  /* "pysfml261.pyx":690
 * 			self.__animeEnded = True
 * 		else:
 * 			self.__animeStarted = False             # <<<<<<<<<<<<<<
 * 			self.__animeEnded = False
 * 		self.__buffer += self.speed
*/
  /*else*/ {
    __pyx_v_self->_Animator__animeStarted = 0;

    /* "pysfml261.pyx":691
 * 		else:
 * 			self.__animeStarted = False
 * 			self.__animeEnded = False             # <<<<<<<<<<<<<<
 * 		self.__buffer += self.speed
 * 		return index
*/
    __pyx_v_self->_Animator__animeEnded = 0;
  }
  __pyx_L4:;

  /* "pysfml261.pyx":692
 * 			self.__animeStarted = False
 * 			self.__animeEnded = False
 * 		self.__buffer += self.speed             # <<<<<<<<<<<<<<
 * 		return index
 * 
*/
  __pyx_v_self->_Animator__buffer = (__pyx_v_self->_Animator__buffer + __pyx_v_self->speed);

  /* "pysfml261.pyx":693
 * 			self.__animeEnded = False
 * 		self.__buffer += self.speed
 * 		return index             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyLong_From_int(__pyx_v_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(PyLong_CheckExact(__pyx_t_2)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_2))) __PYX_ERR(0, 693, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":677
 * 		self.__buffer = <float>0.0
 * 
 * 	def get_current_index(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef int index = <int>self.__buffer
 * 		cdef int maxIndex = self.length - 1
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.Animator.get_current_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":695
 * 		return index
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def lenz(self) -> int:
 * 		return self.length
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Animator_4lenz_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8Animator_4lenz_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_8Animator_4lenz___get__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Animator_4lenz___get__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":697
 * 	@property
 * 	def lenz(self) -> int:
 * 		return self.length             # <<<<<<<<<<<<<<
 * 
 * 	@lenz.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_int(__pyx_v_self->length); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":695
 * 		return index
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def lenz(self) -> int:
 * 		return self.length
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.Animator.lenz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":699
 * 		return self.length
 * 
 * 	@lenz.setter             # <<<<<<<<<<<<<<
 * 	def lenz(self, int length) -> None:
 * 		self.length = length
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8Animator_4lenz_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_length); /*proto*/
static int __pyx_pw_9pysfml261_8Animator_4lenz_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_length) {
  int __pyx_v_length;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_length); {
    __pyx_v_length = __Pyx_PyLong_As_int(__pyx_arg_length); if (unlikely((__pyx_v_length == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 700, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.Animator.lenz.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Animator_4lenz_2__set__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self), ((int)__pyx_v_length));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8Animator_4lenz_2__set__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self, int __pyx_v_length) {
  int __pyx_r;

  /* "pysfml261.pyx":701
 * 	@lenz.setter
 * 	def lenz(self, int length) -> None:
 * 		self.length = length             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->length = __pyx_v_length;

  /* "pysfml261.pyx":699
 * 		return self.length
 * 
 * 	@lenz.setter             # <<<<<<<<<<<<<<
 * 	def lenz(self, int length) -> None:
 * 		self.length = length
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":703
 * 		self.length = length
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def spid(self) -> float:
 * 		return self.speed
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Animator_4spid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8Animator_4spid_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_8Animator_4spid___get__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Animator_4spid___get__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":705
 * 	@property
 * 	def spid(self) -> float:
 * 		return self.speed             # <<<<<<<<<<<<<<
 * 
 * 	@spid.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->speed); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":703
 * 		self.length = length
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def spid(self) -> float:
 * 		return self.speed
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.Animator.spid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":707
 * 		return self.speed
 * 
 * 	@spid.setter             # <<<<<<<<<<<<<<
 * 	def spid(self, float speed) -> None:
 * 		self.speed = speed
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8Animator_4spid_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_speed); /*proto*/
static int __pyx_pw_9pysfml261_8Animator_4spid_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_speed) {
  float __pyx_v_speed;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_speed); {
    __pyx_v_speed = __Pyx_PyFloat_AsFloat(__pyx_arg_speed); if (unlikely((__pyx_v_speed == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 708, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.Animator.spid.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Animator_4spid_2__set__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self), ((float)__pyx_v_speed));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8Animator_4spid_2__set__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self, float __pyx_v_speed) {
  int __pyx_r;

  /* "pysfml261.pyx":709
 * 	@spid.setter
 * 	def spid(self, float speed) -> None:
 * 		self.speed = speed             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->speed = __pyx_v_speed;

  /* "pysfml261.pyx":707
 * 		return self.speed
 * 
 * 	@spid.setter             # <<<<<<<<<<<<<<
 * 	def spid(self, float speed) -> None:
 * 		self.speed = speed
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":711
 * 		self.speed = speed
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def is_ended(self) -> bool:
 * 		return self.__animeEnded
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Animator_8is_ended_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8Animator_8is_ended_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_8Animator_8is_ended___get__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Animator_8is_ended___get__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":713
 * 	@property
 * 	def is_ended(self) -> bool:
 * 		return self.__animeEnded             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->_Animator__animeEnded); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":711
 * 		self.speed = speed
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def is_ended(self) -> bool:
 * 		return self.__animeEnded
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.Animator.is_ended.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":715
 * 		return self.__animeEnded
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def is_started(self) -> bool:
 * 		return self.__animeStarted
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Animator_10is_started_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8Animator_10is_started_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_8Animator_10is_started___get__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Animator_10is_started___get__(struct __pyx_obj_9pysfml261_Animator *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":717
 * 	@property
 * 	def is_started(self) -> bool:
 * 		return self.__animeStarted             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->_Animator__animeStarted); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":715
 * 		return self.__animeEnded
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def is_started(self) -> bool:
 * 		return self.__animeStarted
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.Animator.is_started.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Animator_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8Animator_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Animator_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8Animator_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8Animator_4__reduce_cython__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Animator_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_Animator *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.Animator.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Animator_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8Animator_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Animator_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8Animator_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.Animator.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Animator_6__setstate_cython__(((struct __pyx_obj_9pysfml261_Animator *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Animator_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_Animator *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.Animator.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":724
 * 	cdef Image* image
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 		self.image = new Image()
 * 		cdef string path = _text(filename).encode('utf-8')
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfImage_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_7sfImage_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_filename,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 724, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 724, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 724, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 724, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 724, __pyx_L3_error)
    }
    __pyx_v_filename = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 724, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfImage.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_filename), (&PyUnicode_Type), 1, "filename", 1))) __PYX_ERR(0, 724, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_7sfImage___cinit__(((struct __pyx_obj_9pysfml261_sfImage *)__pyx_v_self), __pyx_v_filename);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfImage___cinit__(struct __pyx_obj_9pysfml261_sfImage *__pyx_v_self, PyObject *__pyx_v_filename) {
  std::string __pyx_v_path;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  PyObject *__pyx_t_9[3];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pysfml261.pyx":725
 * 
 * 	def __cinit__(self, str filename):
 * 		self.image = new Image()             # <<<<<<<<<<<<<<
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.image.loadFromFile(path):
*/
  __pyx_v_self->image = new sf::Image();

  /* "pysfml261.pyx":726
 * 	def __cinit__(self, str filename):
 * 		self.image = new Image()
 * 		cdef string path = _text(filename).encode('utf-8')             # <<<<<<<<<<<<<<
 * 		if not self.image.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 726, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 726, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 726, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_convert_string_from_py_6libcpp_6string_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 726, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_path = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "pysfml261.pyx":727
 * 		self.image = new Image()
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.image.loadFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load image from {0}!'.format(filename))
*/
  __pyx_t_4 = (!__pyx_v_self->image->loadFromFile(__pyx_v_path));
  if (__pyx_t_4) {

    /* "pysfml261.pyx":728
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.image.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load image from {0}!'.format(filename))
 * 			else:
*/
    __pyx_t_4 = (PY_MAJOR_VERSION < 3);
    if (unlikely(__pyx_t_4)) {

      /* "pysfml261.pyx":729
 * 		if not self.image.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load image from {0}!'.format(filename))             # <<<<<<<<<<<<<<
 * 			else:
 * 				raise RuntimeError(f'Failed to load image {filename}!')
*/
      __pyx_t_1 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_5 = __pyx_builtin_RuntimeError; 
      __pyx_t_7 = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_image_from_0;
      __Pyx_INCREF(__pyx_t_7);
      __pyx_t_8 = 0;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_filename};
        __pyx_t_6 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_format, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 729, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
      }
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_6};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 729, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 729, __pyx_L1_error)

      /* "pysfml261.pyx":728
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.image.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load image from {0}!'.format(filename))
 * 			else:
*/
    }

    /* "pysfml261.pyx":731
 * 				raise RuntimeError('Failed to load image from {0}!'.format(filename))
 * 			else:
 * 				raise RuntimeError(f'Failed to load image {filename}!')             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
    /*else*/ {
      __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_6 = __pyx_builtin_RuntimeError; 
      __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 731, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9[0] = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_image;
      __pyx_t_9[1] = __pyx_t_1;
      __pyx_t_9[2] = __pyx_mstate_global->__pyx_kp_u_;
      __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_9, 3, 21 + __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1) + 1, 127 | __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1));
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 731, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 731, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 731, __pyx_L1_error)
    }

    /* "pysfml261.pyx":727
 * 		self.image = new Image()
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.image.loadFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load image from {0}!'.format(filename))
*/
  }

  /* "pysfml261.pyx":724
 * 	cdef Image* image
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 		self.image = new Image()
 * 		cdef string path = _text(filename).encode('utf-8')
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfImage.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":733
 * 				raise RuntimeError(f'Failed to load image {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.image is not NULL:
 * 			del self.image
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_7sfImage_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_7sfImage_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_7sfImage_2__dealloc__(((struct __pyx_obj_9pysfml261_sfImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_7sfImage_2__dealloc__(struct __pyx_obj_9pysfml261_sfImage *__pyx_v_self) {
  int __pyx_t_1;

  /* "pysfml261.pyx":734
 * 
 * 	def __dealloc__(self):
 * 		if self.image is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.image
 * 
*/
  __pyx_t_1 = (__pyx_v_self->image != NULL);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":735
 * 	def __dealloc__(self):
 * 		if self.image is not NULL:
 * 			del self.image             # <<<<<<<<<<<<<<
 * 
 * 
*/
    delete __pyx_v_self->image;

    /* "pysfml261.pyx":734
 * 
 * 	def __dealloc__(self):
 * 		if self.image is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.image
 * 
*/
  }

  /* "pysfml261.pyx":733
 * 				raise RuntimeError(f'Failed to load image {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.image is not NULL:
 * 			del self.image
*/

  /* function exit code */
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfImage_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfImage_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfImage_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfImage_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfImage_4__reduce_cython__(((struct __pyx_obj_9pysfml261_sfImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfImage_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfImage.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfImage_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfImage_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfImage_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfImage_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfImage.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfImage_6__setstate_cython__(((struct __pyx_obj_9pysfml261_sfImage *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfImage_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfImage *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfImage.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":742
 * 	cdef VideoMode* __mode
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		unsigned int modeWidth,
 * 		unsigned int modeHeight,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfVideoMode_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_11sfVideoMode_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_modeWidth;
  unsigned int __pyx_v_modeHeight;
  unsigned int __pyx_v_bitsPerPixel;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_modeWidth,&__pyx_mstate_global->__pyx_n_u_modeHeight,&__pyx_mstate_global->__pyx_n_u_bitsPerPixel,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 742, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 742, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 742, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 742, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 742, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, i); __PYX_ERR(0, 742, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 742, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 742, __pyx_L3_error)
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 742, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_modeWidth = __Pyx_PyLong_As_unsigned_int(values[0]); if (unlikely((__pyx_v_modeWidth == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 743, __pyx_L3_error)
    __pyx_v_modeHeight = __Pyx_PyLong_As_unsigned_int(values[1]); if (unlikely((__pyx_v_modeHeight == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 744, __pyx_L3_error)
    if (values[2]) {
      __pyx_v_bitsPerPixel = __Pyx_PyLong_As_unsigned_int(values[2]); if (unlikely((__pyx_v_bitsPerPixel == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 745, __pyx_L3_error)
    } else {
      __pyx_v_bitsPerPixel = ((unsigned int)32);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 742, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfVideoMode.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode___cinit__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self), __pyx_v_modeWidth, __pyx_v_modeHeight, __pyx_v_bitsPerPixel);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfVideoMode___cinit__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, unsigned int __pyx_v_modeWidth, unsigned int __pyx_v_modeHeight, unsigned int __pyx_v_bitsPerPixel) {
  int __pyx_r;

  /* "pysfml261.pyx":746
 * 		unsigned int modeHeight,
 * 		unsigned int bitsPerPixel = 32):
 * 		self.__mode = new VideoMode(modeWidth, modeHeight, bitsPerPixel)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->_sfVideoMode__mode = new sf::VideoMode(__pyx_v_modeWidth, __pyx_v_modeHeight, __pyx_v_bitsPerPixel);

  /* "pysfml261.pyx":742
 * 	cdef VideoMode* __mode
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		unsigned int modeWidth,
 * 		unsigned int modeHeight,
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":748
 * 		self.__mode = new VideoMode(modeWidth, modeHeight, bitsPerPixel)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.__mode
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_11sfVideoMode_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_11sfVideoMode_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_11sfVideoMode_2__dealloc__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_11sfVideoMode_2__dealloc__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self) {

  /* "pysfml261.pyx":749
 * 
 * 	def __dealloc__(self):
 * 		del self.__mode             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  delete __pyx_v_self->_sfVideoMode__mode;

  /* "pysfml261.pyx":748
 * 		self.__mode = new VideoMode(modeWidth, modeHeight, bitsPerPixel)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.__mode
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":751
 * 		del self.__mode
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_desktop_mode() -> tuple[int, int, int]:
 * 		cdef VideoMode current = VideoMode.getDesktopMode()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_5get_desktop_mode(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfVideoMode_5get_desktop_mode = {"get_desktop_mode", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfVideoMode_5get_desktop_mode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_5get_desktop_mode(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_desktop_mode (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_desktop_mode", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_desktop_mode", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_4get_desktop_mode();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_4get_desktop_mode(void) {
  sf::VideoMode __pyx_v_current;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_desktop_mode", 0);

  /* "pysfml261.pyx":753
 * 	@staticmethod
 * 	def get_desktop_mode() -> tuple[int, int, int]:
 * 		cdef VideoMode current = VideoMode.getDesktopMode()             # <<<<<<<<<<<<<<
 * 		return (current.width, current.height, current.bitsPerPixel)
 * 
*/
  __pyx_v_current = sf::VideoMode::getDesktopMode();

  /* "pysfml261.pyx":754
 * 	def get_desktop_mode() -> tuple[int, int, int]:
 * 		cdef VideoMode current = VideoMode.getDesktopMode()
 * 		return (current.width, current.height, current.bitsPerPixel)             # <<<<<<<<<<<<<<
 * 
 * 	def is_valid(self) -> bool:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_current.width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 754, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_From_unsigned_int(__pyx_v_current.height); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 754, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyLong_From_unsigned_int(__pyx_v_current.bitsPerPixel); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 754, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 754, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 754, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 754, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3) != (0)) __PYX_ERR(0, 754, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":751
 * 		del self.__mode
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_desktop_mode() -> tuple[int, int, int]:
 * 		cdef VideoMode current = VideoMode.getDesktopMode()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pysfml261.sfVideoMode.get_desktop_mode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":756
 * 		return (current.width, current.height, current.bitsPerPixel)
 * 
 * 	def is_valid(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.__mode.isValid()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_7is_valid(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfVideoMode_7is_valid = {"is_valid", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfVideoMode_7is_valid, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_7is_valid(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_valid (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("is_valid", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("is_valid", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_6is_valid(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_6is_valid(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_valid", 0);

  /* "pysfml261.pyx":757
 * 
 * 	def is_valid(self) -> bool:
 * 		return self.__mode.isValid()             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->_sfVideoMode__mode->isValid()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 757, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":756
 * 		return (current.width, current.height, current.bitsPerPixel)
 * 
 * 	def is_valid(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.__mode.isValid()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfVideoMode.is_valid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":759
 * 		return self.__mode.isValid()
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def width(self) -> int:
 * 		return self.__mode.width
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_5width_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_5width___get__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_5width___get__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":761
 * 	@property
 * 	def width(self) -> int:
 * 		return self.__mode.width             # <<<<<<<<<<<<<<
 * 
 * 	@width.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_self->_sfVideoMode__mode->width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":759
 * 		return self.__mode.isValid()
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def width(self) -> int:
 * 		return self.__mode.width
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfVideoMode.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":763
 * 		return self.__mode.width
 * 
 * 	@width.setter             # <<<<<<<<<<<<<<
 * 	def width(self, unsigned int width_) -> None:
 * 		self.__mode.width = width_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfVideoMode_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_width_); /*proto*/
static int __pyx_pw_9pysfml261_11sfVideoMode_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_width_) {
  unsigned int __pyx_v_width_;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_width_); {
    __pyx_v_width_ = __Pyx_PyLong_As_unsigned_int(__pyx_arg_width_); if (unlikely((__pyx_v_width_ == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 764, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.sfVideoMode.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_5width_2__set__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self), ((unsigned int)__pyx_v_width_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfVideoMode_5width_2__set__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, unsigned int __pyx_v_width_) {
  int __pyx_r;

  /* "pysfml261.pyx":765
 * 	@width.setter
 * 	def width(self, unsigned int width_) -> None:
 * 		self.__mode.width = width_             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->_sfVideoMode__mode->width = __pyx_v_width_;

  /* "pysfml261.pyx":763
 * 		return self.__mode.width
 * 
 * 	@width.setter             # <<<<<<<<<<<<<<
 * 	def width(self, unsigned int width_) -> None:
 * 		self.__mode.width = width_
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":767
 * 		self.__mode.width = width_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def height(self) -> int:
 * 		return self.__mode.height
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_6height_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_6height___get__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_6height___get__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":769
 * 	@property
 * 	def height(self) -> int:
 * 		return self.__mode.height             # <<<<<<<<<<<<<<
 * 
 * 	@height.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_self->_sfVideoMode__mode->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":767
 * 		self.__mode.width = width_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def height(self) -> int:
 * 		return self.__mode.height
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfVideoMode.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":771
 * 		return self.__mode.height
 * 
 * 	@height.setter             # <<<<<<<<<<<<<<
 * 	def height(self, unsigned int height_) -> None:
 * 		self.__mode.height = height_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfVideoMode_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_height_); /*proto*/
static int __pyx_pw_9pysfml261_11sfVideoMode_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_height_) {
  unsigned int __pyx_v_height_;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_height_); {
    __pyx_v_height_ = __Pyx_PyLong_As_unsigned_int(__pyx_arg_height_); if (unlikely((__pyx_v_height_ == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 772, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.sfVideoMode.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_6height_2__set__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self), ((unsigned int)__pyx_v_height_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfVideoMode_6height_2__set__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, unsigned int __pyx_v_height_) {
  int __pyx_r;

  /* "pysfml261.pyx":773
 * 	@height.setter
 * 	def height(self, unsigned int height_) -> None:
 * 		self.__mode.height = height_             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->_sfVideoMode__mode->height = __pyx_v_height_;

  /* "pysfml261.pyx":771
 * 		return self.__mode.height
 * 
 * 	@height.setter             # <<<<<<<<<<<<<<
 * 	def height(self, unsigned int height_) -> None:
 * 		self.__mode.height = height_
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":775
 * 		self.__mode.height = height_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def bits_per_pixel(self) -> int:
 * 		return self.__mode.bitsPerPixel
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_14bits_per_pixel_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_14bits_per_pixel_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_14bits_per_pixel___get__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_14bits_per_pixel___get__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":777
 * 	@property
 * 	def bits_per_pixel(self) -> int:
 * 		return self.__mode.bitsPerPixel             # <<<<<<<<<<<<<<
 * 
 * 	@bits_per_pixel.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_self->_sfVideoMode__mode->bitsPerPixel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":775
 * 		self.__mode.height = height_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def bits_per_pixel(self) -> int:
 * 		return self.__mode.bitsPerPixel
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfVideoMode.bits_per_pixel.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":779
 * 		return self.__mode.bitsPerPixel
 * 
 * 	@bits_per_pixel.setter             # <<<<<<<<<<<<<<
 * 	def bits_per_pixel(self, unsigned int bits_per_pixel_) -> None:
 * 		self.__mode.bitsPerPixel = bits_per_pixel_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfVideoMode_14bits_per_pixel_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_bits_per_pixel_); /*proto*/
static int __pyx_pw_9pysfml261_11sfVideoMode_14bits_per_pixel_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_bits_per_pixel_) {
  unsigned int __pyx_v_bits_per_pixel_;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_bits_per_pixel_); {
    __pyx_v_bits_per_pixel_ = __Pyx_PyLong_As_unsigned_int(__pyx_arg_bits_per_pixel_); if (unlikely((__pyx_v_bits_per_pixel_ == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 780, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.sfVideoMode.bits_per_pixel.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_14bits_per_pixel_2__set__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self), ((unsigned int)__pyx_v_bits_per_pixel_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfVideoMode_14bits_per_pixel_2__set__(struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, unsigned int __pyx_v_bits_per_pixel_) {
  int __pyx_r;

  /* "pysfml261.pyx":781
 * 	@bits_per_pixel.setter
 * 	def bits_per_pixel(self, unsigned int bits_per_pixel_) -> None:
 * 		self.__mode.bitsPerPixel = bits_per_pixel_             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->_sfVideoMode__mode->bitsPerPixel = __pyx_v_bits_per_pixel_;

  /* "pysfml261.pyx":779
 * 		return self.__mode.bitsPerPixel
 * 
 * 	@bits_per_pixel.setter             # <<<<<<<<<<<<<<
 * 	def bits_per_pixel(self, unsigned int bits_per_pixel_) -> None:
 * 		self.__mode.bitsPerPixel = bits_per_pixel_
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfVideoMode_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfVideoMode_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_8__reduce_cython__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfVideoMode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfVideoMode_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfVideoMode_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfVideoMode_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfVideoMode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfVideoMode_10__setstate_cython__(((struct __pyx_obj_9pysfml261_sfVideoMode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfVideoMode_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfVideoMode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfVideoMode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":788
 * 	cdef Color* color
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		unsigned int r = 0,
 * 		unsigned int g = 0,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfColor_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_7sfColor_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_r;
  unsigned int __pyx_v_g;
  unsigned int __pyx_v_b;
  unsigned int __pyx_v_a;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_r,&__pyx_mstate_global->__pyx_n_u_g,&__pyx_mstate_global->__pyx_n_u_b,&__pyx_mstate_global->__pyx_n_u_a,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 788, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 788, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 788, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 788, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 788, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 788, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 788, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 788, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 788, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 788, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_r = __Pyx_PyLong_As_unsigned_int(values[0]); if (unlikely((__pyx_v_r == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
    } else {
      __pyx_v_r = ((unsigned int)0);
    }
    if (values[1]) {
      __pyx_v_g = __Pyx_PyLong_As_unsigned_int(values[1]); if (unlikely((__pyx_v_g == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 790, __pyx_L3_error)
    } else {
      __pyx_v_g = ((unsigned int)0);
    }
    if (values[2]) {
      __pyx_v_b = __Pyx_PyLong_As_unsigned_int(values[2]); if (unlikely((__pyx_v_b == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 791, __pyx_L3_error)
    } else {
      __pyx_v_b = ((unsigned int)0);
    }
    if (values[3]) {
      __pyx_v_a = __Pyx_PyLong_As_unsigned_int(values[3]); if (unlikely((__pyx_v_a == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 792, __pyx_L3_error)
    } else {
      __pyx_v_a = ((unsigned int)0xFF);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 788, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfColor.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfColor___cinit__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self), __pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_v_a);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfColor___cinit__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_r, unsigned int __pyx_v_g, unsigned int __pyx_v_b, unsigned int __pyx_v_a) {
  int __pyx_r;

  /* "pysfml261.pyx":793
 * 		unsigned int b = 0,
 * 		unsigned int a = 255):
 * 		self.color = new Color(r, g, b, a)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->color = new sf::Color(__pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_v_a);

  /* "pysfml261.pyx":788
 * 	cdef Color* color
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		unsigned int r = 0,
 * 		unsigned int g = 0,
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":795
 * 		self.color = new Color(r, g, b, a)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.color
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_7sfColor_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_7sfColor_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_7sfColor_2__dealloc__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_7sfColor_2__dealloc__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self) {

  /* "pysfml261.pyx":796
 * 
 * 	def __dealloc__(self):
 * 		del self.color             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  delete __pyx_v_self->color;

  /* "pysfml261.pyx":795
 * 		self.color = new Color(r, g, b, a)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.color
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":798
 * 		del self.color
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def r(self) -> int:
 * 		return self.color.r
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfColor_1r_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_7sfColor_1r_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_1r___get__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfColor_1r___get__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":800
 * 	@property
 * 	def r(self) -> int:
 * 		return self.color.r             # <<<<<<<<<<<<<<
 * 
 * 	@r.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_self->color->r); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":798
 * 		del self.color
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def r(self) -> int:
 * 		return self.color.r
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfColor.r.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":802
 * 		return self.color.r
 * 
 * 	@r.setter             # <<<<<<<<<<<<<<
 * 	def r(self, unsigned int r_) -> None:
 * 		self.color.r = r_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfColor_1r_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_r_); /*proto*/
static int __pyx_pw_9pysfml261_7sfColor_1r_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_r_) {
  unsigned int __pyx_v_r_;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_r_); {
    __pyx_v_r_ = __Pyx_PyLong_As_unsigned_int(__pyx_arg_r_); if (unlikely((__pyx_v_r_ == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 803, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.sfColor.r.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_1r_2__set__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self), ((unsigned int)__pyx_v_r_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfColor_1r_2__set__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_r_) {
  int __pyx_r;

  /* "pysfml261.pyx":804
 * 	@r.setter
 * 	def r(self, unsigned int r_) -> None:
 * 		self.color.r = r_             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->color->r = __pyx_v_r_;

  /* "pysfml261.pyx":802
 * 		return self.color.r
 * 
 * 	@r.setter             # <<<<<<<<<<<<<<
 * 	def r(self, unsigned int r_) -> None:
 * 		self.color.r = r_
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":806
 * 		self.color.r = r_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def g(self) -> int:
 * 		return self.color.g
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfColor_1g_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_7sfColor_1g_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_1g___get__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfColor_1g___get__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":808
 * 	@property
 * 	def g(self) -> int:
 * 		return self.color.g             # <<<<<<<<<<<<<<
 * 
 * 	@g.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_self->color->g); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":806
 * 		self.color.r = r_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def g(self) -> int:
 * 		return self.color.g
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfColor.g.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":810
 * 		return self.color.g
 * 
 * 	@g.setter             # <<<<<<<<<<<<<<
 * 	def g(self, unsigned int g_) -> None:
 * 		self.color.g = g_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfColor_1g_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_g_); /*proto*/
static int __pyx_pw_9pysfml261_7sfColor_1g_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_g_) {
  unsigned int __pyx_v_g_;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_g_); {
    __pyx_v_g_ = __Pyx_PyLong_As_unsigned_int(__pyx_arg_g_); if (unlikely((__pyx_v_g_ == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 811, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.sfColor.g.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_1g_2__set__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self), ((unsigned int)__pyx_v_g_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfColor_1g_2__set__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_g_) {
  int __pyx_r;

  /* "pysfml261.pyx":812
 * 	@g.setter
 * 	def g(self, unsigned int g_) -> None:
 * 		self.color.g = g_             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->color->g = __pyx_v_g_;

  /* "pysfml261.pyx":810
 * 		return self.color.g
 * 
 * 	@g.setter             # <<<<<<<<<<<<<<
 * 	def g(self, unsigned int g_) -> None:
 * 		self.color.g = g_
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":814
 * 		self.color.g = g_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def b(self) -> int:
 * 		return self.color.b
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfColor_1b_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_7sfColor_1b_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_1b___get__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfColor_1b___get__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":816
 * 	@property
 * 	def b(self) -> int:
 * 		return self.color.b             # <<<<<<<<<<<<<<
 * 
 * 	@b.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_self->color->b); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 816, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":814
 * 		self.color.g = g_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def b(self) -> int:
 * 		return self.color.b
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfColor.b.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":818
 * 		return self.color.b
 * 
 * 	@b.setter             # <<<<<<<<<<<<<<
 * 	def b(self, unsigned int b_) -> None:
 * 		self.color.b = b_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfColor_1b_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_b_); /*proto*/
static int __pyx_pw_9pysfml261_7sfColor_1b_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_b_) {
  unsigned int __pyx_v_b_;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_b_); {
    __pyx_v_b_ = __Pyx_PyLong_As_unsigned_int(__pyx_arg_b_); if (unlikely((__pyx_v_b_ == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 819, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.sfColor.b.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_1b_2__set__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self), ((unsigned int)__pyx_v_b_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfColor_1b_2__set__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_b_) {
  int __pyx_r;

  /* "pysfml261.pyx":820
 * 	@b.setter
 * 	def b(self, unsigned int b_) -> None:
 * 		self.color.b = b_             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->color->b = __pyx_v_b_;

  /* "pysfml261.pyx":818
 * 		return self.color.b
 * 
 * 	@b.setter             # <<<<<<<<<<<<<<
 * 	def b(self, unsigned int b_) -> None:
 * 		self.color.b = b_
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":822
 * 		self.color.b = b_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def a(self) -> int:
 * 		return self.color.a
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfColor_1a_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_7sfColor_1a_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_1a___get__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfColor_1a___get__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":824
 * 	@property
 * 	def a(self) -> int:
 * 		return self.color.a             # <<<<<<<<<<<<<<
 * 
 * 	@a.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_self->color->a); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 824, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":822
 * 		self.color.b = b_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def a(self) -> int:
 * 		return self.color.a
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfColor.a.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":826
 * 		return self.color.a
 * 
 * 	@a.setter             # <<<<<<<<<<<<<<
 * 	def a(self, unsigned int a_) -> None:
 * 		self.color.a = a_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfColor_1a_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_a_); /*proto*/
static int __pyx_pw_9pysfml261_7sfColor_1a_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_a_) {
  unsigned int __pyx_v_a_;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_a_); {
    __pyx_v_a_ = __Pyx_PyLong_As_unsigned_int(__pyx_arg_a_); if (unlikely((__pyx_v_a_ == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 827, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.sfColor.a.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_1a_2__set__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self), ((unsigned int)__pyx_v_a_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfColor_1a_2__set__(struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, unsigned int __pyx_v_a_) {
  int __pyx_r;

  /* "pysfml261.pyx":828
 * 	@a.setter
 * 	def a(self, unsigned int a_) -> None:
 * 		self.color.a = a_             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->color->a = __pyx_v_a_;

  /* "pysfml261.pyx":826
 * 		return self.color.a
 * 
 * 	@a.setter             # <<<<<<<<<<<<<<
 * 	def a(self, unsigned int a_) -> None:
 * 		self.color.a = a_
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfColor_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfColor_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfColor_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfColor_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_4__reduce_cython__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfColor_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfColor.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfColor_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfColor_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfColor_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfColor_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfColor.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfColor_6__setstate_cython__(((struct __pyx_obj_9pysfml261_sfColor *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfColor_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfColor *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfColor.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":835
 * 	cdef Event* event
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.event = new Event()
 * 
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_7sfEvent_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_7sfEvent_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, __pyx_nargs); return -1; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return -1;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__cinit__", __pyx_kwds); return -1;}
  __pyx_r = __pyx_pf_9pysfml261_7sfEvent___cinit__(((struct __pyx_obj_9pysfml261_sfEvent *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_7sfEvent___cinit__(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self) {
  int __pyx_r;

  /* "pysfml261.pyx":836
 * 
 * 	def __cinit__(self):
 * 		self.event = new Event()             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->event = new sf::Event();

  /* "pysfml261.pyx":835
 * 	cdef Event* event
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.event = new Event()
 * 
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":838
 * 		self.event = new Event()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.event
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_7sfEvent_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_7sfEvent_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_7sfEvent_2__dealloc__(((struct __pyx_obj_9pysfml261_sfEvent *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_7sfEvent_2__dealloc__(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self) {

  /* "pysfml261.pyx":839
 * 
 * 	def __dealloc__(self):
 * 		del self.event             # <<<<<<<<<<<<<<
 * 
 * 	def get_type(self) -> int:
*/
  delete __pyx_v_self->event;

  /* "pysfml261.pyx":838
 * 		self.event = new Event()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.event
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":841
 * 		del self.event
 * 
 * 	def get_type(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.type
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfEvent_5get_type(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfEvent_5get_type = {"get_type", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_5get_type, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfEvent_5get_type(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_type (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_type", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_type", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfEvent_4get_type(((struct __pyx_obj_9pysfml261_sfEvent *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfEvent_4get_type(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_type", 0);

  /* "pysfml261.pyx":842
 * 
 * 	def get_type(self) -> int:
 * 		return self.event.type             # <<<<<<<<<<<<<<
 * 
 * 	def get_key_code(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_enum__sf_3a__3a_Event_3a__3a_EventType(__pyx_v_self->event->type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 842, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":841
 * 		del self.event
 * 
 * 	def get_type(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.type
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfEvent.get_type", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":844
 * 		return self.event.type
 * 
 * 	def get_key_code(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.key.code
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfEvent_7get_key_code(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfEvent_7get_key_code = {"get_key_code", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_7get_key_code, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfEvent_7get_key_code(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_key_code (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_key_code", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_key_code", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfEvent_6get_key_code(((struct __pyx_obj_9pysfml261_sfEvent *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfEvent_6get_key_code(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_key_code", 0);

  /* "pysfml261.pyx":845
 * 
 * 	def get_key_code(self) -> int:
 * 		return self.event.key.code             # <<<<<<<<<<<<<<
 * 
 * 	def get_text_unicode(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_enum__sf_3a__3a_Keyboard_3a__3a_Key(__pyx_v_self->event->key.code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 845, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":844
 * 		return self.event.type
 * 
 * 	def get_key_code(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.key.code
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfEvent.get_key_code", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":847
 * 		return self.event.key.code
 * 
 * 	def get_text_unicode(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.text.unicode
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfEvent_9get_text_unicode(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfEvent_9get_text_unicode = {"get_text_unicode", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_9get_text_unicode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfEvent_9get_text_unicode(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_text_unicode (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_text_unicode", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_text_unicode", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfEvent_8get_text_unicode(((struct __pyx_obj_9pysfml261_sfEvent *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfEvent_8get_text_unicode(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_text_unicode", 0);

  /* "pysfml261.pyx":848
 * 
 * 	def get_text_unicode(self) -> int:
 * 		return self.event.text.unicode             # <<<<<<<<<<<<<<
 * 
 * 	def get_mouse_button(self) -> int:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_self->event->text.unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 848, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":847
 * 		return self.event.key.code
 * 
 * 	def get_text_unicode(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.text.unicode
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfEvent.get_text_unicode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":850
 * 		return self.event.text.unicode
 * 
 * 	def get_mouse_button(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.mouseButton.button
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfEvent_11get_mouse_button(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfEvent_11get_mouse_button = {"get_mouse_button", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_11get_mouse_button, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfEvent_11get_mouse_button(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_mouse_button (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_mouse_button", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_mouse_button", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfEvent_10get_mouse_button(((struct __pyx_obj_9pysfml261_sfEvent *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfEvent_10get_mouse_button(struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_mouse_button", 0);

  /* "pysfml261.pyx":851
 * 
 * 	def get_mouse_button(self) -> int:
 * 		return self.event.mouseButton.button             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_enum__sf_3a__3a_Mouse_3a__3a_Button(__pyx_v_self->event->mouseButton.button); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 851, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":850
 * 		return self.event.text.unicode
 * 
 * 	def get_mouse_button(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.mouseButton.button
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfEvent.get_mouse_button", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfEvent_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfEvent_13__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfEvent_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfEvent_12__reduce_cython__(((struct __pyx_obj_9pysfml261_sfEvent *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfEvent_12__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfEvent.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfEvent_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfEvent_15__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfEvent_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfEvent.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfEvent_14__setstate_cython__(((struct __pyx_obj_9pysfml261_sfEvent *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfEvent_14__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfEvent.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":856
 * cdef class sfKeyboard:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_key_pressed(int key) -> bool:
 * 		return isKeyPressed(<Key>key)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10sfKeyboard_1is_key_pressed(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10sfKeyboard_1is_key_pressed = {"is_key_pressed", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10sfKeyboard_1is_key_pressed, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10sfKeyboard_1is_key_pressed(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_key;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_key_pressed (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_key,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 856, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 856, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "is_key_pressed", 0) < 0) __PYX_ERR(0, 856, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("is_key_pressed", 1, 1, 1, i); __PYX_ERR(0, 856, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 856, __pyx_L3_error)
    }
    __pyx_v_key = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_key == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 857, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_key_pressed", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 856, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfKeyboard.is_key_pressed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_10sfKeyboard_is_key_pressed(__pyx_v_key);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10sfKeyboard_is_key_pressed(int __pyx_v_key) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_key_pressed", 0);

  /* "pysfml261.pyx":858
 * 	@staticmethod
 * 	def is_key_pressed(int key) -> bool:
 * 		return isKeyPressed(<Key>key)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(sf::Keyboard::isKeyPressed(((enum sf::Keyboard::Key)__pyx_v_key))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":856
 * cdef class sfKeyboard:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_key_pressed(int key) -> bool:
 * 		return isKeyPressed(<Key>key)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfKeyboard.is_key_pressed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":860
 * 		return isKeyPressed(<Key>key)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def localize(int scancode) -> int:
 * 		return localize(<Scancode>scancode)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10sfKeyboard_3localize(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10sfKeyboard_3localize = {"localize", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10sfKeyboard_3localize, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10sfKeyboard_3localize(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_scancode;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("localize (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_scancode,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 860, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 860, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "localize", 0) < 0) __PYX_ERR(0, 860, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("localize", 1, 1, 1, i); __PYX_ERR(0, 860, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 860, __pyx_L3_error)
    }
    __pyx_v_scancode = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_scancode == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 861, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("localize", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 860, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfKeyboard.localize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_10sfKeyboard_2localize(__pyx_v_scancode);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10sfKeyboard_2localize(int __pyx_v_scancode) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("localize", 0);

  /* "pysfml261.pyx":862
 * 	@staticmethod
 * 	def localize(int scancode) -> int:
 * 		return localize(<Scancode>scancode)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_enum__sf_3a__3a_Keyboard_3a__3a_Key(sf::Keyboard::localize(((enum sf::Keyboard::Scancode)__pyx_v_scancode))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 862, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":860
 * 		return isKeyPressed(<Key>key)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def localize(int scancode) -> int:
 * 		return localize(<Scancode>scancode)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfKeyboard.localize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10sfKeyboard_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10sfKeyboard_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10sfKeyboard_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10sfKeyboard_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_10sfKeyboard_4__reduce_cython__(((struct __pyx_obj_9pysfml261_sfKeyboard *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10sfKeyboard_4__reduce_cython__(struct __pyx_obj_9pysfml261_sfKeyboard *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
*/
  __Pyx_INCREF(__pyx_mstate_global->__pyx_empty_tuple);
  __pyx_v_state = __pyx_mstate_global->__pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
*/
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
*/
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
*/
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict) != (0)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
*/
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
*/
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, None), state
*/
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, None), state
 *     else:
*/
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, state)
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_sfKeyboard); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self)))) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_mstate_global->__pyx_int_238750788) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, None), state
 *     else:
*/
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_sfKeyboard__set_state(self, __pyx_state)
*/
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_sfKeyboard); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self)))) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_mstate_global->__pyx_int_238750788) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pysfml261.sfKeyboard.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_sfKeyboard__set_state(self, __pyx_state)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_10sfKeyboard_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_10sfKeyboard_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10sfKeyboard_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_10sfKeyboard_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 16, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 16, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 16, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 16, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 16, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfKeyboard.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_10sfKeyboard_6__setstate_cython__(((struct __pyx_obj_9pysfml261_sfKeyboard *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_10sfKeyboard_6__setstate_cython__(struct __pyx_obj_9pysfml261_sfKeyboard *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_sfKeyboard__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
*/
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9pysfml261___pyx_unpickle_sfKeyboard__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_sfKeyboard__set_state(self, __pyx_state)
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfKeyboard.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":915
 * 	cdef FloatRect* rect
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float rectLeft = 0,
 * 		float rectTop = 0,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfFloatRect_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_11sfFloatRect_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_rectLeft;
  float __pyx_v_rectTop;
  float __pyx_v_rectWidth;
  float __pyx_v_rectHeight;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_rectLeft,&__pyx_mstate_global->__pyx_n_u_rectTop,&__pyx_mstate_global->__pyx_n_u_rectWidth,&__pyx_mstate_global->__pyx_n_u_rectHeight,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 915, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 915, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_rectLeft = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_rectLeft == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 916, __pyx_L3_error)
    } else {
      __pyx_v_rectLeft = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_rectTop = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_rectTop == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 917, __pyx_L3_error)
    } else {
      __pyx_v_rectTop = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_rectWidth = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_rectWidth == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 918, __pyx_L3_error)
    } else {
      __pyx_v_rectWidth = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_rectHeight = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_rectHeight == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 919, __pyx_L3_error)
    } else {
      __pyx_v_rectHeight = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 915, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFloatRect.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect___cinit__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), __pyx_v_rectLeft, __pyx_v_rectTop, __pyx_v_rectWidth, __pyx_v_rectHeight);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfFloatRect___cinit__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, float __pyx_v_rectLeft, float __pyx_v_rectTop, float __pyx_v_rectWidth, float __pyx_v_rectHeight) {
  int __pyx_r;

  /* "pysfml261.pyx":921
 * 		float rectHeight = 0):
 * 
 * 		self.rect = new FloatRect(rectLeft, rectTop, rectWidth, rectHeight)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->rect = new sf::FloatRect(__pyx_v_rectLeft, __pyx_v_rectTop, __pyx_v_rectWidth, __pyx_v_rectHeight);

  /* "pysfml261.pyx":915
 * 	cdef FloatRect* rect
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float rectLeft = 0,
 * 		float rectTop = 0,
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":923
 * 		self.rect = new FloatRect(rectLeft, rectTop, rectWidth, rectHeight)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.rect
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_11sfFloatRect_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_11sfFloatRect_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_11sfFloatRect_2__dealloc__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_11sfFloatRect_2__dealloc__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {

  /* "pysfml261.pyx":924
 * 
 * 	def __dealloc__(self):
 * 		del self.rect             # <<<<<<<<<<<<<<
 * 
 * 	def contains(self,
*/
  delete __pyx_v_self->rect;

  /* "pysfml261.pyx":923
 * 		self.rect = new FloatRect(rectLeft, rectTop, rectWidth, rectHeight)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.rect
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":926
 * 		del self.rect
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> bool:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_5contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_5contains = {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_5contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_5contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("contains (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 926, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 926, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 926, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "contains", 0) < 0) __PYX_ERR(0, 926, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 926, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 926, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 927, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 928, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("contains", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 926, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFloatRect.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_4contains(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_4contains(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, float __pyx_v_x, float __pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("contains", 0);

  /* "pysfml261.pyx":929
 * 		float x = 0,
 * 		float y = 0) -> bool:
 * 		return self.rect.contains(x, y)             # <<<<<<<<<<<<<<
 * 
 * 	def intersects(self, sfFloatRect rect) -> bool:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->rect->contains(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":926
 * 		del self.rect
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> bool:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":931
 * 		return self.rect.contains(x, y)
 * 
 * 	def intersects(self, sfFloatRect rect) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.rect.intersects(rect.rect[0])
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_7intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_7intersects = {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_7intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_7intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("intersects (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_rect,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 931, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 931, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "intersects", 0) < 0) __PYX_ERR(0, 931, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("intersects", 1, 1, 1, i); __PYX_ERR(0, 931, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 931, __pyx_L3_error)
    }
    __pyx_v_rect = ((struct __pyx_obj_9pysfml261_sfFloatRect *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("intersects", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 931, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFloatRect.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, 1, "rect", 0))) __PYX_ERR(0, 931, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_6intersects(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), __pyx_v_rect);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_6intersects(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("intersects", 0);

  /* "pysfml261.pyx":932
 * 
 * 	def intersects(self, sfFloatRect rect) -> bool:
 * 		return self.rect.intersects(rect.rect[0])             # <<<<<<<<<<<<<<
 * 
 * 	def get_position(self) -> tuple[float, float]:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->rect->intersects((__pyx_v_rect->rect[0]))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":931
 * 		return self.rect.contains(x, y)
 * 
 * 	def intersects(self, sfFloatRect rect) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.rect.intersects(rect.rect[0])
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":934
 * 		return self.rect.intersects(rect.rect[0])
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		return (pos.x, pos.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_9get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_9get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_9get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_9get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_8get_position(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_8get_position(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":935
 * 
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = self.rect.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y)
 * 
*/
  __pyx_v_pos = __pyx_v_self->rect->getPosition();

  /* "pysfml261.pyx":936
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		return (pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 	def get_center(self) -> tuple[float, float]:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 936, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 936, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":934
 * 		return self.rect.intersects(rect.rect[0])
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		return (pos.x, pos.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":938
 * 		return (pos.x, pos.y)
 * 
 * 	def get_center(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		cdef Vector2f size = self.rect.getSize()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_11get_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_11get_center = {"get_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_11get_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_11get_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_center", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_center", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_10get_center(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_10get_center(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  sf::Vector2f __pyx_v_size;
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_center", 0);

  /* "pysfml261.pyx":939
 * 
 * 	def get_center(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = self.rect.getPosition()             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = self.rect.getSize()
 * 		cdef float x, y, k = <float>.5
*/
  __pyx_v_pos = __pyx_v_self->rect->getPosition();

  /* "pysfml261.pyx":940
 * 	def get_center(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		cdef Vector2f size = self.rect.getSize()             # <<<<<<<<<<<<<<
 * 		cdef float x, y, k = <float>.5
 * 		x = pos.x + size.x * k
*/
  __pyx_v_size = __pyx_v_self->rect->getSize();

  /* "pysfml261.pyx":941
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		cdef Vector2f size = self.rect.getSize()
 * 		cdef float x, y, k = <float>.5             # <<<<<<<<<<<<<<
 * 		x = pos.x + size.x * k
 * 		y = pos.y + size.y * k
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":942
 * 		cdef Vector2f size = self.rect.getSize()
 * 		cdef float x, y, k = <float>.5
 * 		x = pos.x + size.x * k             # <<<<<<<<<<<<<<
 * 		y = pos.y + size.y * k
 * 		return (x, y)
*/
  __pyx_v_x = (__pyx_v_pos.x + (__pyx_v_size.x * __pyx_v_k));

  /* "pysfml261.pyx":943
 * 		cdef float x, y, k = <float>.5
 * 		x = pos.x + size.x * k
 * 		y = pos.y + size.y * k             # <<<<<<<<<<<<<<
 * 		return (x, y)
 * 
*/
  __pyx_v_y = (__pyx_v_pos.y + (__pyx_v_size.y * __pyx_v_k));

  /* "pysfml261.pyx":944
 * 		x = pos.x + size.x * k
 * 		y = pos.y + size.y * k
 * 		return (x, y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_center(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 944, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 944, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":938
 * 		return (pos.x, pos.y)
 * 
 * 	def get_center(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		cdef Vector2f size = self.rect.getSize()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.get_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":946
 * 		return (x, y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float x,
 * 		float y) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_13set_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_13set_center = {"set_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_13set_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_13set_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 946, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 946, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 946, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_center", 0) < 0) __PYX_ERR(0, 946, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_center", 1, 2, 2, i); __PYX_ERR(0, 946, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 946, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 946, __pyx_L3_error)
    }
    __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 948, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_center", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 946, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFloatRect.set_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_12set_center(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_12set_center(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, float __pyx_v_x, float __pyx_v_y) {
  sf::Vector2f __pyx_v_size;
  float __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_center", 0);

  /* "pysfml261.pyx":949
 * 		float x,
 * 		float y) -> None:
 * 		cdef Vector2f size = self.rect.getSize()             # <<<<<<<<<<<<<<
 * 		cdef float k = <float>.5
 * 		self.rect.top = y - size.y * k
*/
  __pyx_v_size = __pyx_v_self->rect->getSize();

  /* "pysfml261.pyx":950
 * 		float y) -> None:
 * 		cdef Vector2f size = self.rect.getSize()
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		self.rect.top = y - size.y * k
 * 		self.rect.left = x - size.x * k
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":951
 * 		cdef Vector2f size = self.rect.getSize()
 * 		cdef float k = <float>.5
 * 		self.rect.top = y - size.y * k             # <<<<<<<<<<<<<<
 * 		self.rect.left = x - size.x * k
 * 
*/
  __pyx_v_self->rect->top = (__pyx_v_y - (__pyx_v_size.y * __pyx_v_k));

  /* "pysfml261.pyx":952
 * 		cdef float k = <float>.5
 * 		self.rect.top = y - size.y * k
 * 		self.rect.left = x - size.x * k             # <<<<<<<<<<<<<<
 * 
 * 	def get_size(self) -> tuple[float, float]:
*/
  __pyx_v_self->rect->left = (__pyx_v_x - (__pyx_v_size.x * __pyx_v_k));

  /* "pysfml261.pyx":946
 * 		return (x, y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float x,
 * 		float y) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":954
 * 		self.rect.left = x - size.x * k
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = self.rect.getSize()
 * 		return (size.x, size.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_15get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_15get_size = {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_15get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_15get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_size", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_size", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_14get_size(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_14get_size(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {
  sf::Vector2f __pyx_v_size;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_size", 0);

  /* "pysfml261.pyx":955
 * 
 * 	def get_size(self) -> tuple[float, float]:
 * 		cdef Vector2f size = self.rect.getSize()             # <<<<<<<<<<<<<<
 * 		return (size.x, size.y)
 * 
*/
  __pyx_v_size = __pyx_v_self->rect->getSize();

  /* "pysfml261.pyx":956
 * 	def get_size(self) -> tuple[float, float]:
 * 		cdef Vector2f size = self.rect.getSize()
 * 		return (size.x, size.y)             # <<<<<<<<<<<<<<
 * 
 * 	def move(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_size.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_size.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 956, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 956, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":954
 * 		self.rect.left = x - size.x * k
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = self.rect.getSize()
 * 		return (size.x, size.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.get_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":958
 * 		return (size.x, size.y)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_17move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_17move = {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_17move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_17move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_dx;
  float __pyx_v_dy;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_dx,&__pyx_mstate_global->__pyx_n_u_dy,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 958, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 958, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 958, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "move", 0) < 0) __PYX_ERR(0, 958, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 958, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 958, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_dx = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_dx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 959, __pyx_L3_error)
    } else {
      __pyx_v_dx = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_dy = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_dy == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 960, __pyx_L3_error)
    } else {
      __pyx_v_dy = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 958, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFloatRect.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_16move(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), __pyx_v_dx, __pyx_v_dy);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_16move(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move", 0);

  /* "pysfml261.pyx":961
 * 		float dx = 0,
 * 		float dy = 0) -> None:
 * 		cdef Vector2f pos = self.rect.getPosition()             # <<<<<<<<<<<<<<
 * 		self.rect.top = pos.y + dy
 * 		self.rect.left = pos.x + dx
*/
  __pyx_v_pos = __pyx_v_self->rect->getPosition();

  /* "pysfml261.pyx":962
 * 		float dy = 0) -> None:
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		self.rect.top = pos.y + dy             # <<<<<<<<<<<<<<
 * 		self.rect.left = pos.x + dx
 * 
*/
  __pyx_v_self->rect->top = (__pyx_v_pos.y + __pyx_v_dy);

  /* "pysfml261.pyx":963
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		self.rect.top = pos.y + dy
 * 		self.rect.left = pos.x + dx             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->rect->left = (__pyx_v_pos.x + __pyx_v_dx);

  /* "pysfml261.pyx":958
 * 		return (size.x, size.y)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":965
 * 		self.rect.left = pos.x + dx
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def left(self) -> float:
 * 		return self.rect.left
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_4left_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_4left_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_4left___get__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_4left___get__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":967
 * 	@property
 * 	def left(self) -> float:
 * 		return self.rect.left             # <<<<<<<<<<<<<<
 * 
 * 	@left.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rect->left); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 967, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":965
 * 		self.rect.left = pos.x + dx
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def left(self) -> float:
 * 		return self.rect.left
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.left.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":969
 * 		return self.rect.left
 * 
 * 	@left.setter             # <<<<<<<<<<<<<<
 * 	def left(self, left_) -> None:
 * 		self.rect.left = left_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfFloatRect_4left_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_left_); /*proto*/
static int __pyx_pw_9pysfml261_11sfFloatRect_4left_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_left_) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_4left_2__set__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), ((PyObject *)__pyx_v_left_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfFloatRect_4left_2__set__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, PyObject *__pyx_v_left_) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":971
 * 	@left.setter
 * 	def left(self, left_) -> None:
 * 		self.rect.left = left_             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_t_1 = __Pyx_PyFloat_AsFloat(__pyx_v_left_); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 971, __pyx_L1_error)
  __pyx_v_self->rect->left = __pyx_t_1;

  /* "pysfml261.pyx":969
 * 		return self.rect.left
 * 
 * 	@left.setter             # <<<<<<<<<<<<<<
 * 	def left(self, left_) -> None:
 * 		self.rect.left = left_
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfFloatRect.left.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pysfml261.pyx":973
 * 		self.rect.left = left_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def top(self) -> float:
 * 		return self.rect.top
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_3top_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_3top_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_3top___get__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_3top___get__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":975
 * 	@property
 * 	def top(self) -> float:
 * 		return self.rect.top             # <<<<<<<<<<<<<<
 * 
 * 	@top.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rect->top); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 975, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":973
 * 		self.rect.left = left_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def top(self) -> float:
 * 		return self.rect.top
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.top.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":977
 * 		return self.rect.top
 * 
 * 	@top.setter             # <<<<<<<<<<<<<<
 * 	def top(self, top_) -> None:
 * 		self.rect.top = top_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfFloatRect_3top_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_top_); /*proto*/
static int __pyx_pw_9pysfml261_11sfFloatRect_3top_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_top_) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_3top_2__set__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), ((PyObject *)__pyx_v_top_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfFloatRect_3top_2__set__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, PyObject *__pyx_v_top_) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":979
 * 	@top.setter
 * 	def top(self, top_) -> None:
 * 		self.rect.top = top_             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_t_1 = __Pyx_PyFloat_AsFloat(__pyx_v_top_); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 979, __pyx_L1_error)
  __pyx_v_self->rect->top = __pyx_t_1;

  /* "pysfml261.pyx":977
 * 		return self.rect.top
 * 
 * 	@top.setter             # <<<<<<<<<<<<<<
 * 	def top(self, top_) -> None:
 * 		self.rect.top = top_
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfFloatRect.top.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pysfml261.pyx":981
 * 		self.rect.top = top_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def width(self) -> float:
 * 		return self.rect.width
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_5width_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_5width___get__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_5width___get__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":983
 * 	@property
 * 	def width(self) -> float:
 * 		return self.rect.width             # <<<<<<<<<<<<<<
 * 
 * 	@width.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rect->width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":981
 * 		self.rect.top = top_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def width(self) -> float:
 * 		return self.rect.width
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":985
 * 		return self.rect.width
 * 
 * 	@width.setter             # <<<<<<<<<<<<<<
 * 	def width(self, width_) -> None:
 * 		self.rect.width = width_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfFloatRect_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_width_); /*proto*/
static int __pyx_pw_9pysfml261_11sfFloatRect_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_width_) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_5width_2__set__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), ((PyObject *)__pyx_v_width_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfFloatRect_5width_2__set__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, PyObject *__pyx_v_width_) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":987
 * 	@width.setter
 * 	def width(self, width_) -> None:
 * 		self.rect.width = width_             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_t_1 = __Pyx_PyFloat_AsFloat(__pyx_v_width_); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L1_error)
  __pyx_v_self->rect->width = __pyx_t_1;

  /* "pysfml261.pyx":985
 * 		return self.rect.width
 * 
 * 	@width.setter             # <<<<<<<<<<<<<<
 * 	def width(self, width_) -> None:
 * 		self.rect.width = width_
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfFloatRect.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pysfml261.pyx":989
 * 		self.rect.width = width_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def height(self) -> float:
 * 		return self.rect.height
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_6height_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_6height___get__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_6height___get__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":991
 * 	@property
 * 	def height(self) -> float:
 * 		return self.rect.height             # <<<<<<<<<<<<<<
 * 
 * 	@height.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rect->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":989
 * 		self.rect.width = width_
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def height(self) -> float:
 * 		return self.rect.height
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfFloatRect.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":993
 * 		return self.rect.height
 * 
 * 	@height.setter             # <<<<<<<<<<<<<<
 * 	def height(self, height_) -> None:
 * 		self.rect.height = height_
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_11sfFloatRect_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_height_); /*proto*/
static int __pyx_pw_9pysfml261_11sfFloatRect_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_height_) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_6height_2__set__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), ((PyObject *)__pyx_v_height_));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_11sfFloatRect_6height_2__set__(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, PyObject *__pyx_v_height_) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":995
 * 	@height.setter
 * 	def height(self, height_) -> None:
 * 		self.rect.height = height_             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_t_1 = __Pyx_PyFloat_AsFloat(__pyx_v_height_); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 995, __pyx_L1_error)
  __pyx_v_self->rect->height = __pyx_t_1;

  /* "pysfml261.pyx":993
 * 		return self.rect.height
 * 
 * 	@height.setter             # <<<<<<<<<<<<<<
 * 	def height(self, height_) -> None:
 * 		self.rect.height = height_
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfFloatRect.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_19__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_19__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_19__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_19__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_18__reduce_cython__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfFloatRect.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_21__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_11sfFloatRect_21__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_21__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_11sfFloatRect_21__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFloatRect.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_11sfFloatRect_20__setstate_cython__(((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_11sfFloatRect_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfFloatRect.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1002
 * 	cdef Font* font
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.font = new Font()
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_6sfFont_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_6sfFont_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_filename,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1002, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1002, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 1002, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 1002, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1002, __pyx_L3_error)
    }
    __pyx_v_filename = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1002, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFont.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_filename), (&PyUnicode_Type), 1, "filename", 1))) __PYX_ERR(0, 1002, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_6sfFont___cinit__(((struct __pyx_obj_9pysfml261_sfFont *)__pyx_v_self), __pyx_v_filename);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_6sfFont___cinit__(struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self, PyObject *__pyx_v_filename) {
  std::string __pyx_v_path;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  PyObject *__pyx_t_9[3];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pysfml261.pyx":1003
 * 
 * 	def __cinit__(self, str filename):
 * 		cdef string path = _text(filename).encode('utf-8')             # <<<<<<<<<<<<<<
 * 		self.font = new Font()
 * 		if not self.font.loadFromFile(path):
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1003, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_convert_string_from_py_6libcpp_6string_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_path = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "pysfml261.pyx":1004
 * 	def __cinit__(self, str filename):
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.font = new Font()             # <<<<<<<<<<<<<<
 * 		if not self.font.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
*/
  __pyx_v_self->font = new sf::Font();

  /* "pysfml261.pyx":1005
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.font = new Font()
 * 		if not self.font.loadFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load font from {0}!'.format(filename))
*/
  __pyx_t_4 = (!__pyx_v_self->font->loadFromFile(__pyx_v_path));
  if (__pyx_t_4) {

    /* "pysfml261.pyx":1006
 * 		self.font = new Font()
 * 		if not self.font.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load font from {0}!'.format(filename))
 * 			else:
*/
    __pyx_t_4 = (PY_MAJOR_VERSION < 3);
    if (unlikely(__pyx_t_4)) {

      /* "pysfml261.pyx":1007
 * 		if not self.font.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load font from {0}!'.format(filename))             # <<<<<<<<<<<<<<
 * 			else:
 * 				raise RuntimeError(f'Failed to load font {filename}!')
*/
      __pyx_t_1 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_5 = __pyx_builtin_RuntimeError; 
      __pyx_t_7 = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_font_from_0;
      __Pyx_INCREF(__pyx_t_7);
      __pyx_t_8 = 0;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_filename};
        __pyx_t_6 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_format, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1007, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
      }
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_6};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1007, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 1007, __pyx_L1_error)

      /* "pysfml261.pyx":1006
 * 		self.font = new Font()
 * 		if not self.font.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load font from {0}!'.format(filename))
 * 			else:
*/
    }

    /* "pysfml261.pyx":1009
 * 				raise RuntimeError('Failed to load font from {0}!'.format(filename))
 * 			else:
 * 				raise RuntimeError(f'Failed to load font {filename}!')             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
    /*else*/ {
      __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_6 = __pyx_builtin_RuntimeError; 
      __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1009, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9[0] = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_font;
      __pyx_t_9[1] = __pyx_t_1;
      __pyx_t_9[2] = __pyx_mstate_global->__pyx_kp_u_;
      __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_9, 3, 20 + __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1) + 1, 127 | __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1));
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1009, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1009, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 1009, __pyx_L1_error)
    }

    /* "pysfml261.pyx":1005
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.font = new Font()
 * 		if not self.font.loadFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load font from {0}!'.format(filename))
*/
  }

  /* "pysfml261.pyx":1002
 * 	cdef Font* font
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.font = new Font()
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfFont.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1011
 * 				raise RuntimeError(f'Failed to load font {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.font is not NULL:
 * 			del self.font
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_6sfFont_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_6sfFont_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_6sfFont_2__dealloc__(((struct __pyx_obj_9pysfml261_sfFont *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_6sfFont_2__dealloc__(struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self) {
  int __pyx_t_1;

  /* "pysfml261.pyx":1012
 * 
 * 	def __dealloc__(self):
 * 		if self.font is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.font
 * 
*/
  __pyx_t_1 = (__pyx_v_self->font != NULL);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1013
 * 	def __dealloc__(self):
 * 		if self.font is not NULL:
 * 			del self.font             # <<<<<<<<<<<<<<
 * 
 * 	def set_smooth(self, bint smooth) -> None:
*/
    delete __pyx_v_self->font;

    /* "pysfml261.pyx":1012
 * 
 * 	def __dealloc__(self):
 * 		if self.font is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.font
 * 
*/
  }

  /* "pysfml261.pyx":1011
 * 				raise RuntimeError(f'Failed to load font {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.font is not NULL:
 * 			del self.font
*/

  /* function exit code */
}

/* "pysfml261.pyx":1015
 * 			del self.font
 * 
 * 	def set_smooth(self, bint smooth) -> None:             # <<<<<<<<<<<<<<
 * 		self.font.setSmooth(smooth)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfFont_5set_smooth(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfFont_5set_smooth = {"set_smooth", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfFont_5set_smooth, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfFont_5set_smooth(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_smooth;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_smooth (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_smooth,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1015, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1015, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_smooth", 0) < 0) __PYX_ERR(0, 1015, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_smooth", 1, 1, 1, i); __PYX_ERR(0, 1015, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1015, __pyx_L3_error)
    }
    __pyx_v_smooth = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_smooth == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1015, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_smooth", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1015, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFont.set_smooth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfFont_4set_smooth(((struct __pyx_obj_9pysfml261_sfFont *)__pyx_v_self), __pyx_v_smooth);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfFont_4set_smooth(struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self, int __pyx_v_smooth) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_smooth", 0);

  /* "pysfml261.pyx":1016
 * 
 * 	def set_smooth(self, bint smooth) -> None:
 * 		self.font.setSmooth(smooth)             # <<<<<<<<<<<<<<
 * 
 * 	def is_smooth(self) -> bool:
*/
  __pyx_v_self->font->setSmooth(__pyx_v_smooth);

  /* "pysfml261.pyx":1015
 * 			del self.font
 * 
 * 	def set_smooth(self, bint smooth) -> None:             # <<<<<<<<<<<<<<
 * 		self.font.setSmooth(smooth)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1018
 * 		self.font.setSmooth(smooth)
 * 
 * 	def is_smooth(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.font.isSmooth()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfFont_7is_smooth(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfFont_7is_smooth = {"is_smooth", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfFont_7is_smooth, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfFont_7is_smooth(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_smooth (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("is_smooth", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("is_smooth", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfFont_6is_smooth(((struct __pyx_obj_9pysfml261_sfFont *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfFont_6is_smooth(struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_smooth", 0);

  /* "pysfml261.pyx":1019
 * 
 * 	def is_smooth(self) -> bool:
 * 		return self.font.isSmooth()             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->font->isSmooth()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1019, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1018
 * 		self.font.setSmooth(smooth)
 * 
 * 	def is_smooth(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.font.isSmooth()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfFont.is_smooth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfFont_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfFont_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfFont_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfFont_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfFont_8__reduce_cython__(((struct __pyx_obj_9pysfml261_sfFont *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfFont_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfFont.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfFont_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfFont_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfFont_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfFont_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfFont.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfFont_10__setstate_cython__(((struct __pyx_obj_9pysfml261_sfFont *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfFont_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfFont *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfFont.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1029
 * 	cdef String* txt
 * 
 * 	def __cinit__(self, str txt_):             # <<<<<<<<<<<<<<
 * 		self.txt = new String(_text(txt_).encode('utf-8'))
 * 
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8sfString_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_8sfString_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_txt_ = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_txt,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1029, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1029, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 1029, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 1029, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1029, __pyx_L3_error)
    }
    __pyx_v_txt_ = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1029, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfString.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_txt_), (&PyUnicode_Type), 1, "txt_", 1))) __PYX_ERR(0, 1029, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfString___cinit__(((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_self), __pyx_v_txt_);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8sfString___cinit__(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self, PyObject *__pyx_v_txt_) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char const *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pysfml261.pyx":1030
 * 
 * 	def __cinit__(self, str txt_):
 * 		self.txt = new String(_text(txt_).encode('utf-8'))             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_txt_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1030, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1030, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1030, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyBytes_AsString(__pyx_t_2); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(0, 1030, __pyx_L1_error)
  __pyx_v_self->txt = new sf::String(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1029
 * 	cdef String* txt
 * 
 * 	def __cinit__(self, str txt_):             # <<<<<<<<<<<<<<
 * 		self.txt = new String(_text(txt_).encode('utf-8'))
 * 
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.sfString.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1032
 * 		self.txt = new String(_text(txt_).encode('utf-8'))
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.txt
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_8sfString_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_8sfString_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_8sfString_2__dealloc__(((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_8sfString_2__dealloc__(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self) {

  /* "pysfml261.pyx":1033
 * 
 * 	def __dealloc__(self):
 * 		del self.txt             # <<<<<<<<<<<<<<
 * 
 * 	def clear(self) -> None:
*/
  delete __pyx_v_self->txt;

  /* "pysfml261.pyx":1032
 * 		self.txt = new String(_text(txt_).encode('utf-8'))
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.txt
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":1035
 * 		del self.txt
 * 
 * 	def clear(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.txt.clear()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfString_5clear(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfString_5clear = {"clear", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_5clear, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfString_5clear(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("clear", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("clear", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfString_4clear(((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfString_4clear(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear", 0);

  /* "pysfml261.pyx":1036
 * 
 * 	def clear(self) -> None:
 * 		self.txt.clear()             # <<<<<<<<<<<<<<
 * 
 * 	def is_empty(self) -> bool:
*/
  __pyx_v_self->txt->clear();

  /* "pysfml261.pyx":1035
 * 		del self.txt
 * 
 * 	def clear(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.txt.clear()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1038
 * 		self.txt.clear()
 * 
 * 	def is_empty(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.txt.isEmpty()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfString_7is_empty(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfString_7is_empty = {"is_empty", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_7is_empty, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfString_7is_empty(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_empty (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("is_empty", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("is_empty", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfString_6is_empty(((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfString_6is_empty(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_empty", 0);

  /* "pysfml261.pyx":1039
 * 
 * 	def is_empty(self) -> bool:
 * 		return self.txt.isEmpty()             # <<<<<<<<<<<<<<
 * 
 * 	def as_pystring(self) -> str:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->txt->isEmpty()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1038
 * 		self.txt.clear()
 * 
 * 	def is_empty(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.txt.isEmpty()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfString.is_empty", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1041
 * 		return self.txt.isEmpty()
 * 
 * 	def as_pystring(self) -> str:             # <<<<<<<<<<<<<<
 * 		return self.txt.toAnsiString().c_str().decode('utf-8')
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfString_9as_pystring(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfString_9as_pystring = {"as_pystring", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_9as_pystring, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfString_9as_pystring(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_pystring (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("as_pystring", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("as_pystring", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfString_8as_pystring(((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfString_8as_pystring(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("as_pystring", 0);

  /* "pysfml261.pyx":1042
 * 
 * 	def as_pystring(self) -> str:
 * 		return self.txt.toAnsiString().c_str().decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->txt->toAnsiString().c_str();
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1042, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1042, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1041
 * 		return self.txt.isEmpty()
 * 
 * 	def as_pystring(self) -> str:             # <<<<<<<<<<<<<<
 * 		return self.txt.toAnsiString().c_str().decode('utf-8')
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfString.as_pystring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1044
 * 		return self.txt.toAnsiString().c_str().decode('utf-8')
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_pystring(str pystring) -> sfString:
 * 		if pystring in sfString.RESULTS:
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfString *__pyx_pw_9pysfml261_8sfString_11from_pystring(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfString_11from_pystring = {"from_pystring", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_11from_pystring, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfString *__pyx_pw_9pysfml261_8sfString_11from_pystring(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_pystring = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_sfString *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_pystring (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pystring,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1044, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1044, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "from_pystring", 0) < 0) __PYX_ERR(0, 1044, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("from_pystring", 1, 1, 1, i); __PYX_ERR(0, 1044, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1044, __pyx_L3_error)
    }
    __pyx_v_pystring = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_pystring", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1044, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfString.from_pystring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pystring), (&PyUnicode_Type), 1, "pystring", 1))) __PYX_ERR(0, 1045, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfString_10from_pystring(__pyx_v_pystring);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfString *__pyx_pf_9pysfml261_8sfString_10from_pystring(PyObject *__pyx_v_pystring) {
  PyObject *__pyx_v_items = NULL;
  PyObject *__pyx_v_to_remove = NULL;
  struct __pyx_obj_9pysfml261_sfString *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_pystring", 0);

  /* "pysfml261.pyx":1046
 * 	@staticmethod
 * 	def from_pystring(str pystring) -> sfString:
 * 		if pystring in sfString.RESULTS:             # <<<<<<<<<<<<<<
 * 			return sfString.RESULTS[pystring]
 * 		else:
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1046, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_v_pystring, __pyx_t_1, Py_EQ)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1046, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pysfml261.pyx":1047
 * 	def from_pystring(str pystring) -> sfString:
 * 		if pystring in sfString.RESULTS:
 * 			return sfString.RESULTS[pystring]             # <<<<<<<<<<<<<<
 * 		else:
 * 			if len(sfString.RESULTS) < sfString.CACHE_SIZE:
*/
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_t_1, __pyx_v_pystring); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_mstate_global->__pyx_ptype_9pysfml261_sfString))))) __PYX_ERR(0, 1047, __pyx_L1_error)
    __pyx_r = ((struct __pyx_obj_9pysfml261_sfString *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "pysfml261.pyx":1046
 * 	@staticmethod
 * 	def from_pystring(str pystring) -> sfString:
 * 		if pystring in sfString.RESULTS:             # <<<<<<<<<<<<<<
 * 			return sfString.RESULTS[pystring]
 * 		else:
*/
  }

  /* "pysfml261.pyx":1049
 * 			return sfString.RESULTS[pystring]
 * 		else:
 * 			if len(sfString.RESULTS) < sfString.CACHE_SIZE:             # <<<<<<<<<<<<<<
 * 				sfString.RESULTS[pystring] = sfString(pystring)
 * 			else:
*/
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyLong_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_CACHE_SIZE); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_t_1, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_2) {

      /* "pysfml261.pyx":1050
 * 		else:
 * 			if len(sfString.RESULTS) < sfString.CACHE_SIZE:
 * 				sfString.RESULTS[pystring] = sfString(pystring)             # <<<<<<<<<<<<<<
 * 			else:
 * 				items = list(sfString.RESULTS.items())
*/
      __pyx_t_1 = NULL;
      __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString);
      __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString); 
      __pyx_t_6 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_v_pystring};
        __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1050, __pyx_L1_error)
        __Pyx_GOTREF((PyObject *)__pyx_t_5);
      }
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1050, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (unlikely((PyObject_SetItem(__pyx_t_3, __pyx_v_pystring, ((PyObject *)__pyx_t_5)) < 0))) __PYX_ERR(0, 1050, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF((PyObject *)__pyx_t_5); __pyx_t_5 = 0;

      /* "pysfml261.pyx":1049
 * 			return sfString.RESULTS[pystring]
 * 		else:
 * 			if len(sfString.RESULTS) < sfString.CACHE_SIZE:             # <<<<<<<<<<<<<<
 * 				sfString.RESULTS[pystring] = sfString(pystring)
 * 			else:
*/
      goto __pyx_L4;
    }

    /* "pysfml261.pyx":1052
 * 				sfString.RESULTS[pystring] = sfString(pystring)
 * 			else:
 * 				items = list(sfString.RESULTS.items())             # <<<<<<<<<<<<<<
 * 				to_remove = int(sfString.CACHE_SIZE * .2)
 * 				sfString.RESULTS = dict(items[:-to_remove])
*/
    /*else*/ {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1052, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1;
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_6 = 0;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
        __pyx_t_5 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_items, __pyx_callargs+__pyx_t_6, (1-__pyx_t_6) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1052, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
      }
      __pyx_t_1 = __Pyx_PySequence_ListKeepNew(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1052, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_items = ((PyObject*)__pyx_t_1);
      __pyx_t_1 = 0;

      /* "pysfml261.pyx":1053
 * 			else:
 * 				items = list(sfString.RESULTS.items())
 * 				to_remove = int(sfString.CACHE_SIZE * .2)             # <<<<<<<<<<<<<<
 * 				sfString.RESULTS = dict(items[:-to_remove])
 * 				sfString.RESULTS[pystring] = sfString(pystring)
*/
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_CACHE_SIZE); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1053, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = PyNumber_Multiply(__pyx_t_1, __pyx_mstate_global->__pyx_float__2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1053, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1053, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_to_remove = ((PyObject*)__pyx_t_1);
      __pyx_t_1 = 0;

      /* "pysfml261.pyx":1054
 * 				items = list(sfString.RESULTS.items())
 * 				to_remove = int(sfString.CACHE_SIZE * .2)
 * 				sfString.RESULTS = dict(items[:-to_remove])             # <<<<<<<<<<<<<<
 * 				sfString.RESULTS[pystring] = sfString(pystring)
 * 			return sfString.RESULTS[pystring]
*/
      __pyx_t_5 = NULL;
      __Pyx_INCREF((PyObject *)(&PyDict_Type));
      __pyx_t_3 = ((PyObject *)(&PyDict_Type)); 
      __pyx_t_7 = PyNumber_Negative(__pyx_v_to_remove); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1054, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_2 = (__pyx_t_7 == Py_None);
      if (__pyx_t_2) {
        __pyx_t_4 = PY_SSIZE_T_MAX;
      } else {
        __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_t_7); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1054, __pyx_L1_error)
        __pyx_t_4 = __pyx_t_8;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyList_GetSlice(__pyx_v_items, 0, __pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1054, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1054, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
      }
      if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS, __pyx_t_1) < 0) __PYX_ERR(0, 1054, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "pysfml261.pyx":1055
 * 				to_remove = int(sfString.CACHE_SIZE * .2)
 * 				sfString.RESULTS = dict(items[:-to_remove])
 * 				sfString.RESULTS[pystring] = sfString(pystring)             # <<<<<<<<<<<<<<
 * 			return sfString.RESULTS[pystring]
 * 
*/
      __pyx_t_3 = NULL;
      __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString);
      __pyx_t_7 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString); 
      __pyx_t_6 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_pystring};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1055, __pyx_L1_error)
        __Pyx_GOTREF((PyObject *)__pyx_t_1);
      }
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1055, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (unlikely((PyObject_SetItem(__pyx_t_7, __pyx_v_pystring, ((PyObject *)__pyx_t_1)) < 0))) __PYX_ERR(0, 1055, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF((PyObject *)__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_L4:;

    /* "pysfml261.pyx":1056
 * 				sfString.RESULTS = dict(items[:-to_remove])
 * 				sfString.RESULTS[pystring] = sfString(pystring)
 * 			return sfString.RESULTS[pystring]             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
    __Pyx_XDECREF((PyObject *)__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1056, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_Dict_GetItem(__pyx_t_1, __pyx_v_pystring); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1056, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_mstate_global->__pyx_ptype_9pysfml261_sfString))))) __PYX_ERR(0, 1056, __pyx_L1_error)
    __pyx_r = ((struct __pyx_obj_9pysfml261_sfString *)__pyx_t_7);
    __pyx_t_7 = 0;
    goto __pyx_L0;
  }

  /* "pysfml261.pyx":1044
 * 		return self.txt.toAnsiString().c_str().decode('utf-8')
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_pystring(str pystring) -> sfString:
 * 		if pystring in sfString.RESULTS:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfString.from_pystring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_items);
  __Pyx_XDECREF(__pyx_v_to_remove);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1058
 * 			return sfString.RESULTS[pystring]
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def drop_cache() -> None:
 * 		sfString.RESULTS.clear()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfString_13drop_cache(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfString_13drop_cache = {"drop_cache", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_13drop_cache, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfString_13drop_cache(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("drop_cache (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("drop_cache", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("drop_cache", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfString_12drop_cache();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfString_12drop_cache(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("drop_cache", 0);

  /* "pysfml261.pyx":1060
 * 	@staticmethod
 * 	def drop_cache() -> None:
 * 		sfString.RESULTS.clear()             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_RESULTS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __pyx_t_3;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_4 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_clear, __pyx_callargs+__pyx_t_4, (1-__pyx_t_4) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1060, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pysfml261.pyx":1058
 * 			return sfString.RESULTS[pystring]
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def drop_cache() -> None:
 * 		sfString.RESULTS.clear()
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfString.drop_cache", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1062
 * 		sfString.RESULTS.clear()
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def set_cache_size(int size) -> None:
 * 		sfString.CACHE_SIZE = size
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfString_15set_cache_size(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfString_15set_cache_size = {"set_cache_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_15set_cache_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfString_15set_cache_size(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_size;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cache_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_size,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1062, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1062, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_cache_size", 0) < 0) __PYX_ERR(0, 1062, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_cache_size", 1, 1, 1, i); __PYX_ERR(0, 1062, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1062, __pyx_L3_error)
    }
    __pyx_v_size = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_size == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_cache_size", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1062, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfString.set_cache_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfString_14set_cache_size(__pyx_v_size);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfString_14set_cache_size(int __pyx_v_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_cache_size", 0);

  /* "pysfml261.pyx":1064
 * 	@staticmethod
 * 	def set_cache_size(int size) -> None:
 * 		sfString.CACHE_SIZE = size             # <<<<<<<<<<<<<<
 * 
 * 	def __eq__(self, sfString another) -> bool:
*/
  __pyx_t_1 = __Pyx_PyLong_From_int(__pyx_v_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1064, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString), __pyx_mstate_global->__pyx_n_u_CACHE_SIZE, __pyx_t_1) < 0) __PYX_ERR(0, 1064, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pysfml261.pyx":1062
 * 		sfString.RESULTS.clear()
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def set_cache_size(int size) -> None:
 * 		sfString.CACHE_SIZE = size
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfString.set_cache_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1066
 * 		sfString.CACHE_SIZE = size
 * 
 * 	def __eq__(self, sfString another) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.txt == another.txt
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfString_17__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_another); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8sfString_17__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_another) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_another), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, 1, "another", 0))) __PYX_ERR(0, 1066, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfString_16__eq__(((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_self), ((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_another));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  goto __pyx_L5_cleaned_up;
  __pyx_L0:;
  __pyx_L5_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfString_16__eq__(struct __pyx_obj_9pysfml261_sfString *__pyx_v_self, struct __pyx_obj_9pysfml261_sfString *__pyx_v_another) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "pysfml261.pyx":1067
 * 
 * 	def __eq__(self, sfString another) -> bool:
 * 		return self.txt == another.txt             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_v_self->txt == __pyx_v_another->txt)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1066
 * 		sfString.CACHE_SIZE = size
 * 
 * 	def __eq__(self, sfString another) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.txt == another.txt
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfString.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfString_19__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfString_19__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_19__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfString_19__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfString_18__reduce_cython__(((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfString_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfString *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfString.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfString_21__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfString_21__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_21__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfString_21__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfString.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfString_20__setstate_cython__(((struct __pyx_obj_9pysfml261_sfString *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfString_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfString *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfString.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1074
 * 	cdef Text* text
 * 
 * 	def __cinit__(self, sfFont font):             # <<<<<<<<<<<<<<
 * 		self.text = new Text()
 * 		self.text.setFont(font.font[0])
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_6sfText_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_6sfText_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9pysfml261_sfFont *__pyx_v_font = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_font,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1074, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1074, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 1074, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 1074, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1074, __pyx_L3_error)
    }
    __pyx_v_font = ((struct __pyx_obj_9pysfml261_sfFont *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1074, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_font), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfFont, 1, "font", 0))) __PYX_ERR(0, 1074, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_6sfText___cinit__(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_font);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_6sfText___cinit__(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFont *__pyx_v_font) {
  int __pyx_r;

  /* "pysfml261.pyx":1075
 * 
 * 	def __cinit__(self, sfFont font):
 * 		self.text = new Text()             # <<<<<<<<<<<<<<
 * 		self.text.setFont(font.font[0])
 * 
*/
  __pyx_v_self->text = new sf::Text();

  /* "pysfml261.pyx":1076
 * 	def __cinit__(self, sfFont font):
 * 		self.text = new Text()
 * 		self.text.setFont(font.font[0])             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->text->setFont((__pyx_v_font->font[0]));

  /* "pysfml261.pyx":1074
 * 	cdef Text* text
 * 
 * 	def __cinit__(self, sfFont font):             # <<<<<<<<<<<<<<
 * 		self.text = new Text()
 * 		self.text.setFont(font.font[0])
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":1078
 * 		self.text.setFont(font.font[0])
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.text
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_6sfText_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_6sfText_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_6sfText_2__dealloc__(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_6sfText_2__dealloc__(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self) {

  /* "pysfml261.pyx":1079
 * 
 * 	def __dealloc__(self):
 * 		del self.text             # <<<<<<<<<<<<<<
 * 
 * 	def get_pystring(self) -> str:
*/
  delete __pyx_v_self->text;

  /* "pysfml261.pyx":1078
 * 		self.text.setFont(font.font[0])
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.text
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":1081
 * 		del self.text
 * 
 * 	def get_pystring(self) -> str:             # <<<<<<<<<<<<<<
 * 		cdef String text = <const String>self.text.getString()
 * 		return text.toAnsiString().c_str().decode('utf-8')
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_5get_pystring(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_5get_pystring = {"get_pystring", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_5get_pystring, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_5get_pystring(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pystring (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_pystring", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_pystring", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfText_4get_pystring(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_4get_pystring(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self) {
  sf::String __pyx_v_text;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_pystring", 0);

  /* "pysfml261.pyx":1082
 * 
 * 	def get_pystring(self) -> str:
 * 		cdef String text = <const String>self.text.getString()             # <<<<<<<<<<<<<<
 * 		return text.toAnsiString().c_str().decode('utf-8')
 * 
*/
  __pyx_v_text = ((sf::String const )__pyx_v_self->text->getString());

  /* "pysfml261.pyx":1083
 * 	def get_pystring(self) -> str:
 * 		cdef String text = <const String>self.text.getString()
 * 		return text.toAnsiString().c_str().decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 * 	def get_scale(self) -> tuple[float, float]:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_text.toAnsiString().c_str();
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1083, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1083, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1081
 * 		del self.text
 * 
 * 	def get_pystring(self) -> str:             # <<<<<<<<<<<<<<
 * 		cdef String text = <const String>self.text.getString()
 * 		return text.toAnsiString().c_str().decode('utf-8')
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfText.get_pystring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1085
 * 		return text.toAnsiString().c_str().decode('utf-8')
 * 
 * 	def get_scale(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f scale = <const Vector2f>self.text.getScale()
 * 		return (scale.x, scale.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_7get_scale(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_7get_scale = {"get_scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_7get_scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_7get_scale(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_scale (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_scale", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_scale", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfText_6get_scale(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_6get_scale(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self) {
  sf::Vector2f __pyx_v_scale;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_scale", 0);

  /* "pysfml261.pyx":1086
 * 
 * 	def get_scale(self) -> tuple[float, float]:
 * 		cdef Vector2f scale = <const Vector2f>self.text.getScale()             # <<<<<<<<<<<<<<
 * 		return (scale.x, scale.y)
 * 
*/
  __pyx_v_scale = ((sf::Vector2f const )__pyx_v_self->text->getScale());

  /* "pysfml261.pyx":1087
 * 	def get_scale(self) -> tuple[float, float]:
 * 		cdef Vector2f scale = <const Vector2f>self.text.getScale()
 * 		return (scale.x, scale.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_scale(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_scale.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1087, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1087, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1085
 * 		return text.toAnsiString().c_str().decode('utf-8')
 * 
 * 	def get_scale(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f scale = <const Vector2f>self.text.getScale()
 * 		return (scale.x, scale.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfText.get_scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1089
 * 		return (scale.x, scale.y)
 * 
 * 	def set_scale(self,             # <<<<<<<<<<<<<<
 * 		float kx = 1,
 * 		float ky = 1) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_9set_scale(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_9set_scale = {"set_scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_9set_scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_9set_scale(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_kx;
  float __pyx_v_ky;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_scale (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_kx,&__pyx_mstate_global->__pyx_n_u_ky,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1089, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1089, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1089, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_scale", 0) < 0) __PYX_ERR(0, 1089, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1089, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1089, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_kx = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_kx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1090, __pyx_L3_error)
    } else {
      __pyx_v_kx = ((float)1.0);
    }
    if (values[1]) {
      __pyx_v_ky = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_ky == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1091, __pyx_L3_error)
    } else {
      __pyx_v_ky = ((float)1.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_scale", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1089, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.set_scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_8set_scale(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_kx, __pyx_v_ky);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_8set_scale(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_kx, float __pyx_v_ky) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_scale", 0);

  /* "pysfml261.pyx":1092
 * 		float kx = 1,
 * 		float ky = 1) -> None:
 * 		self.text.setScale(kx, ky)             # <<<<<<<<<<<<<<
 * 
 * 	def get_rotation(self) -> float:
*/
  __pyx_v_self->text->setScale(__pyx_v_kx, __pyx_v_ky);

  /* "pysfml261.pyx":1089
 * 		return (scale.x, scale.y)
 * 
 * 	def set_scale(self,             # <<<<<<<<<<<<<<
 * 		float kx = 1,
 * 		float ky = 1) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1094
 * 		self.text.setScale(kx, ky)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.text.getRotation()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_11get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_11get_rotation = {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_11get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_11get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_rotation", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_rotation", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfText_10get_rotation(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_10get_rotation(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_rotation", 0);

  /* "pysfml261.pyx":1095
 * 
 * 	def get_rotation(self) -> float:
 * 		return self.text.getRotation()             # <<<<<<<<<<<<<<
 * 
 * 	def set_rotation(self, float degrees) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->text->getRotation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1094
 * 		self.text.setScale(kx, ky)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.text.getRotation()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfText.get_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1097
 * 		return self.text.getRotation()
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setRotation(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_13set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_13set_rotation = {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_13set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_13set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1097, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1097, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_rotation", 0) < 0) __PYX_ERR(0, 1097, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_rotation", 1, 1, 1, i); __PYX_ERR(0, 1097, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1097, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1097, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_rotation", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1097, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.set_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_12set_rotation(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_12set_rotation(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation", 0);

  /* "pysfml261.pyx":1098
 * 
 * 	def set_rotation(self, float degrees) -> None:
 * 		self.text.setRotation(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def get_position(self) -> tuple[float, float]:
*/
  __pyx_v_self->text->setRotation(__pyx_v_degrees);

  /* "pysfml261.pyx":1097
 * 		return self.text.getRotation()
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setRotation(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1100
 * 		self.text.setRotation(degrees)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.text.getPosition()
 * 		return (pos.x, pos.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_15get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_15get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_15get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_15get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfText_14get_position(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_14get_position(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":1101
 * 
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = <const Vector2f>self.text.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y)
 * 
*/
  __pyx_v_pos = ((sf::Vector2f const )__pyx_v_self->text->getPosition());

  /* "pysfml261.pyx":1102
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = <const Vector2f>self.text.getPosition()
 * 		return (pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_position(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1102, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1102, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1100
 * 		self.text.setRotation(degrees)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.text.getPosition()
 * 		return (pos.x, pos.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfText.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1104
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_17set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_17set_position = {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_17set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_17set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_left;
  float __pyx_v_top;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_left,&__pyx_mstate_global->__pyx_n_u_top,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1104, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1104, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1104, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_position", 0) < 0) __PYX_ERR(0, 1104, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1104, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1104, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_left = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1105, __pyx_L3_error)
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_top = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1106, __pyx_L3_error)
    } else {
      __pyx_v_top = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_position", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1104, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.set_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_16set_position(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_left, __pyx_v_top);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_16set_position(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_left, float __pyx_v_top) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position", 0);

  /* "pysfml261.pyx":1107
 * 		float left = 0,
 * 		float top = 0) -> None:
 * 		self.text.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 
 * 	def move(self,
*/
  __pyx_v_self->text->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1104
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1109
 * 		self.text.setPosition(left, top)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_19move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_19move = {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_19move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_19move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_dx;
  float __pyx_v_dy;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_dx,&__pyx_mstate_global->__pyx_n_u_dy,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1109, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1109, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1109, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "move", 0) < 0) __PYX_ERR(0, 1109, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1109, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1109, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_dx = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_dx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1110, __pyx_L3_error)
    } else {
      __pyx_v_dx = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_dy = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_dy == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
    } else {
      __pyx_v_dy = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1109, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_18move(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_dx, __pyx_v_dy);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_18move(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move", 0);

  /* "pysfml261.pyx":1112
 * 		float dx = 0,
 * 		float dy = 0) -> None:
 * 		self.text.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	def rotate(self, float degrees) -> None:
*/
  __pyx_v_self->text->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1109
 * 		self.text.setPosition(left, top)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1114
 * 		self.text.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.rotate(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_21rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_21rotate = {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_21rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_21rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1114, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1114, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "rotate", 0) < 0) __PYX_ERR(0, 1114, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("rotate", 1, 1, 1, i); __PYX_ERR(0, 1114, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1114, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1114, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1114, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_20rotate(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_20rotate(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate", 0);

  /* "pysfml261.pyx":1115
 * 
 * 	def rotate(self, float degrees) -> None:
 * 		self.text.rotate(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def contains(self,
*/
  __pyx_v_self->text->rotate(__pyx_v_degrees);

  /* "pysfml261.pyx":1114
 * 		self.text.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.rotate(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1117
 * 		self.text.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_23contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_23contains = {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_23contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_23contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("contains (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1117, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1117, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1117, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1117, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "contains", 0) < 0) __PYX_ERR(0, 1117, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1117, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1117, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1117, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1118, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1119, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1120
 * 		float x = 0,
 * 		float y = 0,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("contains", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1117, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_22contains(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_local);

  /* "pysfml261.pyx":1117
 * 		self.text.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_22contains(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("contains", 0);

  /* "pysfml261.pyx":1122
 * 		bint local = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.text.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1123
 * 		cdef FloatRect rect
 * 		if local:
 * 			rect = self.text.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect = self.text.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->text->getLocalBounds());

    /* "pysfml261.pyx":1122
 * 		bint local = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.text.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1125
 * 			rect = self.text.getLocalBounds()
 * 		else:
 * 			rect = self.text.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return rect.contains(x, y)
 * 
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->text->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1126
 * 		else:
 * 			rect = self.text.getGlobalBounds()
 * 		return rect.contains(x, y)             # <<<<<<<<<<<<<<
 * 
 * 	def intersects(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_rect.contains(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1117
 * 		self.text.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfText.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1128
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_25intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_25intersects = {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_25intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_25intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect = 0;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("intersects (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_rect,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1128, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1128, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1128, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "intersects", 0) < 0) __PYX_ERR(0, 1128, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, i); __PYX_ERR(0, 1128, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1128, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1128, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_rect = ((struct __pyx_obj_9pysfml261_sfFloatRect *)values[0]);
    if (values[1]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1130, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1130
 * 	def intersects(self,
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1128, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, 1, "rect", 0))) __PYX_ERR(0, 1129, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_6sfText_24intersects(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_rect, __pyx_v_local);

  /* "pysfml261.pyx":1128
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_24intersects(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect, int __pyx_v_local) {
  sf::FloatRect __pyx_v_bounds;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("intersects", 0);

  /* "pysfml261.pyx":1132
 * 		bint local = True) -> bool:
 * 		cdef FloatRect bounds
 * 		if local:             # <<<<<<<<<<<<<<
 * 			bounds = self.text.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1133
 * 		cdef FloatRect bounds
 * 		if local:
 * 			bounds = self.text.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			bounds = self.text.getGlobalBounds()
*/
    __pyx_v_bounds = ((sf::FloatRect)__pyx_v_self->text->getLocalBounds());

    /* "pysfml261.pyx":1132
 * 		bint local = True) -> bool:
 * 		cdef FloatRect bounds
 * 		if local:             # <<<<<<<<<<<<<<
 * 			bounds = self.text.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1135
 * 			bounds = self.text.getLocalBounds()
 * 		else:
 * 			bounds = self.text.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return bounds.intersects(rect.rect[0])
 * 
*/
  /*else*/ {
    __pyx_v_bounds = ((sf::FloatRect)__pyx_v_self->text->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1136
 * 		else:
 * 			bounds = self.text.getGlobalBounds()
 * 		return bounds.intersects(rect.rect[0])             # <<<<<<<<<<<<<<
 * 
 * 	def set_string(self, sfString txt) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_bounds.intersects((__pyx_v_rect->rect[0]))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1128
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfText.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1138
 * 		return bounds.intersects(rect.rect[0])
 * 
 * 	def set_string(self, sfString txt) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setString(txt.txt[0])
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_27set_string(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_27set_string = {"set_string", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_27set_string, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_27set_string(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfString *__pyx_v_txt = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_string (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_txt_2,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1138, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1138, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_string", 0) < 0) __PYX_ERR(0, 1138, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_string", 1, 1, 1, i); __PYX_ERR(0, 1138, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1138, __pyx_L3_error)
    }
    __pyx_v_txt = ((struct __pyx_obj_9pysfml261_sfString *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_string", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1138, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.set_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_txt), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, 1, "txt", 0))) __PYX_ERR(0, 1138, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_6sfText_26set_string(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_txt);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_26set_string(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfString *__pyx_v_txt) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_string", 0);

  /* "pysfml261.pyx":1139
 * 
 * 	def set_string(self, sfString txt) -> None:
 * 		self.text.setString(txt.txt[0])             # <<<<<<<<<<<<<<
 * 
 * 	def set_font(self, sfFont font) -> None:
*/
  __pyx_v_self->text->setString((__pyx_v_txt->txt[0]));

  /* "pysfml261.pyx":1138
 * 		return bounds.intersects(rect.rect[0])
 * 
 * 	def set_string(self, sfString txt) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setString(txt.txt[0])
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1141
 * 		self.text.setString(txt.txt[0])
 * 
 * 	def set_font(self, sfFont font) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setFont(font.font[0])
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_29set_font(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_29set_font = {"set_font", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_29set_font, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_29set_font(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfFont *__pyx_v_font = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_font (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_font,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1141, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1141, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_font", 0) < 0) __PYX_ERR(0, 1141, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_font", 1, 1, 1, i); __PYX_ERR(0, 1141, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1141, __pyx_L3_error)
    }
    __pyx_v_font = ((struct __pyx_obj_9pysfml261_sfFont *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_font", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1141, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.set_font", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_font), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfFont, 1, "font", 0))) __PYX_ERR(0, 1141, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_6sfText_28set_font(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_font);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_28set_font(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFont *__pyx_v_font) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_font", 0);

  /* "pysfml261.pyx":1142
 * 
 * 	def set_font(self, sfFont font) -> None:
 * 		self.text.setFont(font.font[0])             # <<<<<<<<<<<<<<
 * 
 * 	def set_character_size(self, unsigned int size) -> None:
*/
  __pyx_v_self->text->setFont((__pyx_v_font->font[0]));

  /* "pysfml261.pyx":1141
 * 		self.text.setString(txt.txt[0])
 * 
 * 	def set_font(self, sfFont font) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setFont(font.font[0])
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1144
 * 		self.text.setFont(font.font[0])
 * 
 * 	def set_character_size(self, unsigned int size) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setCharacterSize(size)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_31set_character_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_31set_character_size = {"set_character_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_31set_character_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_31set_character_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  unsigned int __pyx_v_size;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_character_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_size,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1144, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1144, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_character_size", 0) < 0) __PYX_ERR(0, 1144, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_character_size", 1, 1, 1, i); __PYX_ERR(0, 1144, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1144, __pyx_L3_error)
    }
    __pyx_v_size = __Pyx_PyLong_As_unsigned_int(values[0]); if (unlikely((__pyx_v_size == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1144, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_character_size", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1144, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.set_character_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_30set_character_size(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_size);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_30set_character_size(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, unsigned int __pyx_v_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_character_size", 0);

  /* "pysfml261.pyx":1145
 * 
 * 	def set_character_size(self, unsigned int size) -> None:
 * 		self.text.setCharacterSize(size)             # <<<<<<<<<<<<<<
 * 
 * 	def set_style(self, unsigned int style) -> None:
*/
  __pyx_v_self->text->setCharacterSize(__pyx_v_size);

  /* "pysfml261.pyx":1144
 * 		self.text.setFont(font.font[0])
 * 
 * 	def set_character_size(self, unsigned int size) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setCharacterSize(size)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1147
 * 		self.text.setCharacterSize(size)
 * 
 * 	def set_style(self, unsigned int style) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setStyle(style)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_33set_style(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_33set_style = {"set_style", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_33set_style, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_33set_style(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  unsigned int __pyx_v_style;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_style (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_style,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1147, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1147, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_style", 0) < 0) __PYX_ERR(0, 1147, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_style", 1, 1, 1, i); __PYX_ERR(0, 1147, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1147, __pyx_L3_error)
    }
    __pyx_v_style = __Pyx_PyLong_As_unsigned_int(values[0]); if (unlikely((__pyx_v_style == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1147, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_style", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1147, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.set_style", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_32set_style(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_style);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_32set_style(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, unsigned int __pyx_v_style) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_style", 0);

  /* "pysfml261.pyx":1148
 * 
 * 	def set_style(self, unsigned int style) -> None:
 * 		self.text.setStyle(style)             # <<<<<<<<<<<<<<
 * 
 * 	def set_fill_color(self, sfColor color) -> None:
*/
  __pyx_v_self->text->setStyle(__pyx_v_style);

  /* "pysfml261.pyx":1147
 * 		self.text.setCharacterSize(size)
 * 
 * 	def set_style(self, unsigned int style) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setStyle(style)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1150
 * 		self.text.setStyle(style)
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setFillColor(color.color[0])
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_35set_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_35set_fill_color = {"set_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_35set_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_35set_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fill_color (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_color,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1150, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1150, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_fill_color", 0) < 0) __PYX_ERR(0, 1150, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_fill_color", 1, 1, 1, i); __PYX_ERR(0, 1150, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1150, __pyx_L3_error)
    }
    __pyx_v_color = ((struct __pyx_obj_9pysfml261_sfColor *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_fill_color", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1150, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.set_fill_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor, 1, "color", 0))) __PYX_ERR(0, 1150, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_6sfText_34set_fill_color(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v_color);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_34set_fill_color(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fill_color", 0);

  /* "pysfml261.pyx":1151
 * 
 * 	def set_fill_color(self, sfColor color) -> None:
 * 		self.text.setFillColor(color.color[0])             # <<<<<<<<<<<<<<
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:
*/
  __pyx_v_self->text->setFillColor((__pyx_v_color->color[0]));

  /* "pysfml261.pyx":1150
 * 		self.text.setStyle(style)
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setFillColor(color.color[0])
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1153
 * 		self.text.setFillColor(color.color[0])
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.text.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_6sfText_37get_local_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_37get_local_bounds = {"get_local_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_37get_local_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_6sfText_37get_local_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_local_bounds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_local_bounds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_local_bounds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfText_36get_local_bounds(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_6sfText_36get_local_bounds(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self) {
  sf::FloatRect __pyx_v_bounds;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_local_bounds", 0);

  /* "pysfml261.pyx":1154
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.text.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
*/
  __pyx_v_bounds = ((sf::FloatRect)__pyx_v_self->text->getLocalBounds());

  /* "pysfml261.pyx":1155
 * 	def get_local_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.text.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)             # <<<<<<<<<<<<<<
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_bounds.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_bounds.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_bounds.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_bounds.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1155, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1153
 * 		self.text.setFillColor(color.color[0])
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.text.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfText.get_local_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1157
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.text.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_6sfText_39get_global_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_39get_global_bounds = {"get_global_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_39get_global_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_6sfText_39get_global_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_global_bounds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_global_bounds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_global_bounds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfText_38get_global_bounds(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_6sfText_38get_global_bounds(struct __pyx_obj_9pysfml261_sfText *__pyx_v_self) {
  sf::FloatRect __pyx_v_bounds;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_global_bounds", 0);

  /* "pysfml261.pyx":1158
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.text.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
*/
  __pyx_v_bounds = ((sf::FloatRect)__pyx_v_self->text->getGlobalBounds());

  /* "pysfml261.pyx":1159
 * 	def get_global_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.text.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_bounds.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_bounds.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_bounds.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_bounds.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1159, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1157
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.text.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfText.get_global_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_41__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_41__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_41__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_41__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfText_40__reduce_cython__(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_40__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfText *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfText.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfText_43__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfText_43__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_43__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfText_43__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfText.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfText_42__setstate_cython__(((struct __pyx_obj_9pysfml261_sfText *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfText_42__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfText *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfText.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1166
 * 	cdef Texture* texture
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 
 * 		self.texture = new Texture()
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_9sfTexture_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_9sfTexture_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_filename,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1166, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1166, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 1166, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 1166, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1166, __pyx_L3_error)
    }
    __pyx_v_filename = ((PyObject*)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1166, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfTexture.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_filename), (&PyUnicode_Type), 1, "filename", 1))) __PYX_ERR(0, 1166, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_9sfTexture___cinit__(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self), __pyx_v_filename);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_9sfTexture___cinit__(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self, PyObject *__pyx_v_filename) {
  std::string __pyx_v_path;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  PyObject *__pyx_t_9[3];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pysfml261.pyx":1168
 * 	def __cinit__(self, str filename):
 * 
 * 		self.texture = new Texture()             # <<<<<<<<<<<<<<
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.texture.loadFromFile(path):
*/
  __pyx_v_self->texture = new sf::Texture();

  /* "pysfml261.pyx":1169
 * 
 * 		self.texture = new Texture()
 * 		cdef string path = _text(filename).encode('utf-8')             # <<<<<<<<<<<<<<
 * 		if not self.texture.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 1169, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_convert_string_from_py_6libcpp_6string_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_path = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "pysfml261.pyx":1170
 * 		self.texture = new Texture()
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.texture.loadFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load texture from {0}!'.format(filename))
*/
  __pyx_t_4 = (!__pyx_v_self->texture->loadFromFile(__pyx_v_path));
  if (__pyx_t_4) {

    /* "pysfml261.pyx":1171
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.texture.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load texture from {0}!'.format(filename))
 * 			else:
*/
    __pyx_t_4 = (PY_MAJOR_VERSION < 3);
    if (unlikely(__pyx_t_4)) {

      /* "pysfml261.pyx":1172
 * 		if not self.texture.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load texture from {0}!'.format(filename))             # <<<<<<<<<<<<<<
 * 			else:
 * 				raise RuntimeError(f'Unable to load texture {filename}!')
*/
      __pyx_t_1 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_5 = __pyx_builtin_RuntimeError; 
      __pyx_t_7 = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_texture_from_0;
      __Pyx_INCREF(__pyx_t_7);
      __pyx_t_8 = 0;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_filename};
        __pyx_t_6 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_format, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1172, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
      }
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_6};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1172, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 1172, __pyx_L1_error)

      /* "pysfml261.pyx":1171
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.texture.loadFromFile(path):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load texture from {0}!'.format(filename))
 * 			else:
*/
    }

    /* "pysfml261.pyx":1174
 * 				raise RuntimeError('Failed to load texture from {0}!'.format(filename))
 * 			else:
 * 				raise RuntimeError(f'Unable to load texture {filename}!')             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
    /*else*/ {
      __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_6 = __pyx_builtin_RuntimeError; 
      __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9[0] = __pyx_mstate_global->__pyx_kp_u_Unable_to_load_texture;
      __pyx_t_9[1] = __pyx_t_1;
      __pyx_t_9[2] = __pyx_mstate_global->__pyx_kp_u_;
      __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_9, 3, 23 + __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1) + 1, 127 | __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1));
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 1174, __pyx_L1_error)
    }

    /* "pysfml261.pyx":1170
 * 		self.texture = new Texture()
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		if not self.texture.loadFromFile(path):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load texture from {0}!'.format(filename))
*/
  }

  /* "pysfml261.pyx":1166
 * 	cdef Texture* texture
 * 
 * 	def __cinit__(self, str filename):             # <<<<<<<<<<<<<<
 * 
 * 		self.texture = new Texture()
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfTexture.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1176
 * 				raise RuntimeError(f'Unable to load texture {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.texture is not NULL:
 * 			del self.texture
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_9sfTexture_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_9sfTexture_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_9sfTexture_2__dealloc__(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_9sfTexture_2__dealloc__(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self) {
  int __pyx_t_1;

  /* "pysfml261.pyx":1177
 * 
 * 	def __dealloc__(self):
 * 		if self.texture is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.texture
 * 
*/
  __pyx_t_1 = (__pyx_v_self->texture != NULL);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1178
 * 	def __dealloc__(self):
 * 		if self.texture is not NULL:
 * 			del self.texture             # <<<<<<<<<<<<<<
 * 
 * 	def get_size(self) -> tuple[int, int]:
*/
    delete __pyx_v_self->texture;

    /* "pysfml261.pyx":1177
 * 
 * 	def __dealloc__(self):
 * 		if self.texture is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.texture
 * 
*/
  }

  /* "pysfml261.pyx":1176
 * 				raise RuntimeError(f'Unable to load texture {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.texture is not NULL:
 * 			del self.texture
*/

  /* function exit code */
}

/* "pysfml261.pyx":1180
 * 			del self.texture
 * 
 * 	def get_size(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2u size = self.texture.getSize()
 * 		return (size.x, size.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_9sfTexture_5get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_9sfTexture_5get_size = {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_5get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_9sfTexture_5get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_size", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_size", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_9sfTexture_4get_size(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_9sfTexture_4get_size(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self) {
  sf::Vector2u __pyx_v_size;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_size", 0);

  /* "pysfml261.pyx":1181
 * 
 * 	def get_size(self) -> tuple[int, int]:
 * 		cdef Vector2u size = self.texture.getSize()             # <<<<<<<<<<<<<<
 * 		return (size.x, size.y)
 * 
*/
  __pyx_v_size = ((sf::Vector2u)__pyx_v_self->texture->getSize());

  /* "pysfml261.pyx":1182
 * 	def get_size(self) -> tuple[int, int]:
 * 		cdef Vector2u size = self.texture.getSize()
 * 		return (size.x, size.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_smooth(self, bint smooth) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_size.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_From_unsigned_int(__pyx_v_size.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1182, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1182, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1180
 * 			del self.texture
 * 
 * 	def get_size(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2u size = self.texture.getSize()
 * 		return (size.x, size.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfTexture.get_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1184
 * 		return (size.x, size.y)
 * 
 * 	def set_smooth(self, bint smooth) -> None:             # <<<<<<<<<<<<<<
 * 		self.texture.setSmooth(smooth)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_9sfTexture_7set_smooth(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_9sfTexture_7set_smooth = {"set_smooth", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_7set_smooth, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_9sfTexture_7set_smooth(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_smooth;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_smooth (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_smooth,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1184, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1184, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_smooth", 0) < 0) __PYX_ERR(0, 1184, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_smooth", 1, 1, 1, i); __PYX_ERR(0, 1184, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1184, __pyx_L3_error)
    }
    __pyx_v_smooth = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_smooth == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1184, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_smooth", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1184, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfTexture.set_smooth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_9sfTexture_6set_smooth(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self), __pyx_v_smooth);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_9sfTexture_6set_smooth(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self, int __pyx_v_smooth) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_smooth", 0);

  /* "pysfml261.pyx":1185
 * 
 * 	def set_smooth(self, bint smooth) -> None:
 * 		self.texture.setSmooth(smooth)             # <<<<<<<<<<<<<<
 * 
 * 	def is_smooth(self) -> bool:
*/
  __pyx_v_self->texture->setSmooth(__pyx_v_smooth);

  /* "pysfml261.pyx":1184
 * 		return (size.x, size.y)
 * 
 * 	def set_smooth(self, bint smooth) -> None:             # <<<<<<<<<<<<<<
 * 		self.texture.setSmooth(smooth)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1187
 * 		self.texture.setSmooth(smooth)
 * 
 * 	def is_smooth(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.texture.isSmooth()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_9sfTexture_9is_smooth(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_9sfTexture_9is_smooth = {"is_smooth", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_9is_smooth, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_9sfTexture_9is_smooth(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_smooth (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("is_smooth", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("is_smooth", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_9sfTexture_8is_smooth(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_9sfTexture_8is_smooth(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_smooth", 0);

  /* "pysfml261.pyx":1188
 * 
 * 	def is_smooth(self) -> bool:
 * 		return self.texture.isSmooth()             # <<<<<<<<<<<<<<
 * 
 * 	def set_srgb(self, bint srgb) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->texture->isSmooth()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1187
 * 		self.texture.setSmooth(smooth)
 * 
 * 	def is_smooth(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.texture.isSmooth()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfTexture.is_smooth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1190
 * 		return self.texture.isSmooth()
 * 
 * 	def set_srgb(self, bint srgb) -> None:             # <<<<<<<<<<<<<<
 * 		self.texture.setSrgb(srgb)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_9sfTexture_11set_srgb(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_9sfTexture_11set_srgb = {"set_srgb", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_11set_srgb, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_9sfTexture_11set_srgb(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_srgb;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_srgb (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_srgb,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1190, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1190, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_srgb", 0) < 0) __PYX_ERR(0, 1190, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_srgb", 1, 1, 1, i); __PYX_ERR(0, 1190, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1190, __pyx_L3_error)
    }
    __pyx_v_srgb = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_srgb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1190, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_srgb", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1190, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfTexture.set_srgb", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_9sfTexture_10set_srgb(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self), __pyx_v_srgb);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_9sfTexture_10set_srgb(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self, int __pyx_v_srgb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_srgb", 0);

  /* "pysfml261.pyx":1191
 * 
 * 	def set_srgb(self, bint srgb) -> None:
 * 		self.texture.setSrgb(srgb)             # <<<<<<<<<<<<<<
 * 
 * 	def is_srgb(self) -> bool:
*/
  __pyx_v_self->texture->setSrgb(__pyx_v_srgb);

  /* "pysfml261.pyx":1190
 * 		return self.texture.isSmooth()
 * 
 * 	def set_srgb(self, bint srgb) -> None:             # <<<<<<<<<<<<<<
 * 		self.texture.setSrgb(srgb)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1193
 * 		self.texture.setSrgb(srgb)
 * 
 * 	def is_srgb(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.texture.isSrgb()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_9sfTexture_13is_srgb(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_9sfTexture_13is_srgb = {"is_srgb", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_13is_srgb, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_9sfTexture_13is_srgb(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_srgb (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("is_srgb", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("is_srgb", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_9sfTexture_12is_srgb(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_9sfTexture_12is_srgb(struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_srgb", 0);

  /* "pysfml261.pyx":1194
 * 
 * 	def is_srgb(self) -> bool:
 * 		return self.texture.isSrgb()             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->texture->isSrgb()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1193
 * 		self.texture.setSrgb(srgb)
 * 
 * 	def is_srgb(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.texture.isSrgb()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfTexture.is_srgb", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_9sfTexture_15__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_9sfTexture_15__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_15__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_9sfTexture_15__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_9sfTexture_14__reduce_cython__(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_9sfTexture_14__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfTexture.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_9sfTexture_17__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_9sfTexture_17__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_17__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_9sfTexture_17__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfTexture.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_9sfTexture_16__setstate_cython__(((struct __pyx_obj_9pysfml261_sfTexture *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_9sfTexture_16__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfTexture.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1197
 * 
 * 
 * cdef void resizeSprite(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float width,
*/

static void __pyx_f_9pysfml261_resizeSprite(sf::Sprite *__pyx_v_sprite, float __pyx_v_width, float __pyx_v_height) {
  sf::Vector2u __pyx_v_texture_size;
  float __pyx_v_kx;
  float __pyx_v_ky;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":1201
 * 	float width,
 * 	float height):
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()             # <<<<<<<<<<<<<<
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y
 * 	sprite.setScale(kx, ky)
*/
  __pyx_v_texture_size = ((sf::Vector2u)__pyx_v_sprite->getTexture()->getSize());

  /* "pysfml261.pyx":1202
 * 	float height):
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y             # <<<<<<<<<<<<<<
 * 	sprite.setScale(kx, ky)
 * 
*/
  if (unlikely(__pyx_v_texture_size.x == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1202, __pyx_L1_error)
  }
  __pyx_v_kx = (__pyx_v_width / ((float)__pyx_v_texture_size.x));
  if (unlikely(__pyx_v_texture_size.y == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1202, __pyx_L1_error)
  }
  __pyx_v_ky = (__pyx_v_height / ((float)__pyx_v_texture_size.y));

  /* "pysfml261.pyx":1203
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y
 * 	sprite.setScale(kx, ky)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_sprite->setScale(__pyx_v_kx, __pyx_v_ky);

  /* "pysfml261.pyx":1197
 * 
 * 
 * cdef void resizeSprite(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float width,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.resizeSprite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "pysfml261.pyx":1206
 * 
 * 
 * cdef void resizeSpriteKeepWidth(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float width
*/

static void __pyx_f_9pysfml261_resizeSpriteKeepWidth(sf::Sprite *__pyx_v_sprite, float __pyx_v_width) {
  sf::Vector2u __pyx_v_texture_size;
  float __pyx_v_kwh;
  float __pyx_v_height;
  float __pyx_v_kx;
  float __pyx_v_ky;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":1210
 * 	float width
 * 	):
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()             # <<<<<<<<<<<<<<
 * 	cdef float kwh = <float>1.0 * texture_size.x / texture_size.y
 * 	cdef float height = width / kwh
*/
  __pyx_v_texture_size = ((sf::Vector2u)__pyx_v_sprite->getTexture()->getSize());

  /* "pysfml261.pyx":1211
 * 	):
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()
 * 	cdef float kwh = <float>1.0 * texture_size.x / texture_size.y             # <<<<<<<<<<<<<<
 * 	cdef float height = width / kwh
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y
*/
  __pyx_t_1 = (((float)1.0) * __pyx_v_texture_size.x);
  if (unlikely(__pyx_v_texture_size.y == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1211, __pyx_L1_error)
  }
  __pyx_v_kwh = (__pyx_t_1 / ((float)__pyx_v_texture_size.y));

  /* "pysfml261.pyx":1212
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()
 * 	cdef float kwh = <float>1.0 * texture_size.x / texture_size.y
 * 	cdef float height = width / kwh             # <<<<<<<<<<<<<<
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y
 * 	sprite.setScale(kx, ky)
*/
  if (unlikely(__pyx_v_kwh == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1212, __pyx_L1_error)
  }
  __pyx_v_height = (__pyx_v_width / __pyx_v_kwh);

  /* "pysfml261.pyx":1213
 * 	cdef float kwh = <float>1.0 * texture_size.x / texture_size.y
 * 	cdef float height = width / kwh
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y             # <<<<<<<<<<<<<<
 * 	sprite.setScale(kx, ky)
 * 
*/
  if (unlikely(__pyx_v_texture_size.x == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1213, __pyx_L1_error)
  }
  __pyx_v_kx = (__pyx_v_width / ((float)__pyx_v_texture_size.x));
  if (unlikely(__pyx_v_texture_size.y == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1213, __pyx_L1_error)
  }
  __pyx_v_ky = (__pyx_v_height / ((float)__pyx_v_texture_size.y));

  /* "pysfml261.pyx":1214
 * 	cdef float height = width / kwh
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y
 * 	sprite.setScale(kx, ky)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_sprite->setScale(__pyx_v_kx, __pyx_v_ky);

  /* "pysfml261.pyx":1206
 * 
 * 
 * cdef void resizeSpriteKeepWidth(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float width
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.resizeSpriteKeepWidth", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "pysfml261.pyx":1217
 * 
 * 
 * cdef void resizeSpriteKeepHeight(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float height
*/

static void __pyx_f_9pysfml261_resizeSpriteKeepHeight(sf::Sprite *__pyx_v_sprite, float __pyx_v_height) {
  sf::Vector2u __pyx_v_texture_size;
  float __pyx_v_khw;
  float __pyx_v_width;
  float __pyx_v_kx;
  float __pyx_v_ky;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":1221
 * 	float height
 * 	):
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()             # <<<<<<<<<<<<<<
 * 	cdef float khw = <float>1.0 * texture_size.y / texture_size.x
 * 	cdef float width = height / khw
*/
  __pyx_v_texture_size = ((sf::Vector2u)__pyx_v_sprite->getTexture()->getSize());

  /* "pysfml261.pyx":1222
 * 	):
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()
 * 	cdef float khw = <float>1.0 * texture_size.y / texture_size.x             # <<<<<<<<<<<<<<
 * 	cdef float width = height / khw
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y
*/
  __pyx_t_1 = (((float)1.0) * __pyx_v_texture_size.y);
  if (unlikely(__pyx_v_texture_size.x == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1222, __pyx_L1_error)
  }
  __pyx_v_khw = (__pyx_t_1 / ((float)__pyx_v_texture_size.x));

  /* "pysfml261.pyx":1223
 * 	cdef Vector2u texture_size = sprite.getTexture().getSize()
 * 	cdef float khw = <float>1.0 * texture_size.y / texture_size.x
 * 	cdef float width = height / khw             # <<<<<<<<<<<<<<
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y
 * 	sprite.setScale(kx, ky)
*/
  if (unlikely(__pyx_v_khw == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1223, __pyx_L1_error)
  }
  __pyx_v_width = (__pyx_v_height / __pyx_v_khw);

  /* "pysfml261.pyx":1224
 * 	cdef float khw = <float>1.0 * texture_size.y / texture_size.x
 * 	cdef float width = height / khw
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y             # <<<<<<<<<<<<<<
 * 	sprite.setScale(kx, ky)
 * 
*/
  if (unlikely(__pyx_v_texture_size.x == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1224, __pyx_L1_error)
  }
  __pyx_v_kx = (__pyx_v_width / ((float)__pyx_v_texture_size.x));
  if (unlikely(__pyx_v_texture_size.y == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1224, __pyx_L1_error)
  }
  __pyx_v_ky = (__pyx_v_height / ((float)__pyx_v_texture_size.y));

  /* "pysfml261.pyx":1225
 * 	cdef float width = height / khw
 * 	cdef float kx = width / texture_size.x, ky = height / texture_size.y
 * 	sprite.setScale(kx, ky)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_sprite->setScale(__pyx_v_kx, __pyx_v_ky);

  /* "pysfml261.pyx":1217
 * 
 * 
 * cdef void resizeSpriteKeepHeight(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float height
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.resizeSpriteKeepHeight", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "pysfml261.pyx":1228
 * 
 * 
 * cdef void scaleSpriteKeepLeftTop(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float kx,
*/

static void __pyx_f_9pysfml261_scaleSpriteKeepLeftTop(sf::Sprite *__pyx_v_sprite, float __pyx_v_kx, float __pyx_v_ky) {
  sf::Vector2f __pyx_v_pos;

  /* "pysfml261.pyx":1233
 * 	float ky
 * 	):
 * 	cdef Vector2f pos = <const Vector2f>sprite.getPosition()             # <<<<<<<<<<<<<<
 * 	sprite.setScale(kx, ky)
 * 	sprite.setPosition(pos.x, pos.y)
*/
  __pyx_v_pos = ((sf::Vector2f const )__pyx_v_sprite->getPosition());

  /* "pysfml261.pyx":1234
 * 	):
 * 	cdef Vector2f pos = <const Vector2f>sprite.getPosition()
 * 	sprite.setScale(kx, ky)             # <<<<<<<<<<<<<<
 * 	sprite.setPosition(pos.x, pos.y)
 * 
*/
  __pyx_v_sprite->setScale(__pyx_v_kx, __pyx_v_ky);

  /* "pysfml261.pyx":1235
 * 	cdef Vector2f pos = <const Vector2f>sprite.getPosition()
 * 	sprite.setScale(kx, ky)
 * 	sprite.setPosition(pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_sprite->setPosition(__pyx_v_pos.x, __pyx_v_pos.y);

  /* "pysfml261.pyx":1228
 * 
 * 
 * cdef void scaleSpriteKeepLeftTop(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float kx,
*/

  /* function exit code */
}

/* "pysfml261.pyx":1238
 * 
 * 
 * cdef void scaleSpriteKeepCenter(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float kx,
*/

static void __pyx_f_9pysfml261_scaleSpriteKeepCenter(sf::Sprite *__pyx_v_sprite, float __pyx_v_kx, float __pyx_v_ky, int __pyx_v_local_pos) {
  float __pyx_v_k;
  sf::FloatRect __pyx_v_rect;
  float __pyx_v_center_x;
  float __pyx_v_center_y;
  sf::FloatRect __pyx_v_n_rect;
  float __pyx_v_left;
  float __pyx_v_top;

  /* "pysfml261.pyx":1244
 * 	bint local_pos
 * 	):
 * 	cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 	cdef FloatRect rect
 * 	if local_pos:
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1246
 * 	cdef float k = <float>.5
 * 	cdef FloatRect rect
 * 	if local_pos:             # <<<<<<<<<<<<<<
 * 		rect = sprite.getLocalBounds()
 * 	else:
*/
  if (__pyx_v_local_pos) {

    /* "pysfml261.pyx":1247
 * 	cdef FloatRect rect
 * 	if local_pos:
 * 		rect = sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 	else:
 * 		rect = sprite.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_sprite->getLocalBounds());

    /* "pysfml261.pyx":1246
 * 	cdef float k = <float>.5
 * 	cdef FloatRect rect
 * 	if local_pos:             # <<<<<<<<<<<<<<
 * 		rect = sprite.getLocalBounds()
 * 	else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1249
 * 		rect = sprite.getLocalBounds()
 * 	else:
 * 		rect = sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 	cdef float center_x = rect.left + rect.width * k
 * 	cdef float center_y = rect.top + rect.height * k
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1250
 * 	else:
 * 		rect = sprite.getGlobalBounds()
 * 	cdef float center_x = rect.left + rect.width * k             # <<<<<<<<<<<<<<
 * 	cdef float center_y = rect.top + rect.height * k
 * 	sprite.setScale(kx, ky)
*/
  __pyx_v_center_x = (__pyx_v_rect.left + (__pyx_v_rect.width * __pyx_v_k));

  /* "pysfml261.pyx":1251
 * 		rect = sprite.getGlobalBounds()
 * 	cdef float center_x = rect.left + rect.width * k
 * 	cdef float center_y = rect.top + rect.height * k             # <<<<<<<<<<<<<<
 * 	sprite.setScale(kx, ky)
 * 	cdef FloatRect n_rect
*/
  __pyx_v_center_y = (__pyx_v_rect.top + (__pyx_v_rect.height * __pyx_v_k));

  /* "pysfml261.pyx":1252
 * 	cdef float center_x = rect.left + rect.width * k
 * 	cdef float center_y = rect.top + rect.height * k
 * 	sprite.setScale(kx, ky)             # <<<<<<<<<<<<<<
 * 	cdef FloatRect n_rect
 * 	if local_pos:
*/
  __pyx_v_sprite->setScale(__pyx_v_kx, __pyx_v_ky);

  /* "pysfml261.pyx":1254
 * 	sprite.setScale(kx, ky)
 * 	cdef FloatRect n_rect
 * 	if local_pos:             # <<<<<<<<<<<<<<
 * 		n_rect = sprite.getLocalBounds()
 * 	else:
*/
  if (__pyx_v_local_pos) {

    /* "pysfml261.pyx":1255
 * 	cdef FloatRect n_rect
 * 	if local_pos:
 * 		n_rect = sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 	else:
 * 		n_rect = sprite.getGlobalBounds()
*/
    __pyx_v_n_rect = ((sf::FloatRect)__pyx_v_sprite->getLocalBounds());

    /* "pysfml261.pyx":1254
 * 	sprite.setScale(kx, ky)
 * 	cdef FloatRect n_rect
 * 	if local_pos:             # <<<<<<<<<<<<<<
 * 		n_rect = sprite.getLocalBounds()
 * 	else:
*/
    goto __pyx_L4;
  }

  /* "pysfml261.pyx":1257
 * 		n_rect = sprite.getLocalBounds()
 * 	else:
 * 		n_rect = sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 	cdef float left = center_x - n_rect.width * k
 * 	cdef float top = center_y - n_rect.height * k
*/
  /*else*/ {
    __pyx_v_n_rect = ((sf::FloatRect)__pyx_v_sprite->getGlobalBounds());
  }
  __pyx_L4:;

  /* "pysfml261.pyx":1258
 * 	else:
 * 		n_rect = sprite.getGlobalBounds()
 * 	cdef float left = center_x - n_rect.width * k             # <<<<<<<<<<<<<<
 * 	cdef float top = center_y - n_rect.height * k
 * 	sprite.setPosition(left, top)
*/
  __pyx_v_left = (__pyx_v_center_x - (__pyx_v_n_rect.width * __pyx_v_k));

  /* "pysfml261.pyx":1259
 * 		n_rect = sprite.getGlobalBounds()
 * 	cdef float left = center_x - n_rect.width * k
 * 	cdef float top = center_y - n_rect.height * k             # <<<<<<<<<<<<<<
 * 	sprite.setPosition(left, top)
 * 
*/
  __pyx_v_top = (__pyx_v_center_y - (__pyx_v_n_rect.height * __pyx_v_k));

  /* "pysfml261.pyx":1260
 * 	cdef float left = center_x - n_rect.width * k
 * 	cdef float top = center_y - n_rect.height * k
 * 	sprite.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_sprite->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1238
 * 
 * 
 * cdef void scaleSpriteKeepCenter(             # <<<<<<<<<<<<<<
 * 	Sprite* sprite,
 * 	float kx,
*/

  /* function exit code */
}

/* "pysfml261.pyx":1267
 * 	cdef Sprite* sprite
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		sfTexture texture,
 * 		float width = 0,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8sfSprite_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_8sfSprite_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_texture = 0;
  float __pyx_v_width;
  float __pyx_v_height;
  float __pyx_v_left;
  float __pyx_v_top;
  int __pyx_v_keep_w;
  int __pyx_v_keep_h;
  int __pyx_v_resetRect;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[8] = {0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_texture,&__pyx_mstate_global->__pyx_n_u_width,&__pyx_mstate_global->__pyx_n_u_height,&__pyx_mstate_global->__pyx_n_u_left,&__pyx_mstate_global->__pyx_n_u_top,&__pyx_mstate_global->__pyx_n_u_keep_w,&__pyx_mstate_global->__pyx_n_u_keep_h,&__pyx_mstate_global->__pyx_n_u_resetRect,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1267, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  8:
        values[7] = __Pyx_ArgRef_VARARGS(__pyx_args, 7);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[7])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  7:
        values[6] = __Pyx_ArgRef_VARARGS(__pyx_args, 6);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[6])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  6:
        values[5] = __Pyx_ArgRef_VARARGS(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_VARARGS(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 1267, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 8, i); __PYX_ERR(0, 1267, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  8:
        values[7] = __Pyx_ArgRef_VARARGS(__pyx_args, 7);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[7])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  7:
        values[6] = __Pyx_ArgRef_VARARGS(__pyx_args, 6);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[6])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  6:
        values[5] = __Pyx_ArgRef_VARARGS(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_VARARGS(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1267, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1267, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_texture = ((struct __pyx_obj_9pysfml261_sfTexture *)values[0]);
    if (values[1]) {
      __pyx_v_width = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1269, __pyx_L3_error)
    } else {
      __pyx_v_width = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_height = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1270, __pyx_L3_error)
    } else {
      __pyx_v_height = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_left = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1271, __pyx_L3_error)
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[4]) {
      __pyx_v_top = __Pyx_PyFloat_AsFloat(values[4]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
    } else {
      __pyx_v_top = ((float)0.0);
    }
    if (values[5]) {
      __pyx_v_keep_w = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_keep_w == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1273, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1273
 * 		float left = 0,
 * 		float top = 0,
 * 		bint keep_w = False,             # <<<<<<<<<<<<<<
 * 		bint keep_h = False,
 * 		bint resetRect = False):
*/
      __pyx_v_keep_w = ((int)0);
    }
    if (values[6]) {
      __pyx_v_keep_h = __Pyx_PyObject_IsTrue(values[6]); if (unlikely((__pyx_v_keep_h == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1274, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1274
 * 		float top = 0,
 * 		bint keep_w = False,
 * 		bint keep_h = False,             # <<<<<<<<<<<<<<
 * 		bint resetRect = False):
 * 		self.sprite = new Sprite()
*/
      __pyx_v_keep_h = ((int)0);
    }
    if (values[7]) {
      __pyx_v_resetRect = __Pyx_PyObject_IsTrue(values[7]); if (unlikely((__pyx_v_resetRect == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1275, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1275
 * 		bint keep_w = False,
 * 		bint keep_h = False,
 * 		bint resetRect = False):             # <<<<<<<<<<<<<<
 * 		self.sprite = new Sprite()
 * 		self.sprite.setTexture(texture.texture[0], resetRect)
*/
      __pyx_v_resetRect = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 8, __pyx_nargs); __PYX_ERR(0, 1267, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_texture), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfTexture, 1, "texture", 0))) __PYX_ERR(0, 1268, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite___cinit__(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_texture, __pyx_v_width, __pyx_v_height, __pyx_v_left, __pyx_v_top, __pyx_v_keep_w, __pyx_v_keep_h, __pyx_v_resetRect);

  /* "pysfml261.pyx":1267
 * 	cdef Sprite* sprite
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		sfTexture texture,
 * 		float width = 0,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8sfSprite___cinit__(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_texture, float __pyx_v_width, float __pyx_v_height, float __pyx_v_left, float __pyx_v_top, int __pyx_v_keep_w, int __pyx_v_keep_h, int __pyx_v_resetRect) {
  int __pyx_r;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":1276
 * 		bint keep_h = False,
 * 		bint resetRect = False):
 * 		self.sprite = new Sprite()             # <<<<<<<<<<<<<<
 * 		self.sprite.setTexture(texture.texture[0], resetRect)
 * 		if keep_w:
*/
  __pyx_v_self->sprite = new sf::Sprite();

  /* "pysfml261.pyx":1277
 * 		bint resetRect = False):
 * 		self.sprite = new Sprite()
 * 		self.sprite.setTexture(texture.texture[0], resetRect)             # <<<<<<<<<<<<<<
 * 		if keep_w:
 * 			resizeSpriteKeepWidth(self.sprite, width)
*/
  __pyx_v_self->sprite->setTexture((__pyx_v_texture->texture[0]), __pyx_v_resetRect);

  /* "pysfml261.pyx":1278
 * 		self.sprite = new Sprite()
 * 		self.sprite.setTexture(texture.texture[0], resetRect)
 * 		if keep_w:             # <<<<<<<<<<<<<<
 * 			resizeSpriteKeepWidth(self.sprite, width)
 * 		elif keep_h:
*/
  if (__pyx_v_keep_w) {

    /* "pysfml261.pyx":1279
 * 		self.sprite.setTexture(texture.texture[0], resetRect)
 * 		if keep_w:
 * 			resizeSpriteKeepWidth(self.sprite, width)             # <<<<<<<<<<<<<<
 * 		elif keep_h:
 * 			resizeSpriteKeepHeight(self.sprite, height)
*/
    __pyx_f_9pysfml261_resizeSpriteKeepWidth(__pyx_v_self->sprite, __pyx_v_width); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1279, __pyx_L1_error)

    /* "pysfml261.pyx":1278
 * 		self.sprite = new Sprite()
 * 		self.sprite.setTexture(texture.texture[0], resetRect)
 * 		if keep_w:             # <<<<<<<<<<<<<<
 * 			resizeSpriteKeepWidth(self.sprite, width)
 * 		elif keep_h:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1280
 * 		if keep_w:
 * 			resizeSpriteKeepWidth(self.sprite, width)
 * 		elif keep_h:             # <<<<<<<<<<<<<<
 * 			resizeSpriteKeepHeight(self.sprite, height)
 * 		else:
*/
  if (__pyx_v_keep_h) {

    /* "pysfml261.pyx":1281
 * 			resizeSpriteKeepWidth(self.sprite, width)
 * 		elif keep_h:
 * 			resizeSpriteKeepHeight(self.sprite, height)             # <<<<<<<<<<<<<<
 * 		else:
 * 			resizeSprite(self.sprite, width, height)
*/
    __pyx_f_9pysfml261_resizeSpriteKeepHeight(__pyx_v_self->sprite, __pyx_v_height); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1281, __pyx_L1_error)

    /* "pysfml261.pyx":1280
 * 		if keep_w:
 * 			resizeSpriteKeepWidth(self.sprite, width)
 * 		elif keep_h:             # <<<<<<<<<<<<<<
 * 			resizeSpriteKeepHeight(self.sprite, height)
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1283
 * 			resizeSpriteKeepHeight(self.sprite, height)
 * 		else:
 * 			resizeSprite(self.sprite, width, height)             # <<<<<<<<<<<<<<
 * 		self.sprite.setPosition(left, top)
 * 
*/
  /*else*/ {
    __pyx_f_9pysfml261_resizeSprite(__pyx_v_self->sprite, __pyx_v_width, __pyx_v_height); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1283, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1284
 * 		else:
 * 			resizeSprite(self.sprite, width, height)
 * 		self.sprite.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->sprite->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1267
 * 	cdef Sprite* sprite
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		sfTexture texture,
 * 		float width = 0,
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfSprite.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pysfml261.pyx":1286
 * 		self.sprite.setPosition(left, top)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.sprite is not NULL:
 * 			del self.sprite
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_8sfSprite_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_8sfSprite_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_8sfSprite_2__dealloc__(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_8sfSprite_2__dealloc__(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  int __pyx_t_1;

  /* "pysfml261.pyx":1287
 * 
 * 	def __dealloc__(self):
 * 		if self.sprite is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.sprite
 * 
*/
  __pyx_t_1 = (__pyx_v_self->sprite != NULL);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1288
 * 	def __dealloc__(self):
 * 		if self.sprite is not NULL:
 * 			del self.sprite             # <<<<<<<<<<<<<<
 * 
 * 	def intersects(self,
*/
    delete __pyx_v_self->sprite;

    /* "pysfml261.pyx":1287
 * 
 * 	def __dealloc__(self):
 * 		if self.sprite is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.sprite
 * 
*/
  }

  /* "pysfml261.pyx":1286
 * 		self.sprite.setPosition(left, top)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.sprite is not NULL:
 * 			del self.sprite
*/

  /* function exit code */
}

/* "pysfml261.pyx":1290
 * 			del self.sprite
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local_bounds = True) -> bool:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_5intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_5intersects = {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_5intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_5intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  int __pyx_v_local_bounds;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("intersects (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_local_bounds,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1290, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1290, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1290, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "intersects", 0) < 0) __PYX_ERR(0, 1290, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, i); __PYX_ERR(0, 1290, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1290, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1290, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    if (values[1]) {
      __pyx_v_local_bounds = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_local_bounds == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1292, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1292
 * 	def intersects(self,
 * 		sfSprite sprite,
 * 		bint local_bounds = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect myRect, theyRect
 * 		if local_bounds:
*/
      __pyx_v_local_bounds = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1290, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1291, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_4intersects(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_sprite, __pyx_v_local_bounds);

  /* "pysfml261.pyx":1290
 * 			del self.sprite
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local_bounds = True) -> bool:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_4intersects(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, int __pyx_v_local_bounds) {
  sf::FloatRect __pyx_v_myRect;
  sf::FloatRect __pyx_v_theyRect;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("intersects", 0);

  /* "pysfml261.pyx":1294
 * 		bint local_bounds = True) -> bool:
 * 		cdef FloatRect myRect, theyRect
 * 		if local_bounds:             # <<<<<<<<<<<<<<
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = self.sprite.getLocalBounds()
*/
  if (__pyx_v_local_bounds) {

    /* "pysfml261.pyx":1295
 * 		cdef FloatRect myRect, theyRect
 * 		if local_bounds:
 * 			myRect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			theyRect = self.sprite.getLocalBounds()
 * 		else:
*/
    __pyx_v_myRect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1296
 * 		if local_bounds:
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()
*/
    __pyx_v_theyRect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1294
 * 		bint local_bounds = True) -> bool:
 * 		cdef FloatRect myRect, theyRect
 * 		if local_bounds:             # <<<<<<<<<<<<<<
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = self.sprite.getLocalBounds()
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1298
 * 			theyRect = self.sprite.getLocalBounds()
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			theyRect = self.sprite.getGlobalBounds()
 * 		return myRect.intersects(theyRect)
*/
  /*else*/ {
    __pyx_v_myRect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());

    /* "pysfml261.pyx":1299
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()
 * 			theyRect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return myRect.intersects(theyRect)
 * 
*/
    __pyx_v_theyRect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1300
 * 			myRect = self.sprite.getGlobalBounds()
 * 			theyRect = self.sprite.getGlobalBounds()
 * 		return myRect.intersects(theyRect)             # <<<<<<<<<<<<<<
 * 
 * 	def intersects_rect(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_myRect.intersects(__pyx_v_theyRect)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1290
 * 			del self.sprite
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local_bounds = True) -> bool:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSprite.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1302
 * 		return myRect.intersects(theyRect)
 * 
 * 	def intersects_rect(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local_bounds = True) -> bool:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_7intersects_rect(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_7intersects_rect = {"intersects_rect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_7intersects_rect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_7intersects_rect(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect = 0;
  int __pyx_v_local_bounds;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("intersects_rect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_rect,&__pyx_mstate_global->__pyx_n_u_local_bounds,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1302, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1302, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1302, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "intersects_rect", 0) < 0) __PYX_ERR(0, 1302, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("intersects_rect", 0, 1, 2, i); __PYX_ERR(0, 1302, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1302, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1302, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_rect = ((struct __pyx_obj_9pysfml261_sfFloatRect *)values[0]);
    if (values[1]) {
      __pyx_v_local_bounds = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_local_bounds == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1304, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1304
 * 	def intersects_rect(self,
 * 		sfFloatRect rect,
 * 		bint local_bounds = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect myRect
 * 		if local_bounds:
*/
      __pyx_v_local_bounds = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("intersects_rect", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1302, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.intersects_rect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, 1, "rect", 0))) __PYX_ERR(0, 1303, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_6intersects_rect(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_rect, __pyx_v_local_bounds);

  /* "pysfml261.pyx":1302
 * 		return myRect.intersects(theyRect)
 * 
 * 	def intersects_rect(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local_bounds = True) -> bool:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_6intersects_rect(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect, int __pyx_v_local_bounds) {
  sf::FloatRect __pyx_v_myRect;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("intersects_rect", 0);

  /* "pysfml261.pyx":1306
 * 		bint local_bounds = True) -> bool:
 * 		cdef FloatRect myRect
 * 		if local_bounds:             # <<<<<<<<<<<<<<
 * 			myRect = self.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local_bounds) {

    /* "pysfml261.pyx":1307
 * 		cdef FloatRect myRect
 * 		if local_bounds:
 * 			myRect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()
*/
    __pyx_v_myRect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1306
 * 		bint local_bounds = True) -> bool:
 * 		cdef FloatRect myRect
 * 		if local_bounds:             # <<<<<<<<<<<<<<
 * 			myRect = self.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1309
 * 			myRect = self.sprite.getLocalBounds()
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return myRect.intersects(rect.rect[0])
 * 
*/
  /*else*/ {
    __pyx_v_myRect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1310
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()
 * 		return myRect.intersects(rect.rect[0])             # <<<<<<<<<<<<<<
 * 
 * 	def contains(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_myRect.intersects((__pyx_v_rect->rect[0]))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1302
 * 		return myRect.intersects(theyRect)
 * 
 * 	def intersects_rect(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local_bounds = True) -> bool:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSprite.intersects_rect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1312
 * 		return myRect.intersects(rect.rect[0])
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_9contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_9contains = {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_9contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_9contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  int __pyx_v_local_bounds;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("contains (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_local_bounds,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1312, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1312, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1312, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1312, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "contains", 0) < 0) __PYX_ERR(0, 1312, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1312, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1312, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1312, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1313, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1314, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_local_bounds = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_local_bounds == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1315, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1315
 * 		float x = 0,
 * 		float y = 0,
 * 		bint local_bounds = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		if local_bounds:
*/
      __pyx_v_local_bounds = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("contains", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1312, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_8contains(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_local_bounds);

  /* "pysfml261.pyx":1312
 * 		return myRect.intersects(rect.rect[0])
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_8contains(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, int __pyx_v_local_bounds) {
  sf::FloatRect __pyx_v_rect;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("contains", 0);

  /* "pysfml261.pyx":1317
 * 		bint local_bounds = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local_bounds:             # <<<<<<<<<<<<<<
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local_bounds) {

    /* "pysfml261.pyx":1318
 * 		cdef FloatRect rect
 * 		if local_bounds:
 * 			rect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1317
 * 		bint local_bounds = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local_bounds:             # <<<<<<<<<<<<<<
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1320
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return rect.contains(x, y)
 * 
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1321
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()
 * 		return rect.contains(x, y)             # <<<<<<<<<<<<<<
 * 
 * 	def move(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_rect.contains(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1312
 * 		return myRect.intersects(rect.rect[0])
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSprite.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1323
 * 		return rect.contains(x, y)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_11move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_11move = {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_11move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_11move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_dx;
  float __pyx_v_dy;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_dx,&__pyx_mstate_global->__pyx_n_u_dy,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1323, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1323, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1323, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "move", 0) < 0) __PYX_ERR(0, 1323, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1323, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1323, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_dx = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_dx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1324, __pyx_L3_error)
    } else {
      __pyx_v_dx = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_dy = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_dy == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1325, __pyx_L3_error)
    } else {
      __pyx_v_dy = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1323, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_10move(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_dx, __pyx_v_dy);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_10move(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move", 0);

  /* "pysfml261.pyx":1326
 * 		float dx = 0,
 * 		float dy = 0) -> None:
 * 		self.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	def rotate(self, float degrees = 0) -> None:
*/
  __pyx_v_self->sprite->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1323
 * 		return rect.contains(x, y)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1328
 * 		self.sprite.move(dx, dy)
 * 
 * 	def rotate(self, float degrees = 0) -> None:             # <<<<<<<<<<<<<<
 * 		self.sprite.rotate(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_13rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_13rotate = {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_13rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_13rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1328, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1328, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "rotate", 0) < 0) __PYX_ERR(0, 1328, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1328, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1328, __pyx_L3_error)
    } else {
      __pyx_v_degrees = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 1328, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_12rotate(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_12rotate(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate", 0);

  /* "pysfml261.pyx":1329
 * 
 * 	def rotate(self, float degrees = 0) -> None:
 * 		self.sprite.rotate(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def collide_shift_h(self,
*/
  __pyx_v_self->sprite->rotate(__pyx_v_degrees);

  /* "pysfml261.pyx":1328
 * 		self.sprite.move(dx, dy)
 * 
 * 	def rotate(self, float degrees = 0) -> None:             # <<<<<<<<<<<<<<
 * 		self.sprite.rotate(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1331
 * 		self.sprite.rotate(degrees)
 * 
 * 	def collide_shift_h(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_15collide_shift_h(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_15collide_shift_h = {"collide_shift_h", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_15collide_shift_h, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_15collide_shift_h(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("collide_shift_h (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1331, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1331, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1331, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "collide_shift_h", 0) < 0) __PYX_ERR(0, 1331, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("collide_shift_h", 0, 1, 2, i); __PYX_ERR(0, 1331, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1331, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1331, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    if (values[1]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1333, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1333
 * 	def collide_shift_h(self,
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect myRect, theyRect
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("collide_shift_h", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1331, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.collide_shift_h", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1332, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_14collide_shift_h(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_sprite, __pyx_v_local);

  /* "pysfml261.pyx":1331
 * 		self.sprite.rotate(degrees)
 * 
 * 	def collide_shift_h(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_14collide_shift_h(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, int __pyx_v_local) {
  sf::FloatRect __pyx_v_myRect;
  sf::FloatRect __pyx_v_theyRect;
  float __pyx_v_k;
  float __pyx_v_dx;
  float __pyx_v_dy;
  float __pyx_v_x1;
  float __pyx_v_x2;
  float __pyx_v_t_x1;
  float __pyx_v_t_x2;
  float __pyx_v_center_t_x;
  float __pyx_v_dif_x;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  float __pyx_t_2;
  __Pyx_RefNannySetupContext("collide_shift_h", 0);

  /* "pysfml261.pyx":1335
 * 		bint local = True) -> bool:
 * 		cdef FloatRect myRect, theyRect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = sprite.sprite.getLocalBounds()
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1336
 * 		cdef FloatRect myRect, theyRect
 * 		if local:
 * 			myRect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			theyRect = sprite.sprite.getLocalBounds()
 * 		else:
*/
    __pyx_v_myRect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1337
 * 		if local:
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()
*/
    __pyx_v_theyRect = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

    /* "pysfml261.pyx":1335
 * 		bint local = True) -> bool:
 * 		cdef FloatRect myRect, theyRect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = sprite.sprite.getLocalBounds()
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1339
 * 			theyRect = sprite.sprite.getLocalBounds()
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			theyRect = sprite.sprite.getGlobalBounds()
 * 		if not myRect.intersects(theyRect):
*/
  /*else*/ {
    __pyx_v_myRect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());

    /* "pysfml261.pyx":1340
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()
 * 			theyRect = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		if not myRect.intersects(theyRect):
 * 			return False
*/
    __pyx_v_theyRect = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1341
 * 			myRect = self.sprite.getGlobalBounds()
 * 			theyRect = sprite.sprite.getGlobalBounds()
 * 		if not myRect.intersects(theyRect):             # <<<<<<<<<<<<<<
 * 			return False
 * 		cdef float k = <float>.5, dx = 0, dy = 0
*/
  __pyx_t_1 = (!__pyx_v_myRect.intersects(__pyx_v_theyRect));
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1342
 * 			theyRect = sprite.sprite.getGlobalBounds()
 * 		if not myRect.intersects(theyRect):
 * 			return False             # <<<<<<<<<<<<<<
 * 		cdef float k = <float>.5, dx = 0, dy = 0
 * 		cdef float x1 = myRect.left, x2 = myRect.left + myRect.width
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "pysfml261.pyx":1341
 * 			myRect = self.sprite.getGlobalBounds()
 * 			theyRect = sprite.sprite.getGlobalBounds()
 * 		if not myRect.intersects(theyRect):             # <<<<<<<<<<<<<<
 * 			return False
 * 		cdef float k = <float>.5, dx = 0, dy = 0
*/
  }

  /* "pysfml261.pyx":1343
 * 		if not myRect.intersects(theyRect):
 * 			return False
 * 		cdef float k = <float>.5, dx = 0, dy = 0             # <<<<<<<<<<<<<<
 * 		cdef float x1 = myRect.left, x2 = myRect.left + myRect.width
 * 		cdef float t_x1 = theyRect.left, t_x2 = theyRect.left + theyRect.width
*/
  __pyx_v_k = ((float).5);
  __pyx_v_dx = 0.0;
  __pyx_v_dy = 0.0;

  /* "pysfml261.pyx":1344
 * 			return False
 * 		cdef float k = <float>.5, dx = 0, dy = 0
 * 		cdef float x1 = myRect.left, x2 = myRect.left + myRect.width             # <<<<<<<<<<<<<<
 * 		cdef float t_x1 = theyRect.left, t_x2 = theyRect.left + theyRect.width
 * 		cdef float center_t_x = theyRect.left + theyRect.width * k
*/
  __pyx_t_2 = __pyx_v_myRect.left;
  __pyx_v_x1 = __pyx_t_2;
  __pyx_v_x2 = (__pyx_v_myRect.left + __pyx_v_myRect.width);

  /* "pysfml261.pyx":1345
 * 		cdef float k = <float>.5, dx = 0, dy = 0
 * 		cdef float x1 = myRect.left, x2 = myRect.left + myRect.width
 * 		cdef float t_x1 = theyRect.left, t_x2 = theyRect.left + theyRect.width             # <<<<<<<<<<<<<<
 * 		cdef float center_t_x = theyRect.left + theyRect.width * k
 * 		cdef float dif_x = center_t_x - x1
*/
  __pyx_t_2 = __pyx_v_theyRect.left;
  __pyx_v_t_x1 = __pyx_t_2;
  __pyx_v_t_x2 = (__pyx_v_theyRect.left + __pyx_v_theyRect.width);

  /* "pysfml261.pyx":1346
 * 		cdef float x1 = myRect.left, x2 = myRect.left + myRect.width
 * 		cdef float t_x1 = theyRect.left, t_x2 = theyRect.left + theyRect.width
 * 		cdef float center_t_x = theyRect.left + theyRect.width * k             # <<<<<<<<<<<<<<
 * 		cdef float dif_x = center_t_x - x1
 * 		if dif_x > 0:
*/
  __pyx_v_center_t_x = (__pyx_v_theyRect.left + (__pyx_v_theyRect.width * __pyx_v_k));

  /* "pysfml261.pyx":1347
 * 		cdef float t_x1 = theyRect.left, t_x2 = theyRect.left + theyRect.width
 * 		cdef float center_t_x = theyRect.left + theyRect.width * k
 * 		cdef float dif_x = center_t_x - x1             # <<<<<<<<<<<<<<
 * 		if dif_x > 0:
 * 			dx = t_x1 - x2
*/
  __pyx_v_dif_x = (__pyx_v_center_t_x - __pyx_v_x1);

  /* "pysfml261.pyx":1348
 * 		cdef float center_t_x = theyRect.left + theyRect.width * k
 * 		cdef float dif_x = center_t_x - x1
 * 		if dif_x > 0:             # <<<<<<<<<<<<<<
 * 			dx = t_x1 - x2
 * 		elif dif_x < 0:
*/
  __pyx_t_1 = (__pyx_v_dif_x > 0.0);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1349
 * 		cdef float dif_x = center_t_x - x1
 * 		if dif_x > 0:
 * 			dx = t_x1 - x2             # <<<<<<<<<<<<<<
 * 		elif dif_x < 0:
 * 			dx = t_x2 - x1
*/
    __pyx_v_dx = (__pyx_v_t_x1 - __pyx_v_x2);

    /* "pysfml261.pyx":1348
 * 		cdef float center_t_x = theyRect.left + theyRect.width * k
 * 		cdef float dif_x = center_t_x - x1
 * 		if dif_x > 0:             # <<<<<<<<<<<<<<
 * 			dx = t_x1 - x2
 * 		elif dif_x < 0:
*/
    goto __pyx_L5;
  }

  /* "pysfml261.pyx":1350
 * 		if dif_x > 0:
 * 			dx = t_x1 - x2
 * 		elif dif_x < 0:             # <<<<<<<<<<<<<<
 * 			dx = t_x2 - x1
 * 		else:
*/
  __pyx_t_1 = (__pyx_v_dif_x < 0.0);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1351
 * 			dx = t_x1 - x2
 * 		elif dif_x < 0:
 * 			dx = t_x2 - x1             # <<<<<<<<<<<<<<
 * 		else:
 * 			dx = -theyRect.width * k
*/
    __pyx_v_dx = (__pyx_v_t_x2 - __pyx_v_x1);

    /* "pysfml261.pyx":1350
 * 		if dif_x > 0:
 * 			dx = t_x1 - x2
 * 		elif dif_x < 0:             # <<<<<<<<<<<<<<
 * 			dx = t_x2 - x1
 * 		else:
*/
    goto __pyx_L5;
  }

  /* "pysfml261.pyx":1353
 * 			dx = t_x2 - x1
 * 		else:
 * 			dx = -theyRect.width * k             # <<<<<<<<<<<<<<
 * 		self.sprite.move(dx, dy)
 * 		return True
*/
  /*else*/ {
    __pyx_v_dx = ((-__pyx_v_theyRect.width) * __pyx_v_k);
  }
  __pyx_L5:;

  /* "pysfml261.pyx":1354
 * 		else:
 * 			dx = -theyRect.width * k
 * 		self.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 		return True
 * 
*/
  __pyx_v_self->sprite->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1355
 * 			dx = -theyRect.width * k
 * 		self.sprite.move(dx, dy)
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * 	def collide_shift_v(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "pysfml261.pyx":1331
 * 		self.sprite.rotate(degrees)
 * 
 * 	def collide_shift_h(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1357
 * 		return True
 * 
 * 	def collide_shift_v(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_17collide_shift_v(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_17collide_shift_v = {"collide_shift_v", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_17collide_shift_v, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_17collide_shift_v(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("collide_shift_v (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1357, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1357, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1357, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "collide_shift_v", 0) < 0) __PYX_ERR(0, 1357, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("collide_shift_v", 0, 1, 2, i); __PYX_ERR(0, 1357, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1357, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1357, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    if (values[1]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1359
 * 	def collide_shift_v(self,
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect myRect, theyRect
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("collide_shift_v", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1357, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.collide_shift_v", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1358, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_16collide_shift_v(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_sprite, __pyx_v_local);

  /* "pysfml261.pyx":1357
 * 		return True
 * 
 * 	def collide_shift_v(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_16collide_shift_v(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, int __pyx_v_local) {
  sf::FloatRect __pyx_v_myRect;
  sf::FloatRect __pyx_v_theyRect;
  float __pyx_v_dx;
  float __pyx_v_dy;
  float __pyx_v_k;
  float __pyx_v_y1;
  float __pyx_v_y2;
  float __pyx_v_t_y1;
  float __pyx_v_t_y2;
  float __pyx_v_center_t_y;
  float __pyx_v_dif_y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  float __pyx_t_2;
  __Pyx_RefNannySetupContext("collide_shift_v", 0);

  /* "pysfml261.pyx":1361
 * 		bint local = True) -> bool:
 * 		cdef FloatRect myRect, theyRect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = sprite.sprite.getLocalBounds()
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1362
 * 		cdef FloatRect myRect, theyRect
 * 		if local:
 * 			myRect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			theyRect = sprite.sprite.getLocalBounds()
 * 		else:
*/
    __pyx_v_myRect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1363
 * 		if local:
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()
*/
    __pyx_v_theyRect = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

    /* "pysfml261.pyx":1361
 * 		bint local = True) -> bool:
 * 		cdef FloatRect myRect, theyRect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			myRect = self.sprite.getLocalBounds()
 * 			theyRect = sprite.sprite.getLocalBounds()
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1365
 * 			theyRect = sprite.sprite.getLocalBounds()
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			theyRect = sprite.sprite.getGlobalBounds()
 * 		if not myRect.intersects(theyRect):
*/
  /*else*/ {
    __pyx_v_myRect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());

    /* "pysfml261.pyx":1366
 * 		else:
 * 			myRect = self.sprite.getGlobalBounds()
 * 			theyRect = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		if not myRect.intersects(theyRect):
 * 			return False
*/
    __pyx_v_theyRect = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1367
 * 			myRect = self.sprite.getGlobalBounds()
 * 			theyRect = sprite.sprite.getGlobalBounds()
 * 		if not myRect.intersects(theyRect):             # <<<<<<<<<<<<<<
 * 			return False
 * 		cdef float dx = 0, dy = 0, k = <float>.5
*/
  __pyx_t_1 = (!__pyx_v_myRect.intersects(__pyx_v_theyRect));
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1368
 * 			theyRect = sprite.sprite.getGlobalBounds()
 * 		if not myRect.intersects(theyRect):
 * 			return False             # <<<<<<<<<<<<<<
 * 		cdef float dx = 0, dy = 0, k = <float>.5
 * 		cdef float y1 = myRect.top, y2 = myRect.top + myRect.height
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "pysfml261.pyx":1367
 * 			myRect = self.sprite.getGlobalBounds()
 * 			theyRect = sprite.sprite.getGlobalBounds()
 * 		if not myRect.intersects(theyRect):             # <<<<<<<<<<<<<<
 * 			return False
 * 		cdef float dx = 0, dy = 0, k = <float>.5
*/
  }

  /* "pysfml261.pyx":1369
 * 		if not myRect.intersects(theyRect):
 * 			return False
 * 		cdef float dx = 0, dy = 0, k = <float>.5             # <<<<<<<<<<<<<<
 * 		cdef float y1 = myRect.top, y2 = myRect.top + myRect.height
 * 		cdef float t_y1 = theyRect.top, t_y2 = theyRect.top + theyRect.height
*/
  __pyx_v_dx = 0.0;
  __pyx_v_dy = 0.0;
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1370
 * 			return False
 * 		cdef float dx = 0, dy = 0, k = <float>.5
 * 		cdef float y1 = myRect.top, y2 = myRect.top + myRect.height             # <<<<<<<<<<<<<<
 * 		cdef float t_y1 = theyRect.top, t_y2 = theyRect.top + theyRect.height
 * 		cdef float center_t_y = theyRect.top + theyRect.height * k
*/
  __pyx_t_2 = __pyx_v_myRect.top;
  __pyx_v_y1 = __pyx_t_2;
  __pyx_v_y2 = (__pyx_v_myRect.top + __pyx_v_myRect.height);

  /* "pysfml261.pyx":1371
 * 		cdef float dx = 0, dy = 0, k = <float>.5
 * 		cdef float y1 = myRect.top, y2 = myRect.top + myRect.height
 * 		cdef float t_y1 = theyRect.top, t_y2 = theyRect.top + theyRect.height             # <<<<<<<<<<<<<<
 * 		cdef float center_t_y = theyRect.top + theyRect.height * k
 * 		cdef float dif_y = center_t_y - y1
*/
  __pyx_t_2 = __pyx_v_theyRect.top;
  __pyx_v_t_y1 = __pyx_t_2;
  __pyx_v_t_y2 = (__pyx_v_theyRect.top + __pyx_v_theyRect.height);

  /* "pysfml261.pyx":1372
 * 		cdef float y1 = myRect.top, y2 = myRect.top + myRect.height
 * 		cdef float t_y1 = theyRect.top, t_y2 = theyRect.top + theyRect.height
 * 		cdef float center_t_y = theyRect.top + theyRect.height * k             # <<<<<<<<<<<<<<
 * 		cdef float dif_y = center_t_y - y1
 * 		if dif_y > 0:
*/
  __pyx_v_center_t_y = (__pyx_v_theyRect.top + (__pyx_v_theyRect.height * __pyx_v_k));

  /* "pysfml261.pyx":1373
 * 		cdef float t_y1 = theyRect.top, t_y2 = theyRect.top + theyRect.height
 * 		cdef float center_t_y = theyRect.top + theyRect.height * k
 * 		cdef float dif_y = center_t_y - y1             # <<<<<<<<<<<<<<
 * 		if dif_y > 0:
 * 			dy = t_y1 - y2
*/
  __pyx_v_dif_y = (__pyx_v_center_t_y - __pyx_v_y1);

  /* "pysfml261.pyx":1374
 * 		cdef float center_t_y = theyRect.top + theyRect.height * k
 * 		cdef float dif_y = center_t_y - y1
 * 		if dif_y > 0:             # <<<<<<<<<<<<<<
 * 			dy = t_y1 - y2
 * 		elif dif_y < 0:
*/
  __pyx_t_1 = (__pyx_v_dif_y > 0.0);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1375
 * 		cdef float dif_y = center_t_y - y1
 * 		if dif_y > 0:
 * 			dy = t_y1 - y2             # <<<<<<<<<<<<<<
 * 		elif dif_y < 0:
 * 			dy = t_y2 - y1
*/
    __pyx_v_dy = (__pyx_v_t_y1 - __pyx_v_y2);

    /* "pysfml261.pyx":1374
 * 		cdef float center_t_y = theyRect.top + theyRect.height * k
 * 		cdef float dif_y = center_t_y - y1
 * 		if dif_y > 0:             # <<<<<<<<<<<<<<
 * 			dy = t_y1 - y2
 * 		elif dif_y < 0:
*/
    goto __pyx_L5;
  }

  /* "pysfml261.pyx":1376
 * 		if dif_y > 0:
 * 			dy = t_y1 - y2
 * 		elif dif_y < 0:             # <<<<<<<<<<<<<<
 * 			dy = t_y2 - y1
 * 		else:
*/
  __pyx_t_1 = (__pyx_v_dif_y < 0.0);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1377
 * 			dy = t_y1 - y2
 * 		elif dif_y < 0:
 * 			dy = t_y2 - y1             # <<<<<<<<<<<<<<
 * 		else:
 * 			dy = -theyRect.height * k
*/
    __pyx_v_dy = (__pyx_v_t_y2 - __pyx_v_y1);

    /* "pysfml261.pyx":1376
 * 		if dif_y > 0:
 * 			dy = t_y1 - y2
 * 		elif dif_y < 0:             # <<<<<<<<<<<<<<
 * 			dy = t_y2 - y1
 * 		else:
*/
    goto __pyx_L5;
  }

  /* "pysfml261.pyx":1379
 * 			dy = t_y2 - y1
 * 		else:
 * 			dy = -theyRect.height * k             # <<<<<<<<<<<<<<
 * 		self.sprite.move(dx, dy)
 * 		return True
*/
  /*else*/ {
    __pyx_v_dy = ((-__pyx_v_theyRect.height) * __pyx_v_k);
  }
  __pyx_L5:;

  /* "pysfml261.pyx":1380
 * 		else:
 * 			dy = -theyRect.height * k
 * 		self.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 		return True
 * 
*/
  __pyx_v_self->sprite->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1381
 * 			dy = -theyRect.height * k
 * 		self.sprite.move(dx, dy)
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:
*/
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "pysfml261.pyx":1357
 * 		return True
 * 
 * 	def collide_shift_v(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1383
 * 		return True
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = self.sprite.getLocalBounds()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_8sfSprite_19get_local_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_19get_local_bounds = {"get_local_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_19get_local_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_8sfSprite_19get_local_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_local_bounds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_local_bounds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_local_bounds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_18get_local_bounds(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_8sfSprite_18get_local_bounds(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  sf::FloatRect __pyx_v_rect;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_local_bounds", 0);

  /* "pysfml261.pyx":1384
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect rect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
*/
  __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

  /* "pysfml261.pyx":1385
 * 	def get_local_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect rect = self.sprite.getLocalBounds()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)             # <<<<<<<<<<<<<<
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_rect.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_rect.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_rect.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_rect.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1385, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1383
 * 		return True
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = self.sprite.getLocalBounds()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfSprite.get_local_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1387
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = self.sprite.getGlobalBounds()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_8sfSprite_21get_global_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_21get_global_bounds = {"get_global_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_21get_global_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_8sfSprite_21get_global_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_global_bounds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_global_bounds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_global_bounds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_20get_global_bounds(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_8sfSprite_20get_global_bounds(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  sf::FloatRect __pyx_v_rect;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_global_bounds", 0);

  /* "pysfml261.pyx":1388
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect rect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
*/
  __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());

  /* "pysfml261.pyx":1389
 * 	def get_global_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect rect = self.sprite.getGlobalBounds()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)             # <<<<<<<<<<<<<<
 * 
 * 	def get_rotation(self) -> float:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_rect.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_rect.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_rect.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_rect.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1389, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1387
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = self.sprite.getGlobalBounds()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfSprite.get_global_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1391
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sprite.getRotation()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_23get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_23get_rotation = {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_23get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_23get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_rotation", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_rotation", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_22get_rotation(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_22get_rotation(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_rotation", 0);

  /* "pysfml261.pyx":1392
 * 
 * 	def get_rotation(self) -> float:
 * 		return self.sprite.getRotation()             # <<<<<<<<<<<<<<
 * 
 * 	def set_rotation(self, float degrees = 0) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->sprite->getRotation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1391
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sprite.getRotation()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSprite.get_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1394
 * 		return self.sprite.getRotation()
 * 
 * 	def set_rotation(self, float degrees = 0) -> None:             # <<<<<<<<<<<<<<
 * 		self.sprite.setRotation(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_25set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_25set_rotation = {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_25set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_25set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1394, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1394, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_rotation", 0) < 0) __PYX_ERR(0, 1394, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1394, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1394, __pyx_L3_error)
    } else {
      __pyx_v_degrees = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_rotation", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 1394, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.set_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_24set_rotation(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_24set_rotation(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation", 0);

  /* "pysfml261.pyx":1395
 * 
 * 	def set_rotation(self, float degrees = 0) -> None:
 * 		self.sprite.setRotation(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def get_scale(self) -> tuple[float, float]:
*/
  __pyx_v_self->sprite->setRotation(__pyx_v_degrees);

  /* "pysfml261.pyx":1394
 * 		return self.sprite.getRotation()
 * 
 * 	def set_rotation(self, float degrees = 0) -> None:             # <<<<<<<<<<<<<<
 * 		self.sprite.setRotation(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1397
 * 		self.sprite.setRotation(degrees)
 * 
 * 	def get_scale(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
 * 		return (scale.x, scale.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_27get_scale(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_27get_scale = {"get_scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_27get_scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_27get_scale(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_scale (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_scale", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_scale", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_26get_scale(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_26get_scale(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  sf::Vector2f __pyx_v_scale;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_scale", 0);

  /* "pysfml261.pyx":1398
 * 
 * 	def get_scale(self) -> tuple[float, float]:
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()             # <<<<<<<<<<<<<<
 * 		return (scale.x, scale.y)
 * 
*/
  __pyx_v_scale = ((sf::Vector2f const )__pyx_v_self->sprite->getScale());

  /* "pysfml261.pyx":1399
 * 	def get_scale(self) -> tuple[float, float]:
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
 * 		return (scale.x, scale.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_scale(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_scale.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1399, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1399, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1397
 * 		self.sprite.setRotation(degrees)
 * 
 * 	def get_scale(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
 * 		return (scale.x, scale.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfSprite.get_scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1401
 * 		return (scale.x, scale.y)
 * 
 * 	def set_scale(self,             # <<<<<<<<<<<<<<
 * 		float kx = 1,
 * 		float ky = 1) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_29set_scale(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_29set_scale = {"set_scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_29set_scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_29set_scale(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_kx;
  float __pyx_v_ky;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_scale (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_kx,&__pyx_mstate_global->__pyx_n_u_ky,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1401, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1401, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1401, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_scale", 0) < 0) __PYX_ERR(0, 1401, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1401, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1401, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_kx = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_kx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1402, __pyx_L3_error)
    } else {
      __pyx_v_kx = ((float)1.0);
    }
    if (values[1]) {
      __pyx_v_ky = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_ky == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1403, __pyx_L3_error)
    } else {
      __pyx_v_ky = ((float)1.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_scale", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1401, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.set_scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_28set_scale(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_kx, __pyx_v_ky);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_28set_scale(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_kx, float __pyx_v_ky) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_scale", 0);

  /* "pysfml261.pyx":1404
 * 		float kx = 1,
 * 		float ky = 1) -> None:
 * 		self.sprite.setScale(kx, ky)             # <<<<<<<<<<<<<<
 * 
 * 	def get_color(self) -> sfColor:
*/
  __pyx_v_self->sprite->setScale(__pyx_v_kx, __pyx_v_ky);

  /* "pysfml261.pyx":1401
 * 		return (scale.x, scale.y)
 * 
 * 	def set_scale(self,             # <<<<<<<<<<<<<<
 * 		float kx = 1,
 * 		float ky = 1) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1406
 * 		self.sprite.setScale(kx, ky)
 * 
 * 	def get_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.sprite.getColor()
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pw_9pysfml261_8sfSprite_31get_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_31get_color = {"get_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_31get_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pw_9pysfml261_8sfSprite_31get_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfColor *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_color (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_color", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_color", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_30get_color(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfColor *__pyx_pf_9pysfml261_8sfSprite_30get_color(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  sf::Color __pyx_v_clr;
  struct __pyx_obj_9pysfml261_sfColor *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_color", 0);

  /* "pysfml261.pyx":1407
 * 
 * 	def get_color(self) -> sfColor:
 * 		cdef Color clr = <const Color>self.sprite.getColor()             # <<<<<<<<<<<<<<
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
 * 
*/
  __pyx_v_clr = ((sf::Color const )__pyx_v_self->sprite->getColor());

  /* "pysfml261.pyx":1408
 * 	def get_color(self) -> sfColor:
 * 		cdef Color clr = <const Color>self.sprite.getColor()
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)             # <<<<<<<<<<<<<<
 * 
 * 	def set_color(self, sfColor color) -> None:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor); 
  __pyx_t_4 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.r); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.g); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.b); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.a); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1408, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfColor *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1406
 * 		self.sprite.setScale(kx, ky)
 * 
 * 	def get_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.sprite.getColor()
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfSprite.get_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1410
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
 * 
 * 	def set_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr
 * 		clr.r = color.r
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_33set_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_33set_color = {"set_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_33set_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_33set_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_color (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_color,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1410, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1410, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_color", 0) < 0) __PYX_ERR(0, 1410, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_color", 1, 1, 1, i); __PYX_ERR(0, 1410, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1410, __pyx_L3_error)
    }
    __pyx_v_color = ((struct __pyx_obj_9pysfml261_sfColor *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_color", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1410, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.set_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor, 1, "color", 0))) __PYX_ERR(0, 1410, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_32set_color(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_color);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_32set_color(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color) {
  sf::Color __pyx_v_clr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  unsigned int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_color", 0);

  /* "pysfml261.pyx":1412
 * 	def set_color(self, sfColor color) -> None:
 * 		cdef Color clr
 * 		clr.r = color.r             # <<<<<<<<<<<<<<
 * 		clr.g = color.g
 * 		clr.b = color.b
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_n_u_r); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_As_unsigned_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1412, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_clr.r = __pyx_t_2;

  /* "pysfml261.pyx":1413
 * 		cdef Color clr
 * 		clr.r = color.r
 * 		clr.g = color.g             # <<<<<<<<<<<<<<
 * 		clr.b = color.b
 * 		clr.a = color.a
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_n_u_g); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_As_unsigned_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_clr.g = __pyx_t_2;

  /* "pysfml261.pyx":1414
 * 		clr.r = color.r
 * 		clr.g = color.g
 * 		clr.b = color.b             # <<<<<<<<<<<<<<
 * 		clr.a = color.a
 * 		self.sprite.setColor(clr)
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_n_u_b); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_As_unsigned_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_clr.b = __pyx_t_2;

  /* "pysfml261.pyx":1415
 * 		clr.g = color.g
 * 		clr.b = color.b
 * 		clr.a = color.a             # <<<<<<<<<<<<<<
 * 		self.sprite.setColor(clr)
 * 
*/
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_n_u_a); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1415, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_As_unsigned_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1415, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_clr.a = __pyx_t_2;

  /* "pysfml261.pyx":1416
 * 		clr.b = color.b
 * 		clr.a = color.a
 * 		self.sprite.setColor(clr)             # <<<<<<<<<<<<<<
 * 
 * 	def get_position(self) -> tuple[float, float]:
*/
  __pyx_v_self->sprite->setColor(__pyx_v_clr);

  /* "pysfml261.pyx":1410
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
 * 
 * 	def set_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr
 * 		clr.r = color.r
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSprite.set_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1418
 * 		self.sprite.setColor(clr)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		return (pos.x, pos.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_35get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_35get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_35get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_35get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_34get_position(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_34get_position(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":1419
 * 
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y)
 * 
*/
  __pyx_v_pos = ((sf::Vector2f const )__pyx_v_self->sprite->getPosition());

  /* "pysfml261.pyx":1420
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		return (pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_position(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1420, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1420, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1418
 * 		self.sprite.setColor(clr)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		return (pos.x, pos.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfSprite.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1422
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_37set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_37set_position = {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_37set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_37set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_left;
  float __pyx_v_top;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_left,&__pyx_mstate_global->__pyx_n_u_top,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1422, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1422, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1422, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_position", 0) < 0) __PYX_ERR(0, 1422, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1422, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1422, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_left = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1423, __pyx_L3_error)
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_top = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1424, __pyx_L3_error)
    } else {
      __pyx_v_top = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_position", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1422, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.set_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_36set_position(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_left, __pyx_v_top);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_36set_position(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_left, float __pyx_v_top) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position", 0);

  /* "pysfml261.pyx":1425
 * 		float left = 0,
 * 		float top = 0) -> None:
 * 		self.sprite.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 
 * 	def get_center(self, bint local=True) -> tuple[float, float]:
*/
  __pyx_v_self->sprite->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1422
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1427
 * 		self.sprite.setPosition(left, top)
 * 
 * 	def get_center(self, bint local=True) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_39get_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_39get_center = {"get_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_39get_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_39get_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1427, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1427, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "get_center", 0) < 0) __PYX_ERR(0, 1427, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1427, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1427, __pyx_L3_error)
    } else {
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_center", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 1427, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.get_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_38get_center(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_local);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_38get_center(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect;
  float __pyx_v_k;
  float __pyx_v_center_x;
  float __pyx_v_center_y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_center", 0);

  /* "pysfml261.pyx":1429
 * 	def get_center(self, bint local=True) -> tuple[float, float]:
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		if local:
 * 			rect = self.sprite.getLocalBounds()
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1430
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1431
 * 		cdef float k = <float>.5
 * 		if local:
 * 			rect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1430
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1433
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float center_x = rect.left + rect.width * k
 * 		cdef float center_y = rect.top + rect.height * k
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1434
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()
 * 		cdef float center_x = rect.left + rect.width * k             # <<<<<<<<<<<<<<
 * 		cdef float center_y = rect.top + rect.height * k
 * 		return (center_x, center_y)
*/
  __pyx_v_center_x = (__pyx_v_rect.left + (__pyx_v_rect.width * __pyx_v_k));

  /* "pysfml261.pyx":1435
 * 			rect = self.sprite.getGlobalBounds()
 * 		cdef float center_x = rect.left + rect.width * k
 * 		cdef float center_y = rect.top + rect.height * k             # <<<<<<<<<<<<<<
 * 		return (center_x, center_y)
 * 
*/
  __pyx_v_center_y = (__pyx_v_rect.top + (__pyx_v_rect.height * __pyx_v_k));

  /* "pysfml261.pyx":1436
 * 		cdef float center_x = rect.left + rect.width * k
 * 		cdef float center_y = rect.top + rect.height * k
 * 		return (center_x, center_y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_center(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_center_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_center_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1436, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1436, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1427
 * 		self.sprite.setPosition(left, top)
 * 
 * 	def get_center(self, bint local=True) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfSprite.get_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1438
 * 		return (center_x, center_y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_41set_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_41set_center = {"set_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_41set_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_41set_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_center_x;
  float __pyx_v_center_y;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_center_x,&__pyx_mstate_global->__pyx_n_u_center_y,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1438, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1438, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1438, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1438, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_center", 0) < 0) __PYX_ERR(0, 1438, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1438, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1438, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1438, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_center_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_center_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1439, __pyx_L3_error)
    } else {
      __pyx_v_center_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_center_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_center_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1440, __pyx_L3_error)
    } else {
      __pyx_v_center_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1441, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1441
 * 		float center_x = 0,
 * 		float center_y = 0,
 * 		bint local=True) -> None:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_center", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1438, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.set_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_40set_center(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_center_x, __pyx_v_center_y, __pyx_v_local);

  /* "pysfml261.pyx":1438
 * 		return (center_x, center_y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0,
*/

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_40set_center(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_center_x, float __pyx_v_center_y, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect;
  float __pyx_v_k;
  float __pyx_v_left;
  float __pyx_v_top;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_center", 0);

  /* "pysfml261.pyx":1443
 * 		bint local=True) -> None:
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		if local:
 * 			rect = self.sprite.getLocalBounds()
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1444
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1445
 * 		cdef float k = <float>.5
 * 		if local:
 * 			rect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1444
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1447
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float left = center_x - rect.width * k
 * 		cdef float top = center_y - rect.height * k
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1448
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()
 * 		cdef float left = center_x - rect.width * k             # <<<<<<<<<<<<<<
 * 		cdef float top = center_y - rect.height * k
 * 		self.sprite.setPosition(left, top)
*/
  __pyx_v_left = (__pyx_v_center_x - (__pyx_v_rect.width * __pyx_v_k));

  /* "pysfml261.pyx":1449
 * 			rect = self.sprite.getGlobalBounds()
 * 		cdef float left = center_x - rect.width * k
 * 		cdef float top = center_y - rect.height * k             # <<<<<<<<<<<<<<
 * 		self.sprite.setPosition(left, top)
 * 
*/
  __pyx_v_top = (__pyx_v_center_y - (__pyx_v_rect.height * __pyx_v_k));

  /* "pysfml261.pyx":1450
 * 		cdef float left = center_x - rect.width * k
 * 		cdef float top = center_y - rect.height * k
 * 		self.sprite.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 
 * 	def set_alpha(self, int a) -> None:
*/
  __pyx_v_self->sprite->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1438
 * 		return (center_x, center_y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1452
 * 		self.sprite.setPosition(left, top)
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		color.a = a
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_43set_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_43set_alpha = {"set_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_43set_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_43set_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_a;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_a,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1452, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1452, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_alpha", 0) < 0) __PYX_ERR(0, 1452, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_alpha", 1, 1, 1, i); __PYX_ERR(0, 1452, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1452, __pyx_L3_error)
    }
    __pyx_v_a = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_a == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1452, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_alpha", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1452, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.set_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_42set_alpha(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_a);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_42set_alpha(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, int __pyx_v_a) {
  sf::Color __pyx_v_color;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha", 0);

  /* "pysfml261.pyx":1453
 * 
 * 	def set_alpha(self, int a) -> None:
 * 		cdef Color color = <const Color>self.sprite.getColor()             # <<<<<<<<<<<<<<
 * 		color.a = a
 * 		self.sprite.setColor(color)
*/
  __pyx_v_color = ((sf::Color const )__pyx_v_self->sprite->getColor());

  /* "pysfml261.pyx":1454
 * 	def set_alpha(self, int a) -> None:
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		color.a = a             # <<<<<<<<<<<<<<
 * 		self.sprite.setColor(color)
 * 
*/
  __pyx_v_color.a = __pyx_v_a;

  /* "pysfml261.pyx":1455
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		color.a = a
 * 		self.sprite.setColor(color)             # <<<<<<<<<<<<<<
 * 
 * 	def get_alpha(self) -> int:
*/
  __pyx_v_self->sprite->setColor(__pyx_v_color);

  /* "pysfml261.pyx":1452
 * 		self.sprite.setPosition(left, top)
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		color.a = a
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1457
 * 		self.sprite.setColor(color)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		return color.a
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_45get_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_45get_alpha = {"get_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_45get_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_45get_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_alpha (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_alpha", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_alpha", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_44get_alpha(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_44get_alpha(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  sf::Color __pyx_v_color;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_alpha", 0);

  /* "pysfml261.pyx":1458
 * 
 * 	def get_alpha(self) -> int:
 * 		cdef Color color = <const Color>self.sprite.getColor()             # <<<<<<<<<<<<<<
 * 		return color.a
 * 
*/
  __pyx_v_color = ((sf::Color const )__pyx_v_self->sprite->getColor());

  /* "pysfml261.pyx":1459
 * 	def get_alpha(self) -> int:
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		return color.a             # <<<<<<<<<<<<<<
 * 
 * 	def in_area(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_color.a); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 1459, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1457
 * 		self.sprite.setColor(color)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		return color.a
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSprite.get_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1461
 * 		return color.a
 * 
 * 	def in_area(self,             # <<<<<<<<<<<<<<
 * 		float x1 = 0,
 * 		float x2 = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_47in_area(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_47in_area = {"in_area", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_47in_area, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_47in_area(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x1;
  float __pyx_v_x2;
  float __pyx_v_y1;
  float __pyx_v_y2;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("in_area (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x1,&__pyx_mstate_global->__pyx_n_u_x2,&__pyx_mstate_global->__pyx_n_u_y1,&__pyx_mstate_global->__pyx_n_u_y2,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1461, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "in_area", 0) < 0) __PYX_ERR(0, 1461, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1461, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x1 = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1462, __pyx_L3_error)
    } else {
      __pyx_v_x1 = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_x2 = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_x2 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1463, __pyx_L3_error)
    } else {
      __pyx_v_x2 = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_y1 = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_y1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1464, __pyx_L3_error)
    } else {
      __pyx_v_y1 = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_y2 = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_y2 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1465, __pyx_L3_error)
    } else {
      __pyx_v_y2 = ((float)0.0);
    }
    if (values[4]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1466, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1466
 * 		float y1 = 0,
 * 		float y2 = 0,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("in_area", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 1461, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.in_area", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_46in_area(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_x1, __pyx_v_x2, __pyx_v_y1, __pyx_v_y2, __pyx_v_local);

  /* "pysfml261.pyx":1461
 * 		return color.a
 * 
 * 	def in_area(self,             # <<<<<<<<<<<<<<
 * 		float x1 = 0,
 * 		float x2 = 0,
*/

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_46in_area(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, float __pyx_v_x1, float __pyx_v_x2, float __pyx_v_y1, float __pyx_v_y2, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect;
  float __pyx_v_width;
  float __pyx_v_height;
  sf::FloatRect __pyx_v_area;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("in_area", 0);

  /* "pysfml261.pyx":1468
 * 		bint local = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1469
 * 		cdef FloatRect rect
 * 		if local:
 * 			rect = self.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getLocalBounds());

    /* "pysfml261.pyx":1468
 * 		bint local = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1471
 * 			rect = self.sprite.getLocalBounds()
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float width = fabs(x2 - x1), height = fabs(y2 - y1)
 * 		cdef FloatRect area
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1472
 * 		else:
 * 			rect = self.sprite.getGlobalBounds()
 * 		cdef float width = fabs(x2 - x1), height = fabs(y2 - y1)             # <<<<<<<<<<<<<<
 * 		cdef FloatRect area
 * 		area.left = x1
*/
  __pyx_v_width = fabs((__pyx_v_x2 - __pyx_v_x1));
  __pyx_v_height = fabs((__pyx_v_y2 - __pyx_v_y1));

  /* "pysfml261.pyx":1474
 * 		cdef float width = fabs(x2 - x1), height = fabs(y2 - y1)
 * 		cdef FloatRect area
 * 		area.left = x1             # <<<<<<<<<<<<<<
 * 		area.top = y1
 * 		area.width = width
*/
  __pyx_v_area.left = __pyx_v_x1;

  /* "pysfml261.pyx":1475
 * 		cdef FloatRect area
 * 		area.left = x1
 * 		area.top = y1             # <<<<<<<<<<<<<<
 * 		area.width = width
 * 		area.height = height
*/
  __pyx_v_area.top = __pyx_v_y1;

  /* "pysfml261.pyx":1476
 * 		area.left = x1
 * 		area.top = y1
 * 		area.width = width             # <<<<<<<<<<<<<<
 * 		area.height = height
 * 		return rect.intersects(area)
*/
  __pyx_v_area.width = __pyx_v_width;

  /* "pysfml261.pyx":1477
 * 		area.top = y1
 * 		area.width = width
 * 		area.height = height             # <<<<<<<<<<<<<<
 * 		return rect.intersects(area)
 * 
*/
  __pyx_v_area.height = __pyx_v_height;

  /* "pysfml261.pyx":1478
 * 		area.width = width
 * 		area.height = height
 * 		return rect.intersects(area)             # <<<<<<<<<<<<<<
 * 
 * 	def clone(self, sfTexture texture) -> sfSprite:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_rect.intersects(__pyx_v_area)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1461
 * 		return color.a
 * 
 * 	def in_area(self,             # <<<<<<<<<<<<<<
 * 		float x1 = 0,
 * 		float x2 = 0,
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfSprite.in_area", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1480
 * 		return rect.intersects(area)
 * 
 * 	def clone(self, sfTexture texture) -> sfSprite:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfSprite *__pyx_pw_9pysfml261_8sfSprite_49clone(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_49clone = {"clone", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_49clone, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfSprite *__pyx_pw_9pysfml261_8sfSprite_49clone(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_texture = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_texture,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1480, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1480, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "clone", 0) < 0) __PYX_ERR(0, 1480, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("clone", 1, 1, 1, i); __PYX_ERR(0, 1480, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1480, __pyx_L3_error)
    }
    __pyx_v_texture = ((struct __pyx_obj_9pysfml261_sfTexture *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("clone", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1480, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_texture), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfTexture, 1, "texture", 0))) __PYX_ERR(0, 1480, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_48clone(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v_texture);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfSprite *__pyx_pf_9pysfml261_8sfSprite_48clone(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, struct __pyx_obj_9pysfml261_sfTexture *__pyx_v_texture) {
  sf::Vector2f __pyx_v_pos;
  sf::Vector2f __pyx_v_scale;
  sf::Vector2u __pyx_v_textureSize;
  float __pyx_v_width;
  float __pyx_v_height;
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pysfml261.pyx":1481
 * 
 * 	def clone(self, sfTexture texture) -> sfSprite:
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()             # <<<<<<<<<<<<<<
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
 * 		cdef Vector2u textureSize = self.sprite.getTexture().getSize()
*/
  __pyx_v_pos = ((sf::Vector2f const )__pyx_v_self->sprite->getPosition());

  /* "pysfml261.pyx":1482
 * 	def clone(self, sfTexture texture) -> sfSprite:
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()             # <<<<<<<<<<<<<<
 * 		cdef Vector2u textureSize = self.sprite.getTexture().getSize()
 * 		cdef float width = textureSize.x * scale.x, height = textureSize.y * scale.y
*/
  __pyx_v_scale = ((sf::Vector2f const )__pyx_v_self->sprite->getScale());

  /* "pysfml261.pyx":1483
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
 * 		cdef Vector2u textureSize = self.sprite.getTexture().getSize()             # <<<<<<<<<<<<<<
 * 		cdef float width = textureSize.x * scale.x, height = textureSize.y * scale.y
 * 		return sfSprite(texture, width, height, pos.x, pos.y)
*/
  __pyx_v_textureSize = ((sf::Vector2u)__pyx_v_self->sprite->getTexture()->getSize());

  /* "pysfml261.pyx":1484
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
 * 		cdef Vector2u textureSize = self.sprite.getTexture().getSize()
 * 		cdef float width = textureSize.x * scale.x, height = textureSize.y * scale.y             # <<<<<<<<<<<<<<
 * 		return sfSprite(texture, width, height, pos.x, pos.y)
 * 
*/
  __pyx_v_width = (__pyx_v_textureSize.x * __pyx_v_scale.x);
  __pyx_v_height = (__pyx_v_textureSize.y * __pyx_v_scale.y);

  /* "pysfml261.pyx":1485
 * 		cdef Vector2u textureSize = self.sprite.getTexture().getSize()
 * 		cdef float width = textureSize.x * scale.x, height = textureSize.y * scale.y
 * 		return sfSprite(texture, width, height, pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_width); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_height); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[6] = {__pyx_t_2, ((PyObject *)__pyx_v_texture), __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (6-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1485, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1480
 * 		return rect.intersects(area)
 * 
 * 	def clone(self, sfTexture texture) -> sfSprite:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfSprite.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_51__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_51__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_51__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_51__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_50__reduce_cython__(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_50__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfSprite.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfSprite_53__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfSprite_53__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_53__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfSprite_53__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfSprite.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfSprite_52__setstate_cython__(((struct __pyx_obj_9pysfml261_sfSprite *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfSprite_52__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfSprite.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1490
 * cdef class TransformSfSprite:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def keep_their_distance(
 * 		sfSprite sprite1,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_1keep_their_distance(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_1keep_their_distance = {"keep_their_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_1keep_their_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_1keep_their_distance(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1 = 0;
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2 = 0;
  float __pyx_v_distance_x;
  float __pyx_v_distance_y;
  int __pyx_v_keep_x;
  int __pyx_v_keep_y;
  int __pyx_v_sprite1_main;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[8] = {0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("keep_their_distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite1,&__pyx_mstate_global->__pyx_n_u_sprite2,&__pyx_mstate_global->__pyx_n_u_distance_x,&__pyx_mstate_global->__pyx_n_u_distance_y,&__pyx_mstate_global->__pyx_n_u_keep_x,&__pyx_mstate_global->__pyx_n_u_keep_y,&__pyx_mstate_global->__pyx_n_u_sprite1_main,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1490, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  8:
        values[7] = __Pyx_ArgRef_FASTCALL(__pyx_args, 7);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[7])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  7:
        values[6] = __Pyx_ArgRef_FASTCALL(__pyx_args, 6);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[6])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  6:
        values[5] = __Pyx_ArgRef_FASTCALL(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "keep_their_distance", 0) < 0) __PYX_ERR(0, 1490, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("keep_their_distance", 0, 2, 8, i); __PYX_ERR(0, 1490, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  8:
        values[7] = __Pyx_ArgRef_FASTCALL(__pyx_args, 7);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[7])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  7:
        values[6] = __Pyx_ArgRef_FASTCALL(__pyx_args, 6);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[6])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  6:
        values[5] = __Pyx_ArgRef_FASTCALL(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1490, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1490, __pyx_L3_error)
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1490, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite1 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    __pyx_v_sprite2 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[1]);
    if (values[2]) {
      __pyx_v_distance_x = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_distance_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1494, __pyx_L3_error)
    } else {
      __pyx_v_distance_x = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_distance_y = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_distance_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1495, __pyx_L3_error)
    } else {
      __pyx_v_distance_y = ((float)0.0);
    }
    if (values[4]) {
      __pyx_v_keep_x = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_keep_x == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1496, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1496
 * 		float distance_x = 0,
 * 		float distance_y = 0,
 * 		bint keep_x = False,             # <<<<<<<<<<<<<<
 * 		bint keep_y = False,
 * 		bint sprite1_main = False,
*/
      __pyx_v_keep_x = ((int)0);
    }
    if (values[5]) {
      __pyx_v_keep_y = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_keep_y == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1497, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1497
 * 		float distance_y = 0,
 * 		bint keep_x = False,
 * 		bint keep_y = False,             # <<<<<<<<<<<<<<
 * 		bint sprite1_main = False,
 * 		bint local = True
*/
      __pyx_v_keep_y = ((int)0);
    }
    if (values[6]) {
      __pyx_v_sprite1_main = __Pyx_PyObject_IsTrue(values[6]); if (unlikely((__pyx_v_sprite1_main == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1498, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1498
 * 		bint keep_x = False,
 * 		bint keep_y = False,
 * 		bint sprite1_main = False,             # <<<<<<<<<<<<<<
 * 		bint local = True
 * 		) -> bool:
*/
      __pyx_v_sprite1_main = ((int)0);
    }
    if (values[7]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[7]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1499, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1499
 * 		bint keep_y = False,
 * 		bint sprite1_main = False,
 * 		bint local = True             # <<<<<<<<<<<<<<
 * 		) -> bool:
 * 		if not keep_x and not keep_y:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("keep_their_distance", 0, 2, 8, __pyx_nargs); __PYX_ERR(0, 1490, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.keep_their_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite1), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite1", 0))) __PYX_ERR(0, 1492, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite2), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite2", 0))) __PYX_ERR(0, 1493, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_keep_their_distance(__pyx_v_sprite1, __pyx_v_sprite2, __pyx_v_distance_x, __pyx_v_distance_y, __pyx_v_keep_x, __pyx_v_keep_y, __pyx_v_sprite1_main, __pyx_v_local);

  /* "pysfml261.pyx":1490
 * cdef class TransformSfSprite:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def keep_their_distance(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_keep_their_distance(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, float __pyx_v_distance_x, float __pyx_v_distance_y, int __pyx_v_keep_x, int __pyx_v_keep_y, int __pyx_v_sprite1_main, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect1;
  sf::FloatRect __pyx_v_rect2;
  float __pyx_v_k;
  float __pyx_v_centerX1;
  float __pyx_v_centerY1;
  float __pyx_v_centerX2;
  float __pyx_v_centerY2;
  float __pyx_v_difX;
  float __pyx_v_difY;
  float __pyx_v_dx;
  float __pyx_v_dy;
  int __pyx_v_sprite1Left;
  int __pyx_v_sprite1Upper;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("keep_their_distance", 0);

  /* "pysfml261.pyx":1501
 * 		bint local = True
 * 		) -> bool:
 * 		if not keep_x and not keep_y:             # <<<<<<<<<<<<<<
 * 			return False
 * 		cdef FloatRect rect1, rect2
*/
  __pyx_t_2 = (!__pyx_v_keep_x);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (!__pyx_v_keep_y);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1502
 * 		) -> bool:
 * 		if not keep_x and not keep_y:
 * 			return False             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect1, rect2
 * 		if local:
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "pysfml261.pyx":1501
 * 		bint local = True
 * 		) -> bool:
 * 		if not keep_x and not keep_y:             # <<<<<<<<<<<<<<
 * 			return False
 * 		cdef FloatRect rect1, rect2
*/
  }

  /* "pysfml261.pyx":1504
 * 			return False
 * 		cdef FloatRect rect1, rect2
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1505
 * 		cdef FloatRect rect1, rect2
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
*/
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getLocalBounds());

    /* "pysfml261.pyx":1506
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getLocalBounds());

    /* "pysfml261.pyx":1504
 * 			return False
 * 		cdef FloatRect rect1, rect2
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
    goto __pyx_L6;
  }

  /* "pysfml261.pyx":1508
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		cdef float k = <float>.5
*/
  /*else*/ {
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getGlobalBounds());

    /* "pysfml261.pyx":1509
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float k = <float>.5
 * 		cdef float centerX1, centerY1
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getGlobalBounds());
  }
  __pyx_L6:;

  /* "pysfml261.pyx":1510
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		cdef float centerX1, centerY1
 * 		cdef float centerX2, centerY2
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1514
 * 		cdef float centerX2, centerY2
 * 		cdef float difX, difY
 * 		cdef float dx = 0, dy = 0             # <<<<<<<<<<<<<<
 * 		cdef bint sprite1Left = rect1.left - rect2.left < 0
 * 		cdef bint sprite1Upper = rect1.top - rect2.top < 0
*/
  __pyx_v_dx = 0.0;
  __pyx_v_dy = 0.0;

  /* "pysfml261.pyx":1515
 * 		cdef float difX, difY
 * 		cdef float dx = 0, dy = 0
 * 		cdef bint sprite1Left = rect1.left - rect2.left < 0             # <<<<<<<<<<<<<<
 * 		cdef bint sprite1Upper = rect1.top - rect2.top < 0
 * 		if keep_x:
*/
  __pyx_v_sprite1Left = ((__pyx_v_rect1.left - __pyx_v_rect2.left) < 0.0);

  /* "pysfml261.pyx":1516
 * 		cdef float dx = 0, dy = 0
 * 		cdef bint sprite1Left = rect1.left - rect2.left < 0
 * 		cdef bint sprite1Upper = rect1.top - rect2.top < 0             # <<<<<<<<<<<<<<
 * 		if keep_x:
 * 			centerX1 = rect1.left + rect1.width * k
*/
  __pyx_v_sprite1Upper = ((__pyx_v_rect1.top - __pyx_v_rect2.top) < 0.0);

  /* "pysfml261.pyx":1517
 * 		cdef bint sprite1Left = rect1.left - rect2.left < 0
 * 		cdef bint sprite1Upper = rect1.top - rect2.top < 0
 * 		if keep_x:             # <<<<<<<<<<<<<<
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k
*/
  if (__pyx_v_keep_x) {

    /* "pysfml261.pyx":1518
 * 		cdef bint sprite1Upper = rect1.top - rect2.top < 0
 * 		if keep_x:
 * 			centerX1 = rect1.left + rect1.width * k             # <<<<<<<<<<<<<<
 * 			centerX2 = rect2.left + rect2.width * k
 * 			difX = fabs(centerX1 - centerX2)
*/
    __pyx_v_centerX1 = (__pyx_v_rect1.left + (__pyx_v_rect1.width * __pyx_v_k));

    /* "pysfml261.pyx":1519
 * 		if keep_x:
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k             # <<<<<<<<<<<<<<
 * 			difX = fabs(centerX1 - centerX2)
 * 			dx = distance_x - difX
*/
    __pyx_v_centerX2 = (__pyx_v_rect2.left + (__pyx_v_rect2.width * __pyx_v_k));

    /* "pysfml261.pyx":1520
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k
 * 			difX = fabs(centerX1 - centerX2)             # <<<<<<<<<<<<<<
 * 			dx = distance_x - difX
 * 			if dx == 0 and not keep_y:
*/
    __pyx_v_difX = fabs((__pyx_v_centerX1 - __pyx_v_centerX2));

    /* "pysfml261.pyx":1521
 * 			centerX2 = rect2.left + rect2.width * k
 * 			difX = fabs(centerX1 - centerX2)
 * 			dx = distance_x - difX             # <<<<<<<<<<<<<<
 * 			if dx == 0 and not keep_y:
 * 				return False
*/
    __pyx_v_dx = (__pyx_v_distance_x - __pyx_v_difX);

    /* "pysfml261.pyx":1522
 * 			difX = fabs(centerX1 - centerX2)
 * 			dx = distance_x - difX
 * 			if dx == 0 and not keep_y:             # <<<<<<<<<<<<<<
 * 				return False
 * 		if keep_y:
*/
    __pyx_t_2 = (__pyx_v_dx == 0.0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L9_bool_binop_done;
    }
    __pyx_t_2 = (!__pyx_v_keep_y);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L9_bool_binop_done:;
    if (__pyx_t_1) {

      /* "pysfml261.pyx":1523
 * 			dx = distance_x - difX
 * 			if dx == 0 and not keep_y:
 * 				return False             # <<<<<<<<<<<<<<
 * 		if keep_y:
 * 			centerY1 = rect1.top + rect1.height * k
*/
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      goto __pyx_L0;

      /* "pysfml261.pyx":1522
 * 			difX = fabs(centerX1 - centerX2)
 * 			dx = distance_x - difX
 * 			if dx == 0 and not keep_y:             # <<<<<<<<<<<<<<
 * 				return False
 * 		if keep_y:
*/
    }

    /* "pysfml261.pyx":1517
 * 		cdef bint sprite1Left = rect1.left - rect2.left < 0
 * 		cdef bint sprite1Upper = rect1.top - rect2.top < 0
 * 		if keep_x:             # <<<<<<<<<<<<<<
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k
*/
  }

  /* "pysfml261.pyx":1524
 * 			if dx == 0 and not keep_y:
 * 				return False
 * 		if keep_y:             # <<<<<<<<<<<<<<
 * 			centerY1 = rect1.top + rect1.height * k
 * 			centerY2 = rect2.top + rect2.height * k
*/
  if (__pyx_v_keep_y) {

    /* "pysfml261.pyx":1525
 * 				return False
 * 		if keep_y:
 * 			centerY1 = rect1.top + rect1.height * k             # <<<<<<<<<<<<<<
 * 			centerY2 = rect2.top + rect2.height * k
 * 			difY = fabs(centerY1 - centerY2)
*/
    __pyx_v_centerY1 = (__pyx_v_rect1.top + (__pyx_v_rect1.height * __pyx_v_k));

    /* "pysfml261.pyx":1526
 * 		if keep_y:
 * 			centerY1 = rect1.top + rect1.height * k
 * 			centerY2 = rect2.top + rect2.height * k             # <<<<<<<<<<<<<<
 * 			difY = fabs(centerY1 - centerY2)
 * 			dy = distance_y - difY
*/
    __pyx_v_centerY2 = (__pyx_v_rect2.top + (__pyx_v_rect2.height * __pyx_v_k));

    /* "pysfml261.pyx":1527
 * 			centerY1 = rect1.top + rect1.height * k
 * 			centerY2 = rect2.top + rect2.height * k
 * 			difY = fabs(centerY1 - centerY2)             # <<<<<<<<<<<<<<
 * 			dy = distance_y - difY
 * 			if dx == 0 and dy == 0:
*/
    __pyx_v_difY = fabs((__pyx_v_centerY1 - __pyx_v_centerY2));

    /* "pysfml261.pyx":1528
 * 			centerY2 = rect2.top + rect2.height * k
 * 			difY = fabs(centerY1 - centerY2)
 * 			dy = distance_y - difY             # <<<<<<<<<<<<<<
 * 			if dx == 0 and dy == 0:
 * 				return False
*/
    __pyx_v_dy = (__pyx_v_distance_y - __pyx_v_difY);

    /* "pysfml261.pyx":1529
 * 			difY = fabs(centerY1 - centerY2)
 * 			dy = distance_y - difY
 * 			if dx == 0 and dy == 0:             # <<<<<<<<<<<<<<
 * 				return False
 * 		if sprite1_main:
*/
    __pyx_t_2 = (__pyx_v_dx == 0.0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L13_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_dy == 0.0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L13_bool_binop_done:;
    if (__pyx_t_1) {

      /* "pysfml261.pyx":1530
 * 			dy = distance_y - difY
 * 			if dx == 0 and dy == 0:
 * 				return False             # <<<<<<<<<<<<<<
 * 		if sprite1_main:
 * 			if not sprite1Left:
*/
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      goto __pyx_L0;

      /* "pysfml261.pyx":1529
 * 			difY = fabs(centerY1 - centerY2)
 * 			dy = distance_y - difY
 * 			if dx == 0 and dy == 0:             # <<<<<<<<<<<<<<
 * 				return False
 * 		if sprite1_main:
*/
    }

    /* "pysfml261.pyx":1524
 * 			if dx == 0 and not keep_y:
 * 				return False
 * 		if keep_y:             # <<<<<<<<<<<<<<
 * 			centerY1 = rect1.top + rect1.height * k
 * 			centerY2 = rect2.top + rect2.height * k
*/
  }

  /* "pysfml261.pyx":1531
 * 			if dx == 0 and dy == 0:
 * 				return False
 * 		if sprite1_main:             # <<<<<<<<<<<<<<
 * 			if not sprite1Left:
 * 				dx *= -1
*/
  if (__pyx_v_sprite1_main) {

    /* "pysfml261.pyx":1532
 * 				return False
 * 		if sprite1_main:
 * 			if not sprite1Left:             # <<<<<<<<<<<<<<
 * 				dx *= -1
 * 			if not sprite1Upper:
*/
    __pyx_t_1 = (!__pyx_v_sprite1Left);
    if (__pyx_t_1) {

      /* "pysfml261.pyx":1533
 * 		if sprite1_main:
 * 			if not sprite1Left:
 * 				dx *= -1             # <<<<<<<<<<<<<<
 * 			if not sprite1Upper:
 * 				dy *= -1
*/
      __pyx_v_dx = (__pyx_v_dx * -1.0);

      /* "pysfml261.pyx":1532
 * 				return False
 * 		if sprite1_main:
 * 			if not sprite1Left:             # <<<<<<<<<<<<<<
 * 				dx *= -1
 * 			if not sprite1Upper:
*/
    }

    /* "pysfml261.pyx":1534
 * 			if not sprite1Left:
 * 				dx *= -1
 * 			if not sprite1Upper:             # <<<<<<<<<<<<<<
 * 				dy *= -1
 * 			sprite2.sprite.move(dx, dy)
*/
    __pyx_t_1 = (!__pyx_v_sprite1Upper);
    if (__pyx_t_1) {

      /* "pysfml261.pyx":1535
 * 				dx *= -1
 * 			if not sprite1Upper:
 * 				dy *= -1             # <<<<<<<<<<<<<<
 * 			sprite2.sprite.move(dx, dy)
 * 		else:
*/
      __pyx_v_dy = (__pyx_v_dy * -1.0);

      /* "pysfml261.pyx":1534
 * 			if not sprite1Left:
 * 				dx *= -1
 * 			if not sprite1Upper:             # <<<<<<<<<<<<<<
 * 				dy *= -1
 * 			sprite2.sprite.move(dx, dy)
*/
    }

    /* "pysfml261.pyx":1536
 * 			if not sprite1Upper:
 * 				dy *= -1
 * 			sprite2.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 		else:
 * 			if sprite1Left:
*/
    __pyx_v_sprite2->sprite->move(__pyx_v_dx, __pyx_v_dy);

    /* "pysfml261.pyx":1531
 * 			if dx == 0 and dy == 0:
 * 				return False
 * 		if sprite1_main:             # <<<<<<<<<<<<<<
 * 			if not sprite1Left:
 * 				dx *= -1
*/
    goto __pyx_L15;
  }

  /* "pysfml261.pyx":1538
 * 			sprite2.sprite.move(dx, dy)
 * 		else:
 * 			if sprite1Left:             # <<<<<<<<<<<<<<
 * 				dx *= -1
 * 			if sprite1Upper:
*/
  /*else*/ {
    if (__pyx_v_sprite1Left) {

      /* "pysfml261.pyx":1539
 * 		else:
 * 			if sprite1Left:
 * 				dx *= -1             # <<<<<<<<<<<<<<
 * 			if sprite1Upper:
 * 				dy *= -1
*/
      __pyx_v_dx = (__pyx_v_dx * -1.0);

      /* "pysfml261.pyx":1538
 * 			sprite2.sprite.move(dx, dy)
 * 		else:
 * 			if sprite1Left:             # <<<<<<<<<<<<<<
 * 				dx *= -1
 * 			if sprite1Upper:
*/
    }

    /* "pysfml261.pyx":1540
 * 			if sprite1Left:
 * 				dx *= -1
 * 			if sprite1Upper:             # <<<<<<<<<<<<<<
 * 				dy *= -1
 * 			sprite1.sprite.move(dx, dy)
*/
    if (__pyx_v_sprite1Upper) {

      /* "pysfml261.pyx":1541
 * 				dx *= -1
 * 			if sprite1Upper:
 * 				dy *= -1             # <<<<<<<<<<<<<<
 * 			sprite1.sprite.move(dx, dy)
 * 		return True
*/
      __pyx_v_dy = (__pyx_v_dy * -1.0);

      /* "pysfml261.pyx":1540
 * 			if sprite1Left:
 * 				dx *= -1
 * 			if sprite1Upper:             # <<<<<<<<<<<<<<
 * 				dy *= -1
 * 			sprite1.sprite.move(dx, dy)
*/
    }

    /* "pysfml261.pyx":1542
 * 			if sprite1Upper:
 * 				dy *= -1
 * 			sprite1.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 		return True
 * 
*/
    __pyx_v_sprite1->sprite->move(__pyx_v_dx, __pyx_v_dy);
  }
  __pyx_L15:;

  /* "pysfml261.pyx":1543
 * 				dy *= -1
 * 			sprite1.sprite.move(dx, dy)
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "pysfml261.pyx":1490
 * cdef class TransformSfSprite:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def keep_their_distance(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1545
 * 		return True
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def similar(
 * 		sfSprite sprite1,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_3similar(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_3similar = {"similar", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_3similar, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_3similar(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1 = 0;
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2 = 0;
  int __pyx_v_sprite1_main;
  int __pyx_v_similar_pos;
  int __pyx_v_similar_size;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[6] = {0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("similar (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite1,&__pyx_mstate_global->__pyx_n_u_sprite2,&__pyx_mstate_global->__pyx_n_u_sprite1_main,&__pyx_mstate_global->__pyx_n_u_similar_pos,&__pyx_mstate_global->__pyx_n_u_similar_size,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1545, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  6:
        values[5] = __Pyx_ArgRef_FASTCALL(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "similar", 0) < 0) __PYX_ERR(0, 1545, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("similar", 0, 2, 6, i); __PYX_ERR(0, 1545, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  6:
        values[5] = __Pyx_ArgRef_FASTCALL(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1545, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1545, __pyx_L3_error)
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1545, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite1 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    __pyx_v_sprite2 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[1]);
    if (values[2]) {
      __pyx_v_sprite1_main = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_sprite1_main == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1549, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1549
 * 		sfSprite sprite1,
 * 		sfSprite sprite2,
 * 		bint sprite1_main = False,             # <<<<<<<<<<<<<<
 * 		bint similar_pos = False,
 * 		bint similar_size = False,
*/
      __pyx_v_sprite1_main = ((int)0);
    }
    if (values[3]) {
      __pyx_v_similar_pos = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_similar_pos == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1550, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1550
 * 		sfSprite sprite2,
 * 		bint sprite1_main = False,
 * 		bint similar_pos = False,             # <<<<<<<<<<<<<<
 * 		bint similar_size = False,
 * 		bint local = True
*/
      __pyx_v_similar_pos = ((int)0);
    }
    if (values[4]) {
      __pyx_v_similar_size = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_similar_size == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1551, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1551
 * 		bint sprite1_main = False,
 * 		bint similar_pos = False,
 * 		bint similar_size = False,             # <<<<<<<<<<<<<<
 * 		bint local = True
 * 		) -> None:
*/
      __pyx_v_similar_size = ((int)0);
    }
    if (values[5]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1552, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1552
 * 		bint similar_pos = False,
 * 		bint similar_size = False,
 * 		bint local = True             # <<<<<<<<<<<<<<
 * 		) -> None:
 * 		cdef FloatRect rect1, rect2
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("similar", 0, 2, 6, __pyx_nargs); __PYX_ERR(0, 1545, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.similar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite1), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite1", 0))) __PYX_ERR(0, 1547, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite2), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite2", 0))) __PYX_ERR(0, 1548, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_2similar(__pyx_v_sprite1, __pyx_v_sprite2, __pyx_v_sprite1_main, __pyx_v_similar_pos, __pyx_v_similar_size, __pyx_v_local);

  /* "pysfml261.pyx":1545
 * 		return True
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def similar(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_2similar(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, int __pyx_v_sprite1_main, int __pyx_v_similar_pos, int __pyx_v_similar_size, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect1;
  sf::FloatRect __pyx_v_rect2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("similar", 0);

  /* "pysfml261.pyx":1555
 * 		) -> None:
 * 		cdef FloatRect rect1, rect2
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1556
 * 		cdef FloatRect rect1, rect2
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
*/
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getLocalBounds());

    /* "pysfml261.pyx":1557
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getLocalBounds());

    /* "pysfml261.pyx":1555
 * 		) -> None:
 * 		cdef FloatRect rect1, rect2
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1559
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if similar_pos:
*/
  /*else*/ {
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getGlobalBounds());

    /* "pysfml261.pyx":1560
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		if similar_pos:
 * 			if sprite1_main:
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1561
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if similar_pos:             # <<<<<<<<<<<<<<
 * 			if sprite1_main:
 * 				sprite2.sprite.setPosition(rect1.left, rect1.top)
*/
  if (__pyx_v_similar_pos) {

    /* "pysfml261.pyx":1562
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if similar_pos:
 * 			if sprite1_main:             # <<<<<<<<<<<<<<
 * 				sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 			else:
*/
    if (__pyx_v_sprite1_main) {

      /* "pysfml261.pyx":1563
 * 		if similar_pos:
 * 			if sprite1_main:
 * 				sprite2.sprite.setPosition(rect1.left, rect1.top)             # <<<<<<<<<<<<<<
 * 			else:
 * 				sprite1.sprite.setPosition(rect2.left, rect2.top)
*/
      __pyx_v_sprite2->sprite->setPosition(__pyx_v_rect1.left, __pyx_v_rect1.top);

      /* "pysfml261.pyx":1562
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if similar_pos:
 * 			if sprite1_main:             # <<<<<<<<<<<<<<
 * 				sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 			else:
*/
      goto __pyx_L5;
    }

    /* "pysfml261.pyx":1565
 * 				sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 			else:
 * 				sprite1.sprite.setPosition(rect2.left, rect2.top)             # <<<<<<<<<<<<<<
 * 		if similar_size:
 * 			if sprite1_main:
*/
    /*else*/ {
      __pyx_v_sprite1->sprite->setPosition(__pyx_v_rect2.left, __pyx_v_rect2.top);
    }
    __pyx_L5:;

    /* "pysfml261.pyx":1561
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if similar_pos:             # <<<<<<<<<<<<<<
 * 			if sprite1_main:
 * 				sprite2.sprite.setPosition(rect1.left, rect1.top)
*/
  }

  /* "pysfml261.pyx":1566
 * 			else:
 * 				sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 		if similar_size:             # <<<<<<<<<<<<<<
 * 			if sprite1_main:
 * 				resizeSprite(sprite2.sprite, rect1.width, rect1.height)
*/
  if (__pyx_v_similar_size) {

    /* "pysfml261.pyx":1567
 * 				sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 		if similar_size:
 * 			if sprite1_main:             # <<<<<<<<<<<<<<
 * 				resizeSprite(sprite2.sprite, rect1.width, rect1.height)
 * 			else:
*/
    if (__pyx_v_sprite1_main) {

      /* "pysfml261.pyx":1568
 * 		if similar_size:
 * 			if sprite1_main:
 * 				resizeSprite(sprite2.sprite, rect1.width, rect1.height)             # <<<<<<<<<<<<<<
 * 			else:
 * 				resizeSprite(sprite1.sprite, rect2.width, rect2.height)
*/
      __pyx_f_9pysfml261_resizeSprite(__pyx_v_sprite2->sprite, __pyx_v_rect1.width, __pyx_v_rect1.height); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1568, __pyx_L1_error)

      /* "pysfml261.pyx":1567
 * 				sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 		if similar_size:
 * 			if sprite1_main:             # <<<<<<<<<<<<<<
 * 				resizeSprite(sprite2.sprite, rect1.width, rect1.height)
 * 			else:
*/
      goto __pyx_L7;
    }

    /* "pysfml261.pyx":1570
 * 				resizeSprite(sprite2.sprite, rect1.width, rect1.height)
 * 			else:
 * 				resizeSprite(sprite1.sprite, rect2.width, rect2.height)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
    /*else*/ {
      __pyx_f_9pysfml261_resizeSprite(__pyx_v_sprite1->sprite, __pyx_v_rect2.width, __pyx_v_rect2.height); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1570, __pyx_L1_error)
    }
    __pyx_L7:;

    /* "pysfml261.pyx":1566
 * 			else:
 * 				sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 		if similar_size:             # <<<<<<<<<<<<<<
 * 			if sprite1_main:
 * 				resizeSprite(sprite2.sprite, rect1.width, rect1.height)
*/
  }

  /* "pysfml261.pyx":1545
 * 		return True
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def similar(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.similar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1572
 * 				resizeSprite(sprite1.sprite, rect2.width, rect2.height)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def put_like(
 * 		sfSprite sprite1,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_5put_like(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_5put_like = {"put_like", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_5put_like, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_5put_like(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1 = 0;
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2 = 0;
  int __pyx_v_like_sprite1;
  int __pyx_v_shift_dx;
  int __pyx_v_shift_dy;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[6] = {0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("put_like (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite1,&__pyx_mstate_global->__pyx_n_u_sprite2,&__pyx_mstate_global->__pyx_n_u_like_sprite1,&__pyx_mstate_global->__pyx_n_u_shift_dx,&__pyx_mstate_global->__pyx_n_u_shift_dy,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1572, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  6:
        values[5] = __Pyx_ArgRef_FASTCALL(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "put_like", 0) < 0) __PYX_ERR(0, 1572, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("put_like", 0, 2, 6, i); __PYX_ERR(0, 1572, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  6:
        values[5] = __Pyx_ArgRef_FASTCALL(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1572, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1572, __pyx_L3_error)
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1572, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite1 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    __pyx_v_sprite2 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[1]);
    if (values[2]) {
      __pyx_v_like_sprite1 = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_like_sprite1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1576, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1576
 * 		sfSprite sprite1,
 * 		sfSprite sprite2,
 * 		bint like_sprite1 = False,             # <<<<<<<<<<<<<<
 * 		bint shift_dx = False,
 * 		bint shift_dy = False,
*/
      __pyx_v_like_sprite1 = ((int)0);
    }
    if (values[3]) {
      __pyx_v_shift_dx = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_shift_dx == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1577, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1577
 * 		sfSprite sprite2,
 * 		bint like_sprite1 = False,
 * 		bint shift_dx = False,             # <<<<<<<<<<<<<<
 * 		bint shift_dy = False,
 * 		bint local = True
*/
      __pyx_v_shift_dx = ((int)0);
    }
    if (values[4]) {
      __pyx_v_shift_dy = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_shift_dy == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1578, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1578
 * 		bint like_sprite1 = False,
 * 		bint shift_dx = False,
 * 		bint shift_dy = False,             # <<<<<<<<<<<<<<
 * 		bint local = True
 * 		) -> None:
*/
      __pyx_v_shift_dy = ((int)0);
    }
    if (values[5]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1579, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1579
 * 		bint shift_dx = False,
 * 		bint shift_dy = False,
 * 		bint local = True             # <<<<<<<<<<<<<<
 * 		) -> None:
 * 		cdef FloatRect rect1, rect2
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("put_like", 0, 2, 6, __pyx_nargs); __PYX_ERR(0, 1572, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.put_like", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite1), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite1", 0))) __PYX_ERR(0, 1574, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite2), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite2", 0))) __PYX_ERR(0, 1575, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_4put_like(__pyx_v_sprite1, __pyx_v_sprite2, __pyx_v_like_sprite1, __pyx_v_shift_dx, __pyx_v_shift_dy, __pyx_v_local);

  /* "pysfml261.pyx":1572
 * 				resizeSprite(sprite1.sprite, rect2.width, rect2.height)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def put_like(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_4put_like(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, int __pyx_v_like_sprite1, int __pyx_v_shift_dx, int __pyx_v_shift_dy, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect1;
  sf::FloatRect __pyx_v_rect2;
  float __pyx_v_k;
  float __pyx_v_centerX1;
  float __pyx_v_centerX2;
  float __pyx_v_dx;
  float __pyx_v_dy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("put_like", 0);

  /* "pysfml261.pyx":1582
 * 		) -> None:
 * 		cdef FloatRect rect1, rect2
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1583
 * 		cdef FloatRect rect1, rect2
 * 		cdef float k = <float>.5
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1584
 * 		cdef float k = <float>.5
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
*/
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getLocalBounds());

    /* "pysfml261.pyx":1585
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getLocalBounds());

    /* "pysfml261.pyx":1583
 * 		cdef FloatRect rect1, rect2
 * 		cdef float k = <float>.5
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1587
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if like_sprite1:
*/
  /*else*/ {
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getGlobalBounds());

    /* "pysfml261.pyx":1588
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		if like_sprite1:
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1589
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if like_sprite1:             # <<<<<<<<<<<<<<
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 		else:
*/
  if (__pyx_v_like_sprite1) {

    /* "pysfml261.pyx":1590
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if like_sprite1:
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)             # <<<<<<<<<<<<<<
 * 		else:
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)
*/
    __pyx_v_sprite2->sprite->setPosition(__pyx_v_rect1.left, __pyx_v_rect1.top);

    /* "pysfml261.pyx":1589
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if like_sprite1:             # <<<<<<<<<<<<<<
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 		else:
*/
    goto __pyx_L4;
  }

  /* "pysfml261.pyx":1592
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 		else:
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)             # <<<<<<<<<<<<<<
 * 		cdef float centerX1, centerX2
 * 		cdef float dx = 0, dy = 0
*/
  /*else*/ {
    __pyx_v_sprite1->sprite->setPosition(__pyx_v_rect2.left, __pyx_v_rect2.top);
  }
  __pyx_L4:;

  /* "pysfml261.pyx":1594
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 		cdef float centerX1, centerX2
 * 		cdef float dx = 0, dy = 0             # <<<<<<<<<<<<<<
 * 		if shift_dx:
 * 			centerX1 = rect1.left + rect1.width * k
*/
  __pyx_v_dx = 0.0;
  __pyx_v_dy = 0.0;

  /* "pysfml261.pyx":1595
 * 		cdef float centerX1, centerX2
 * 		cdef float dx = 0, dy = 0
 * 		if shift_dx:             # <<<<<<<<<<<<<<
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k
*/
  if (__pyx_v_shift_dx) {

    /* "pysfml261.pyx":1596
 * 		cdef float dx = 0, dy = 0
 * 		if shift_dx:
 * 			centerX1 = rect1.left + rect1.width * k             # <<<<<<<<<<<<<<
 * 			centerX2 = rect2.left + rect2.width * k
 * 			if like_sprite1:
*/
    __pyx_v_centerX1 = (__pyx_v_rect1.left + (__pyx_v_rect1.width * __pyx_v_k));

    /* "pysfml261.pyx":1597
 * 		if shift_dx:
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k             # <<<<<<<<<<<<<<
 * 			if like_sprite1:
 * 				dx = centerX1 - centerX2
*/
    __pyx_v_centerX2 = (__pyx_v_rect2.left + (__pyx_v_rect2.width * __pyx_v_k));

    /* "pysfml261.pyx":1598
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k
 * 			if like_sprite1:             # <<<<<<<<<<<<<<
 * 				dx = centerX1 - centerX2
 * 			else:
*/
    if (__pyx_v_like_sprite1) {

      /* "pysfml261.pyx":1599
 * 			centerX2 = rect2.left + rect2.width * k
 * 			if like_sprite1:
 * 				dx = centerX1 - centerX2             # <<<<<<<<<<<<<<
 * 			else:
 * 				dx = centerX2 - centerX1
*/
      __pyx_v_dx = (__pyx_v_centerX1 - __pyx_v_centerX2);

      /* "pysfml261.pyx":1598
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k
 * 			if like_sprite1:             # <<<<<<<<<<<<<<
 * 				dx = centerX1 - centerX2
 * 			else:
*/
      goto __pyx_L6;
    }

    /* "pysfml261.pyx":1601
 * 				dx = centerX1 - centerX2
 * 			else:
 * 				dx = centerX2 - centerX1             # <<<<<<<<<<<<<<
 * 		if shift_dy:
 * 			if like_sprite1:
*/
    /*else*/ {
      __pyx_v_dx = (__pyx_v_centerX2 - __pyx_v_centerX1);
    }
    __pyx_L6:;

    /* "pysfml261.pyx":1595
 * 		cdef float centerX1, centerX2
 * 		cdef float dx = 0, dy = 0
 * 		if shift_dx:             # <<<<<<<<<<<<<<
 * 			centerX1 = rect1.left + rect1.width * k
 * 			centerX2 = rect2.left + rect2.width * k
*/
  }

  /* "pysfml261.pyx":1602
 * 			else:
 * 				dx = centerX2 - centerX1
 * 		if shift_dy:             # <<<<<<<<<<<<<<
 * 			if like_sprite1:
 * 				dy = rect1.height - rect2.height
*/
  if (__pyx_v_shift_dy) {

    /* "pysfml261.pyx":1603
 * 				dx = centerX2 - centerX1
 * 		if shift_dy:
 * 			if like_sprite1:             # <<<<<<<<<<<<<<
 * 				dy = rect1.height - rect2.height
 * 			else:
*/
    if (__pyx_v_like_sprite1) {

      /* "pysfml261.pyx":1604
 * 		if shift_dy:
 * 			if like_sprite1:
 * 				dy = rect1.height - rect2.height             # <<<<<<<<<<<<<<
 * 			else:
 * 				dy = rect2.height - rect1.height
*/
      __pyx_v_dy = (__pyx_v_rect1.height - __pyx_v_rect2.height);

      /* "pysfml261.pyx":1603
 * 				dx = centerX2 - centerX1
 * 		if shift_dy:
 * 			if like_sprite1:             # <<<<<<<<<<<<<<
 * 				dy = rect1.height - rect2.height
 * 			else:
*/
      goto __pyx_L8;
    }

    /* "pysfml261.pyx":1606
 * 				dy = rect1.height - rect2.height
 * 			else:
 * 				dy = rect2.height - rect1.height             # <<<<<<<<<<<<<<
 * 		if like_sprite1:
 * 			sprite2.sprite.move(dx, dy)
*/
    /*else*/ {
      __pyx_v_dy = (__pyx_v_rect2.height - __pyx_v_rect1.height);
    }
    __pyx_L8:;

    /* "pysfml261.pyx":1602
 * 			else:
 * 				dx = centerX2 - centerX1
 * 		if shift_dy:             # <<<<<<<<<<<<<<
 * 			if like_sprite1:
 * 				dy = rect1.height - rect2.height
*/
  }

  /* "pysfml261.pyx":1607
 * 			else:
 * 				dy = rect2.height - rect1.height
 * 		if like_sprite1:             # <<<<<<<<<<<<<<
 * 			sprite2.sprite.move(dx, dy)
 * 		else:
*/
  if (__pyx_v_like_sprite1) {

    /* "pysfml261.pyx":1608
 * 				dy = rect2.height - rect1.height
 * 		if like_sprite1:
 * 			sprite2.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 		else:
 * 			sprite1.sprite.move(dx, dy)
*/
    __pyx_v_sprite2->sprite->move(__pyx_v_dx, __pyx_v_dy);

    /* "pysfml261.pyx":1607
 * 			else:
 * 				dy = rect2.height - rect1.height
 * 		if like_sprite1:             # <<<<<<<<<<<<<<
 * 			sprite2.sprite.move(dx, dy)
 * 		else:
*/
    goto __pyx_L9;
  }

  /* "pysfml261.pyx":1610
 * 			sprite2.sprite.move(dx, dy)
 * 		else:
 * 			sprite1.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  /*else*/ {
    __pyx_v_sprite1->sprite->move(__pyx_v_dx, __pyx_v_dy);
  }
  __pyx_L9:;

  /* "pysfml261.pyx":1572
 * 				resizeSprite(sprite1.sprite, rect2.width, rect2.height)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def put_like(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1612
 * 			sprite1.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def swap(
 * 		sfSprite sprite1,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_7swap(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_7swap = {"swap", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_7swap, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_7swap(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1 = 0;
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2 = 0;
  int __pyx_v_swap_pos;
  int __pyx_v_swap_size;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("swap (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite1,&__pyx_mstate_global->__pyx_n_u_sprite2,&__pyx_mstate_global->__pyx_n_u_swap_pos,&__pyx_mstate_global->__pyx_n_u_swap_size,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1612, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1612, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1612, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1612, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1612, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1612, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "swap", 0) < 0) __PYX_ERR(0, 1612, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("swap", 0, 2, 5, i); __PYX_ERR(0, 1612, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1612, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1612, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1612, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1612, __pyx_L3_error)
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1612, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite1 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    __pyx_v_sprite2 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[1]);
    if (values[2]) {
      __pyx_v_swap_pos = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_swap_pos == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1616, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1616
 * 		sfSprite sprite1,
 * 		sfSprite sprite2,
 * 		bint swap_pos = False,             # <<<<<<<<<<<<<<
 * 		bint swap_size = False,
 * 		bint local = True
*/
      __pyx_v_swap_pos = ((int)0);
    }
    if (values[3]) {
      __pyx_v_swap_size = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_swap_size == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1617, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1617
 * 		sfSprite sprite2,
 * 		bint swap_pos = False,
 * 		bint swap_size = False,             # <<<<<<<<<<<<<<
 * 		bint local = True
 * 		) -> None:
*/
      __pyx_v_swap_size = ((int)0);
    }
    if (values[4]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1618, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1618
 * 		bint swap_pos = False,
 * 		bint swap_size = False,
 * 		bint local = True             # <<<<<<<<<<<<<<
 * 		) -> None:
 * 		cdef FloatRect rect1, rect2
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("swap", 0, 2, 5, __pyx_nargs); __PYX_ERR(0, 1612, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.swap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite1), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite1", 0))) __PYX_ERR(0, 1614, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite2), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite2", 0))) __PYX_ERR(0, 1615, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_6swap(__pyx_v_sprite1, __pyx_v_sprite2, __pyx_v_swap_pos, __pyx_v_swap_size, __pyx_v_local);

  /* "pysfml261.pyx":1612
 * 			sprite1.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def swap(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_6swap(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, int __pyx_v_swap_pos, int __pyx_v_swap_size, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect1;
  sf::FloatRect __pyx_v_rect2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("swap", 0);

  /* "pysfml261.pyx":1621
 * 		) -> None:
 * 		cdef FloatRect rect1, rect2
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1622
 * 		cdef FloatRect rect1, rect2
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
*/
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getLocalBounds());

    /* "pysfml261.pyx":1623
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getLocalBounds());

    /* "pysfml261.pyx":1621
 * 		) -> None:
 * 		cdef FloatRect rect1, rect2
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1625
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if swap_pos:
*/
  /*else*/ {
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getGlobalBounds());

    /* "pysfml261.pyx":1626
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		if swap_pos:
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1627
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if swap_pos:             # <<<<<<<<<<<<<<
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
*/
  if (__pyx_v_swap_pos) {

    /* "pysfml261.pyx":1628
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if swap_pos:
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)             # <<<<<<<<<<<<<<
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 		if swap_size:
*/
    __pyx_v_sprite1->sprite->setPosition(__pyx_v_rect2.left, __pyx_v_rect2.top);

    /* "pysfml261.pyx":1629
 * 		if swap_pos:
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)             # <<<<<<<<<<<<<<
 * 		if swap_size:
 * 			resizeSprite(sprite1.sprite, rect2.width, rect2.height)
*/
    __pyx_v_sprite2->sprite->setPosition(__pyx_v_rect1.left, __pyx_v_rect1.top);

    /* "pysfml261.pyx":1627
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		if swap_pos:             # <<<<<<<<<<<<<<
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
*/
  }

  /* "pysfml261.pyx":1630
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 		if swap_size:             # <<<<<<<<<<<<<<
 * 			resizeSprite(sprite1.sprite, rect2.width, rect2.height)
 * 			resizeSprite(sprite2.sprite, rect1.width, rect1.height)
*/
  if (__pyx_v_swap_size) {

    /* "pysfml261.pyx":1631
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 		if swap_size:
 * 			resizeSprite(sprite1.sprite, rect2.width, rect2.height)             # <<<<<<<<<<<<<<
 * 			resizeSprite(sprite2.sprite, rect1.width, rect1.height)
 * 
*/
    __pyx_f_9pysfml261_resizeSprite(__pyx_v_sprite1->sprite, __pyx_v_rect2.width, __pyx_v_rect2.height); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1631, __pyx_L1_error)

    /* "pysfml261.pyx":1632
 * 		if swap_size:
 * 			resizeSprite(sprite1.sprite, rect2.width, rect2.height)
 * 			resizeSprite(sprite2.sprite, rect1.width, rect1.height)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
    __pyx_f_9pysfml261_resizeSprite(__pyx_v_sprite2->sprite, __pyx_v_rect1.width, __pyx_v_rect1.height); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1632, __pyx_L1_error)

    /* "pysfml261.pyx":1630
 * 			sprite1.sprite.setPosition(rect2.left, rect2.top)
 * 			sprite2.sprite.setPosition(rect1.left, rect1.top)
 * 		if swap_size:             # <<<<<<<<<<<<<<
 * 			resizeSprite(sprite1.sprite, rect2.width, rect2.height)
 * 			resizeSprite(sprite2.sprite, rect1.width, rect1.height)
*/
  }

  /* "pysfml261.pyx":1612
 * 			sprite1.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def swap(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.swap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1634
 * 			resizeSprite(sprite2.sprite, rect1.width, rect1.height)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_distance(
 * 		sfSprite sprite1,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_9get_distance(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_9get_distance = {"get_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_9get_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_9get_distance(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1 = 0;
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2 = 0;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_distance (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite1,&__pyx_mstate_global->__pyx_n_u_sprite2,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1634, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1634, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1634, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1634, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "get_distance", 0) < 0) __PYX_ERR(0, 1634, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("get_distance", 0, 2, 3, i); __PYX_ERR(0, 1634, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1634, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1634, __pyx_L3_error)
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1634, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite1 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    __pyx_v_sprite2 = ((struct __pyx_obj_9pysfml261_sfSprite *)values[1]);
    if (values[2]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1638, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1638
 * 		sfSprite sprite1,
 * 		sfSprite sprite2,
 * 		bint local = True             # <<<<<<<<<<<<<<
 * 		) -> float:
 * 		cdef FloatRect rect1, rect2
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_distance", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 1634, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.get_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite1), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite1", 0))) __PYX_ERR(0, 1636, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite2), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite2", 0))) __PYX_ERR(0, 1637, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_8get_distance(__pyx_v_sprite1, __pyx_v_sprite2, __pyx_v_local);

  /* "pysfml261.pyx":1634
 * 			resizeSprite(sprite2.sprite, rect1.width, rect1.height)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_distance(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_8get_distance(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite1, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite2, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect1;
  sf::FloatRect __pyx_v_rect2;
  float __pyx_v_k;
  float __pyx_v_centerX1;
  float __pyx_v_centerY1;
  float __pyx_v_centerX2;
  float __pyx_v_centerY2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_distance", 0);

  /* "pysfml261.pyx":1641
 * 		) -> float:
 * 		cdef FloatRect rect1, rect2
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1642
 * 		cdef FloatRect rect1, rect2
 * 		cdef float k = <float>.5
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1643
 * 		cdef float k = <float>.5
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
*/
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getLocalBounds());

    /* "pysfml261.pyx":1644
 * 		if local:
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getLocalBounds());

    /* "pysfml261.pyx":1642
 * 		cdef FloatRect rect1, rect2
 * 		cdef float k = <float>.5
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect1 = sprite1.sprite.getLocalBounds()
 * 			rect2 = sprite2.sprite.getLocalBounds()
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1646
 * 			rect2 = sprite2.sprite.getLocalBounds()
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		cdef float centerX1 = rect1.left + rect1.width * k
*/
  /*else*/ {
    __pyx_v_rect1 = ((sf::FloatRect)__pyx_v_sprite1->sprite->getGlobalBounds());

    /* "pysfml261.pyx":1647
 * 		else:
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float centerX1 = rect1.left + rect1.width * k
 * 		cdef float centerY1 = rect1.top + rect1.height * k
*/
    __pyx_v_rect2 = ((sf::FloatRect)__pyx_v_sprite2->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1648
 * 			rect1 = sprite1.sprite.getGlobalBounds()
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		cdef float centerX1 = rect1.left + rect1.width * k             # <<<<<<<<<<<<<<
 * 		cdef float centerY1 = rect1.top + rect1.height * k
 * 		cdef float centerX2 = rect2.left + rect2.width * k
*/
  __pyx_v_centerX1 = (__pyx_v_rect1.left + (__pyx_v_rect1.width * __pyx_v_k));

  /* "pysfml261.pyx":1649
 * 			rect2 = sprite2.sprite.getGlobalBounds()
 * 		cdef float centerX1 = rect1.left + rect1.width * k
 * 		cdef float centerY1 = rect1.top + rect1.height * k             # <<<<<<<<<<<<<<
 * 		cdef float centerX2 = rect2.left + rect2.width * k
 * 		cdef float centerY2 = rect2.top + rect2.height * k
*/
  __pyx_v_centerY1 = (__pyx_v_rect1.top + (__pyx_v_rect1.height * __pyx_v_k));

  /* "pysfml261.pyx":1650
 * 		cdef float centerX1 = rect1.left + rect1.width * k
 * 		cdef float centerY1 = rect1.top + rect1.height * k
 * 		cdef float centerX2 = rect2.left + rect2.width * k             # <<<<<<<<<<<<<<
 * 		cdef float centerY2 = rect2.top + rect2.height * k
 * 		return sqrtf(
*/
  __pyx_v_centerX2 = (__pyx_v_rect2.left + (__pyx_v_rect2.width * __pyx_v_k));

  /* "pysfml261.pyx":1651
 * 		cdef float centerY1 = rect1.top + rect1.height * k
 * 		cdef float centerX2 = rect2.left + rect2.width * k
 * 		cdef float centerY2 = rect2.top + rect2.height * k             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(centerX2 - centerX1, 2) + powf(centerY2 - centerY1, 2)
*/
  __pyx_v_centerY2 = (__pyx_v_rect2.top + (__pyx_v_rect2.height * __pyx_v_k));

  /* "pysfml261.pyx":1652
 * 		cdef float centerX2 = rect2.left + rect2.width * k
 * 		cdef float centerY2 = rect2.top + rect2.height * k
 * 		return sqrtf(             # <<<<<<<<<<<<<<
 * 			powf(centerX2 - centerX1, 2) + powf(centerY2 - centerY1, 2)
 * 			)
*/
  __Pyx_XDECREF(__pyx_r);

  /* "pysfml261.pyx":1653
 * 		cdef float centerY2 = rect2.top + rect2.height * k
 * 		return sqrtf(
 * 			powf(centerX2 - centerX1, 2) + powf(centerY2 - centerY1, 2)             # <<<<<<<<<<<<<<
 * 			)
 * 
*/
  __pyx_t_1 = PyFloat_FromDouble(sqrtf((powf((__pyx_v_centerX2 - __pyx_v_centerX1), 2.0) + powf((__pyx_v_centerY2 - __pyx_v_centerY1), 2.0)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1634
 * 			resizeSprite(sprite2.sprite, rect1.width, rect1.height)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_distance(
 * 		sfSprite sprite1,
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.get_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1656
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def scale(
 * 		sfSprite sprite,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_11scale(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_11scale = {"scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_11scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_11scale(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  float __pyx_v_kx;
  float __pyx_v_ky;
  int __pyx_v_local;
  int __pyx_v_keep_left_top;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scale (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_kx,&__pyx_mstate_global->__pyx_n_u_ky,&__pyx_mstate_global->__pyx_n_u_local,&__pyx_mstate_global->__pyx_n_u_keep_left_top,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1656, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "scale", 0) < 0) __PYX_ERR(0, 1656, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("scale", 0, 1, 5, i); __PYX_ERR(0, 1656, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1656, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1656, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    if (values[1]) {
      __pyx_v_kx = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_kx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L3_error)
    } else {
      __pyx_v_kx = ((float)1.0);
    }
    if (values[2]) {
      __pyx_v_ky = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_ky == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1660, __pyx_L3_error)
    } else {
      __pyx_v_ky = ((float)1.0);
    }
    if (values[3]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1661, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1661
 * 		float kx = 1,
 * 		float ky = 1,
 * 		bint local = True,             # <<<<<<<<<<<<<<
 * 		bint keep_left_top = True
 * 		) -> None:
*/
      __pyx_v_local = ((int)1);
    }
    if (values[4]) {
      __pyx_v_keep_left_top = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_keep_left_top == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1662
 * 		float ky = 1,
 * 		bint local = True,
 * 		bint keep_left_top = True             # <<<<<<<<<<<<<<
 * 		) -> None:
 * 		if keep_left_top:
*/
      __pyx_v_keep_left_top = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scale", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 1656, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1658, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_10scale(__pyx_v_sprite, __pyx_v_kx, __pyx_v_ky, __pyx_v_local, __pyx_v_keep_left_top);

  /* "pysfml261.pyx":1656
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def scale(
 * 		sfSprite sprite,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_10scale(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_kx, float __pyx_v_ky, int __pyx_v_local, int __pyx_v_keep_left_top) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scale", 0);

  /* "pysfml261.pyx":1664
 * 		bint keep_left_top = True
 * 		) -> None:
 * 		if keep_left_top:             # <<<<<<<<<<<<<<
 * 			scaleSpriteKeepLeftTop(sprite.sprite, kx, ky)
 * 		else:
*/
  if (__pyx_v_keep_left_top) {

    /* "pysfml261.pyx":1665
 * 		) -> None:
 * 		if keep_left_top:
 * 			scaleSpriteKeepLeftTop(sprite.sprite, kx, ky)             # <<<<<<<<<<<<<<
 * 		else:
 * 			scaleSpriteKeepCenter(sprite.sprite, kx, ky, local)
*/
    __pyx_f_9pysfml261_scaleSpriteKeepLeftTop(__pyx_v_sprite->sprite, __pyx_v_kx, __pyx_v_ky); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1665, __pyx_L1_error)

    /* "pysfml261.pyx":1664
 * 		bint keep_left_top = True
 * 		) -> None:
 * 		if keep_left_top:             # <<<<<<<<<<<<<<
 * 			scaleSpriteKeepLeftTop(sprite.sprite, kx, ky)
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1667
 * 			scaleSpriteKeepLeftTop(sprite.sprite, kx, ky)
 * 		else:
 * 			scaleSpriteKeepCenter(sprite.sprite, kx, ky, local)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  /*else*/ {
    __pyx_f_9pysfml261_scaleSpriteKeepCenter(__pyx_v_sprite->sprite, __pyx_v_kx, __pyx_v_ky, __pyx_v_local); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1667, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1656
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def scale(
 * 		sfSprite sprite,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1669
 * 			scaleSpriteKeepCenter(sprite.sprite, kx, ky, local)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def resize(
 * 		sfSprite sprite,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_13resize(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_13resize = {"resize", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_13resize, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_13resize(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  float __pyx_v_width;
  float __pyx_v_height;
  int __pyx_v_keep_w;
  int __pyx_v_keep_h;
  int __pyx_v_shift_dx;
  int __pyx_v_shift_dy;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[8] = {0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("resize (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_width,&__pyx_mstate_global->__pyx_n_u_height,&__pyx_mstate_global->__pyx_n_u_keep_w,&__pyx_mstate_global->__pyx_n_u_keep_h,&__pyx_mstate_global->__pyx_n_u_shift_dx,&__pyx_mstate_global->__pyx_n_u_shift_dy,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1669, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  8:
        values[7] = __Pyx_ArgRef_FASTCALL(__pyx_args, 7);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[7])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  7:
        values[6] = __Pyx_ArgRef_FASTCALL(__pyx_args, 6);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[6])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  6:
        values[5] = __Pyx_ArgRef_FASTCALL(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "resize", 0) < 0) __PYX_ERR(0, 1669, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("resize", 0, 1, 8, i); __PYX_ERR(0, 1669, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  8:
        values[7] = __Pyx_ArgRef_FASTCALL(__pyx_args, 7);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[7])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  7:
        values[6] = __Pyx_ArgRef_FASTCALL(__pyx_args, 6);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[6])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  6:
        values[5] = __Pyx_ArgRef_FASTCALL(__pyx_args, 5);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[5])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1669, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1669, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    if (values[1]) {
      __pyx_v_width = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1672, __pyx_L3_error)
    } else {
      __pyx_v_width = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_height = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1673, __pyx_L3_error)
    } else {
      __pyx_v_height = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_keep_w = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_keep_w == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1674, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1674
 * 		float width = 0,
 * 		float height = 0,
 * 		bint keep_w = False,             # <<<<<<<<<<<<<<
 * 		bint keep_h = False,
 * 		bint shift_dx = False,
*/
      __pyx_v_keep_w = ((int)0);
    }
    if (values[4]) {
      __pyx_v_keep_h = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_keep_h == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1675, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1675
 * 		float height = 0,
 * 		bint keep_w = False,
 * 		bint keep_h = False,             # <<<<<<<<<<<<<<
 * 		bint shift_dx = False,
 * 		bint shift_dy = False,
*/
      __pyx_v_keep_h = ((int)0);
    }
    if (values[5]) {
      __pyx_v_shift_dx = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_shift_dx == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1676, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1676
 * 		bint keep_w = False,
 * 		bint keep_h = False,
 * 		bint shift_dx = False,             # <<<<<<<<<<<<<<
 * 		bint shift_dy = False,
 * 		bint local = True
*/
      __pyx_v_shift_dx = ((int)0);
    }
    if (values[6]) {
      __pyx_v_shift_dy = __Pyx_PyObject_IsTrue(values[6]); if (unlikely((__pyx_v_shift_dy == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1677, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1677
 * 		bint keep_h = False,
 * 		bint shift_dx = False,
 * 		bint shift_dy = False,             # <<<<<<<<<<<<<<
 * 		bint local = True
 * 		) -> None:
*/
      __pyx_v_shift_dy = ((int)0);
    }
    if (values[7]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[7]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1678, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1678
 * 		bint shift_dx = False,
 * 		bint shift_dy = False,
 * 		bint local = True             # <<<<<<<<<<<<<<
 * 		) -> None:
 * 		cdef FloatRect before, after
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("resize", 0, 1, 8, __pyx_nargs); __PYX_ERR(0, 1669, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.resize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1671, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_12resize(__pyx_v_sprite, __pyx_v_width, __pyx_v_height, __pyx_v_keep_w, __pyx_v_keep_h, __pyx_v_shift_dx, __pyx_v_shift_dy, __pyx_v_local);

  /* "pysfml261.pyx":1669
 * 			scaleSpriteKeepCenter(sprite.sprite, kx, ky, local)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def resize(
 * 		sfSprite sprite,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_12resize(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_width, float __pyx_v_height, int __pyx_v_keep_w, int __pyx_v_keep_h, int __pyx_v_shift_dx, int __pyx_v_shift_dy, int __pyx_v_local) {
  sf::FloatRect __pyx_v_before;
  sf::FloatRect __pyx_v_after;
  float __pyx_v_centerX1;
  float __pyx_v_centerX2;
  float __pyx_v_dx;
  float __pyx_v_dy;
  float __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("resize", 0);

  /* "pysfml261.pyx":1681
 * 		) -> None:
 * 		cdef FloatRect before, after
 * 		if local:             # <<<<<<<<<<<<<<
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1682
 * 		cdef FloatRect before, after
 * 		if local:
 * 			before = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()
*/
    __pyx_v_before = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

    /* "pysfml261.pyx":1681
 * 		) -> None:
 * 		cdef FloatRect before, after
 * 		if local:             # <<<<<<<<<<<<<<
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1684
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		if keep_w:
 * 			resizeSpriteKeepWidth(sprite.sprite, width)
*/
  /*else*/ {
    __pyx_v_before = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1685
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()
 * 		if keep_w:             # <<<<<<<<<<<<<<
 * 			resizeSpriteKeepWidth(sprite.sprite, width)
 * 		elif keep_h:
*/
  if (__pyx_v_keep_w) {

    /* "pysfml261.pyx":1686
 * 			before = sprite.sprite.getGlobalBounds()
 * 		if keep_w:
 * 			resizeSpriteKeepWidth(sprite.sprite, width)             # <<<<<<<<<<<<<<
 * 		elif keep_h:
 * 			resizeSpriteKeepHeight(sprite.sprite, height)
*/
    __pyx_f_9pysfml261_resizeSpriteKeepWidth(__pyx_v_sprite->sprite, __pyx_v_width); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1686, __pyx_L1_error)

    /* "pysfml261.pyx":1685
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()
 * 		if keep_w:             # <<<<<<<<<<<<<<
 * 			resizeSpriteKeepWidth(sprite.sprite, width)
 * 		elif keep_h:
*/
    goto __pyx_L4;
  }

  /* "pysfml261.pyx":1687
 * 		if keep_w:
 * 			resizeSpriteKeepWidth(sprite.sprite, width)
 * 		elif keep_h:             # <<<<<<<<<<<<<<
 * 			resizeSpriteKeepHeight(sprite.sprite, height)
 * 		else:
*/
  if (__pyx_v_keep_h) {

    /* "pysfml261.pyx":1688
 * 			resizeSpriteKeepWidth(sprite.sprite, width)
 * 		elif keep_h:
 * 			resizeSpriteKeepHeight(sprite.sprite, height)             # <<<<<<<<<<<<<<
 * 		else:
 * 			resizeSprite(sprite.sprite, width, height)
*/
    __pyx_f_9pysfml261_resizeSpriteKeepHeight(__pyx_v_sprite->sprite, __pyx_v_height); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1688, __pyx_L1_error)

    /* "pysfml261.pyx":1687
 * 		if keep_w:
 * 			resizeSpriteKeepWidth(sprite.sprite, width)
 * 		elif keep_h:             # <<<<<<<<<<<<<<
 * 			resizeSpriteKeepHeight(sprite.sprite, height)
 * 		else:
*/
    goto __pyx_L4;
  }

  /* "pysfml261.pyx":1690
 * 			resizeSpriteKeepHeight(sprite.sprite, height)
 * 		else:
 * 			resizeSprite(sprite.sprite, width, height)             # <<<<<<<<<<<<<<
 * 		cdef float centerX1, centerX2, dx = 0, dy = 0, k = <float>.5
 * 		if shift_dx or shift_dy:
*/
  /*else*/ {
    __pyx_f_9pysfml261_resizeSprite(__pyx_v_sprite->sprite, __pyx_v_width, __pyx_v_height); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1690, __pyx_L1_error)
  }
  __pyx_L4:;

  /* "pysfml261.pyx":1691
 * 		else:
 * 			resizeSprite(sprite.sprite, width, height)
 * 		cdef float centerX1, centerX2, dx = 0, dy = 0, k = <float>.5             # <<<<<<<<<<<<<<
 * 		if shift_dx or shift_dy:
 * 			if local:
*/
  __pyx_v_dx = 0.0;
  __pyx_v_dy = 0.0;
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1692
 * 			resizeSprite(sprite.sprite, width, height)
 * 		cdef float centerX1, centerX2, dx = 0, dy = 0, k = <float>.5
 * 		if shift_dx or shift_dy:             # <<<<<<<<<<<<<<
 * 			if local:
 * 				after = sprite.sprite.getLocalBounds()
*/
  if (!__pyx_v_shift_dx) {
  } else {
    __pyx_t_1 = __pyx_v_shift_dx;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_1 = __pyx_v_shift_dy;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pysfml261.pyx":1693
 * 		cdef float centerX1, centerX2, dx = 0, dy = 0, k = <float>.5
 * 		if shift_dx or shift_dy:
 * 			if local:             # <<<<<<<<<<<<<<
 * 				after = sprite.sprite.getLocalBounds()
 * 			else:
*/
    if (__pyx_v_local) {

      /* "pysfml261.pyx":1694
 * 		if shift_dx or shift_dy:
 * 			if local:
 * 				after = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 			else:
 * 				after = sprite.sprite.getGlobalBounds()
*/
      __pyx_v_after = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

      /* "pysfml261.pyx":1693
 * 		cdef float centerX1, centerX2, dx = 0, dy = 0, k = <float>.5
 * 		if shift_dx or shift_dy:
 * 			if local:             # <<<<<<<<<<<<<<
 * 				after = sprite.sprite.getLocalBounds()
 * 			else:
*/
      goto __pyx_L8;
    }

    /* "pysfml261.pyx":1696
 * 				after = sprite.sprite.getLocalBounds()
 * 			else:
 * 				after = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 			if shift_dx:
 * 				centerX1 = before.left + before.width * k
*/
    /*else*/ {
      __pyx_v_after = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
    }
    __pyx_L8:;

    /* "pysfml261.pyx":1697
 * 			else:
 * 				after = sprite.sprite.getGlobalBounds()
 * 			if shift_dx:             # <<<<<<<<<<<<<<
 * 				centerX1 = before.left + before.width * k
 * 				centerX2 = after.left + after.width * k
*/
    if (__pyx_v_shift_dx) {

      /* "pysfml261.pyx":1698
 * 				after = sprite.sprite.getGlobalBounds()
 * 			if shift_dx:
 * 				centerX1 = before.left + before.width * k             # <<<<<<<<<<<<<<
 * 				centerX2 = after.left + after.width * k
 * 				dx = centerX1 - centerX2
*/
      __pyx_v_centerX1 = (__pyx_v_before.left + (__pyx_v_before.width * __pyx_v_k));

      /* "pysfml261.pyx":1699
 * 			if shift_dx:
 * 				centerX1 = before.left + before.width * k
 * 				centerX2 = after.left + after.width * k             # <<<<<<<<<<<<<<
 * 				dx = centerX1 - centerX2
 * 			if shift_dy:
*/
      __pyx_v_centerX2 = (__pyx_v_after.left + (__pyx_v_after.width * __pyx_v_k));

      /* "pysfml261.pyx":1700
 * 				centerX1 = before.left + before.width * k
 * 				centerX2 = after.left + after.width * k
 * 				dx = centerX1 - centerX2             # <<<<<<<<<<<<<<
 * 			if shift_dy:
 * 				dy = before.height - after.height
*/
      __pyx_v_dx = (__pyx_v_centerX1 - __pyx_v_centerX2);

      /* "pysfml261.pyx":1697
 * 			else:
 * 				after = sprite.sprite.getGlobalBounds()
 * 			if shift_dx:             # <<<<<<<<<<<<<<
 * 				centerX1 = before.left + before.width * k
 * 				centerX2 = after.left + after.width * k
*/
    }

    /* "pysfml261.pyx":1701
 * 				centerX2 = after.left + after.width * k
 * 				dx = centerX1 - centerX2
 * 			if shift_dy:             # <<<<<<<<<<<<<<
 * 				dy = before.height - after.height
 * 			sprite.sprite.move(dx, dy)
*/
    if (__pyx_v_shift_dy) {

      /* "pysfml261.pyx":1702
 * 				dx = centerX1 - centerX2
 * 			if shift_dy:
 * 				dy = before.height - after.height             # <<<<<<<<<<<<<<
 * 			sprite.sprite.move(dx, dy)
 * 
*/
      __pyx_v_dy = (__pyx_v_before.height - __pyx_v_after.height);

      /* "pysfml261.pyx":1701
 * 				centerX2 = after.left + after.width * k
 * 				dx = centerX1 - centerX2
 * 			if shift_dy:             # <<<<<<<<<<<<<<
 * 				dy = before.height - after.height
 * 			sprite.sprite.move(dx, dy)
*/
    }

    /* "pysfml261.pyx":1703
 * 			if shift_dy:
 * 				dy = before.height - after.height
 * 			sprite.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
    __pyx_v_sprite->sprite->move(__pyx_v_dx, __pyx_v_dy);

    /* "pysfml261.pyx":1692
 * 			resizeSprite(sprite.sprite, width, height)
 * 		cdef float centerX1, centerX2, dx = 0, dy = 0, k = <float>.5
 * 		if shift_dx or shift_dy:             # <<<<<<<<<<<<<<
 * 			if local:
 * 				after = sprite.sprite.getLocalBounds()
*/
  }

  /* "pysfml261.pyx":1669
 * 			scaleSpriteKeepCenter(sprite.sprite, kx, ky, local)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def resize(
 * 		sfSprite sprite,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.resize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1705
 * 			sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def flip(
 * 		sfSprite sprite,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_15flip(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_15flip = {"flip", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_15flip, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_15flip(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  int __pyx_v_flipX;
  int __pyx_v_flipY;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("flip (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_flipX,&__pyx_mstate_global->__pyx_n_u_flipY,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1705, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1705, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1705, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1705, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1705, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "flip", 0) < 0) __PYX_ERR(0, 1705, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("flip", 0, 1, 4, i); __PYX_ERR(0, 1705, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1705, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1705, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1705, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1705, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    if (values[1]) {
      __pyx_v_flipX = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_flipX == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1708, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1708
 * 	def flip(
 * 		sfSprite sprite,
 * 		bint flipX = False,             # <<<<<<<<<<<<<<
 * 		bint flipY = False,
 * 		bint local=True
*/
      __pyx_v_flipX = ((int)0);
    }
    if (values[2]) {
      __pyx_v_flipY = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_flipY == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1709, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1709
 * 		sfSprite sprite,
 * 		bint flipX = False,
 * 		bint flipY = False,             # <<<<<<<<<<<<<<
 * 		bint local=True
 * 		) -> None:
*/
      __pyx_v_flipY = ((int)0);
    }
    if (values[3]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1710, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1710
 * 		bint flipX = False,
 * 		bint flipY = False,
 * 		bint local=True             # <<<<<<<<<<<<<<
 * 		) -> None:
 * 		cdef Vector2f scale = <const Vector2f>sprite.sprite.getScale()
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("flip", 0, 1, 4, __pyx_nargs); __PYX_ERR(0, 1705, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.flip", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1707, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_14flip(__pyx_v_sprite, __pyx_v_flipX, __pyx_v_flipY, __pyx_v_local);

  /* "pysfml261.pyx":1705
 * 			sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def flip(
 * 		sfSprite sprite,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_14flip(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, int __pyx_v_flipX, int __pyx_v_flipY, int __pyx_v_local) {
  sf::Vector2f __pyx_v_scale;
  sf::FloatRect __pyx_v_rect;
  float __pyx_v_kx;
  float __pyx_v_ky;
  float __pyx_v_dx;
  float __pyx_v_dy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  float __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("flip", 0);

  /* "pysfml261.pyx":1712
 * 		bint local=True
 * 		) -> None:
 * 		cdef Vector2f scale = <const Vector2f>sprite.sprite.getScale()             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		if local:
*/
  __pyx_v_scale = ((sf::Vector2f const )__pyx_v_sprite->sprite->getScale());

  /* "pysfml261.pyx":1714
 * 		cdef Vector2f scale = <const Vector2f>sprite.sprite.getScale()
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = sprite.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1715
 * 		cdef FloatRect rect
 * 		if local:
 * 			rect = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect = sprite.sprite.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

    /* "pysfml261.pyx":1714
 * 		cdef Vector2f scale = <const Vector2f>sprite.sprite.getScale()
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = sprite.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1717
 * 			rect = sprite.sprite.getLocalBounds()
 * 		else:
 * 			rect = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float kx = scale.x, ky = scale.y
 * 		if flipX:
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1718
 * 		else:
 * 			rect = sprite.sprite.getGlobalBounds()
 * 		cdef float kx = scale.x, ky = scale.y             # <<<<<<<<<<<<<<
 * 		if flipX:
 * 			kx *= -1
*/
  __pyx_t_1 = __pyx_v_scale.x;
  __pyx_v_kx = __pyx_t_1;
  __pyx_t_1 = __pyx_v_scale.y;
  __pyx_v_ky = __pyx_t_1;

  /* "pysfml261.pyx":1719
 * 			rect = sprite.sprite.getGlobalBounds()
 * 		cdef float kx = scale.x, ky = scale.y
 * 		if flipX:             # <<<<<<<<<<<<<<
 * 			kx *= -1
 * 		if flipY:
*/
  if (__pyx_v_flipX) {

    /* "pysfml261.pyx":1720
 * 		cdef float kx = scale.x, ky = scale.y
 * 		if flipX:
 * 			kx *= -1             # <<<<<<<<<<<<<<
 * 		if flipY:
 * 			ky *= -1
*/
    __pyx_v_kx = (__pyx_v_kx * -1.0);

    /* "pysfml261.pyx":1719
 * 			rect = sprite.sprite.getGlobalBounds()
 * 		cdef float kx = scale.x, ky = scale.y
 * 		if flipX:             # <<<<<<<<<<<<<<
 * 			kx *= -1
 * 		if flipY:
*/
  }

  /* "pysfml261.pyx":1721
 * 		if flipX:
 * 			kx *= -1
 * 		if flipY:             # <<<<<<<<<<<<<<
 * 			ky *= -1
 * 		sprite.sprite.setScale(kx, ky)
*/
  if (__pyx_v_flipY) {

    /* "pysfml261.pyx":1722
 * 			kx *= -1
 * 		if flipY:
 * 			ky *= -1             # <<<<<<<<<<<<<<
 * 		sprite.sprite.setScale(kx, ky)
 * 		cdef float dx = 0, dy = 0
*/
    __pyx_v_ky = (__pyx_v_ky * -1.0);

    /* "pysfml261.pyx":1721
 * 		if flipX:
 * 			kx *= -1
 * 		if flipY:             # <<<<<<<<<<<<<<
 * 			ky *= -1
 * 		sprite.sprite.setScale(kx, ky)
*/
  }

  /* "pysfml261.pyx":1723
 * 		if flipY:
 * 			ky *= -1
 * 		sprite.sprite.setScale(kx, ky)             # <<<<<<<<<<<<<<
 * 		cdef float dx = 0, dy = 0
 * 		if kx < 0:
*/
  __pyx_v_sprite->sprite->setScale(__pyx_v_kx, __pyx_v_ky);

  /* "pysfml261.pyx":1724
 * 			ky *= -1
 * 		sprite.sprite.setScale(kx, ky)
 * 		cdef float dx = 0, dy = 0             # <<<<<<<<<<<<<<
 * 		if kx < 0:
 * 			dx = rect.width
*/
  __pyx_v_dx = 0.0;
  __pyx_v_dy = 0.0;

  /* "pysfml261.pyx":1725
 * 		sprite.sprite.setScale(kx, ky)
 * 		cdef float dx = 0, dy = 0
 * 		if kx < 0:             # <<<<<<<<<<<<<<
 * 			dx = rect.width
 * 		if ky < 0:
*/
  __pyx_t_2 = (__pyx_v_kx < 0.0);
  if (__pyx_t_2) {

    /* "pysfml261.pyx":1726
 * 		cdef float dx = 0, dy = 0
 * 		if kx < 0:
 * 			dx = rect.width             # <<<<<<<<<<<<<<
 * 		if ky < 0:
 * 			dy = rect.height
*/
    __pyx_t_1 = __pyx_v_rect.width;
    __pyx_v_dx = __pyx_t_1;

    /* "pysfml261.pyx":1725
 * 		sprite.sprite.setScale(kx, ky)
 * 		cdef float dx = 0, dy = 0
 * 		if kx < 0:             # <<<<<<<<<<<<<<
 * 			dx = rect.width
 * 		if ky < 0:
*/
  }

  /* "pysfml261.pyx":1727
 * 		if kx < 0:
 * 			dx = rect.width
 * 		if ky < 0:             # <<<<<<<<<<<<<<
 * 			dy = rect.height
 * 		sprite.sprite.setPosition(rect.left, rect.top)
*/
  __pyx_t_2 = (__pyx_v_ky < 0.0);
  if (__pyx_t_2) {

    /* "pysfml261.pyx":1728
 * 			dx = rect.width
 * 		if ky < 0:
 * 			dy = rect.height             # <<<<<<<<<<<<<<
 * 		sprite.sprite.setPosition(rect.left, rect.top)
 * 		sprite.sprite.move(dx, dy)
*/
    __pyx_t_1 = __pyx_v_rect.height;
    __pyx_v_dy = __pyx_t_1;

    /* "pysfml261.pyx":1727
 * 		if kx < 0:
 * 			dx = rect.width
 * 		if ky < 0:             # <<<<<<<<<<<<<<
 * 			dy = rect.height
 * 		sprite.sprite.setPosition(rect.left, rect.top)
*/
  }

  /* "pysfml261.pyx":1729
 * 		if ky < 0:
 * 			dy = rect.height
 * 		sprite.sprite.setPosition(rect.left, rect.top)             # <<<<<<<<<<<<<<
 * 		sprite.sprite.move(dx, dy)
 * 
*/
  __pyx_v_sprite->sprite->setPosition(__pyx_v_rect.left, __pyx_v_rect.top);

  /* "pysfml261.pyx":1730
 * 			dy = rect.height
 * 		sprite.sprite.setPosition(rect.left, rect.top)
 * 		sprite.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __pyx_v_sprite->sprite->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1705
 * 			sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def flip(
 * 		sfSprite sprite,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1732
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def set_rotation_around_center(
 * 		sfSprite sprite,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_17set_rotation_around_center(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_17set_rotation_around_center = {"set_rotation_around_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_17set_rotation_around_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_17set_rotation_around_center(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  float __pyx_v_degrees;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation_around_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_degrees,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1732, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1732, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1732, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1732, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_rotation_around_center", 0) < 0) __PYX_ERR(0, 1732, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_rotation_around_center", 0, 1, 3, i); __PYX_ERR(0, 1732, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1732, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1732, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1732, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    if (values[1]) {
      __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1735, __pyx_L3_error)
    } else {
      __pyx_v_degrees = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1736, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1736
 * 		sfSprite sprite,
 * 		float degrees = 0,
 * 		bint local = True             # <<<<<<<<<<<<<<
 * 		) -> None:
 * 		cdef float k = <float>.5
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_rotation_around_center", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 1732, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.set_rotation_around_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1734, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_16set_rotation_around_center(__pyx_v_sprite, __pyx_v_degrees, __pyx_v_local);

  /* "pysfml261.pyx":1732
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def set_rotation_around_center(
 * 		sfSprite sprite,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_16set_rotation_around_center(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_degrees, int __pyx_v_local) {
  float __pyx_v_k;
  sf::FloatRect __pyx_v_before;
  float __pyx_v_center_x1;
  float __pyx_v_center_y1;
  sf::FloatRect __pyx_v_after;
  float __pyx_v_center_x2;
  float __pyx_v_center_y2;
  float __pyx_v_dx;
  float __pyx_v_dy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation_around_center", 0);

  /* "pysfml261.pyx":1738
 * 		bint local = True
 * 		) -> None:
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		cdef FloatRect before
 * 		if local:
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1740
 * 		cdef float k = <float>.5
 * 		cdef FloatRect before
 * 		if local:             # <<<<<<<<<<<<<<
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1741
 * 		cdef FloatRect before
 * 		if local:
 * 			before = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()
*/
    __pyx_v_before = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

    /* "pysfml261.pyx":1740
 * 		cdef float k = <float>.5
 * 		cdef FloatRect before
 * 		if local:             # <<<<<<<<<<<<<<
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1743
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float center_x1 = before.left + before.width * k
 * 		cdef float center_y1 = before.top + before.height * k
*/
  /*else*/ {
    __pyx_v_before = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1744
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()
 * 		cdef float center_x1 = before.left + before.width * k             # <<<<<<<<<<<<<<
 * 		cdef float center_y1 = before.top + before.height * k
 * 		sprite.sprite.setRotation(degrees)
*/
  __pyx_v_center_x1 = (__pyx_v_before.left + (__pyx_v_before.width * __pyx_v_k));

  /* "pysfml261.pyx":1745
 * 			before = sprite.sprite.getGlobalBounds()
 * 		cdef float center_x1 = before.left + before.width * k
 * 		cdef float center_y1 = before.top + before.height * k             # <<<<<<<<<<<<<<
 * 		sprite.sprite.setRotation(degrees)
 * 		cdef FloatRect after
*/
  __pyx_v_center_y1 = (__pyx_v_before.top + (__pyx_v_before.height * __pyx_v_k));

  /* "pysfml261.pyx":1746
 * 		cdef float center_x1 = before.left + before.width * k
 * 		cdef float center_y1 = before.top + before.height * k
 * 		sprite.sprite.setRotation(degrees)             # <<<<<<<<<<<<<<
 * 		cdef FloatRect after
 * 		if local:
*/
  __pyx_v_sprite->sprite->setRotation(__pyx_v_degrees);

  /* "pysfml261.pyx":1748
 * 		sprite.sprite.setRotation(degrees)
 * 		cdef FloatRect after
 * 		if local:             # <<<<<<<<<<<<<<
 * 			after = sprite.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1749
 * 		cdef FloatRect after
 * 		if local:
 * 			after = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			after = sprite.sprite.getGlobalBounds()
*/
    __pyx_v_after = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

    /* "pysfml261.pyx":1748
 * 		sprite.sprite.setRotation(degrees)
 * 		cdef FloatRect after
 * 		if local:             # <<<<<<<<<<<<<<
 * 			after = sprite.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L4;
  }

  /* "pysfml261.pyx":1751
 * 			after = sprite.sprite.getLocalBounds()
 * 		else:
 * 			after = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float center_x2 = after.left + after.width * k
 * 		cdef float center_y2 = after.top + after.height * k
*/
  /*else*/ {
    __pyx_v_after = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
  }
  __pyx_L4:;

  /* "pysfml261.pyx":1752
 * 		else:
 * 			after = sprite.sprite.getGlobalBounds()
 * 		cdef float center_x2 = after.left + after.width * k             # <<<<<<<<<<<<<<
 * 		cdef float center_y2 = after.top + after.height * k
 * 		cdef float dx = center_x1 - center_x2
*/
  __pyx_v_center_x2 = (__pyx_v_after.left + (__pyx_v_after.width * __pyx_v_k));

  /* "pysfml261.pyx":1753
 * 			after = sprite.sprite.getGlobalBounds()
 * 		cdef float center_x2 = after.left + after.width * k
 * 		cdef float center_y2 = after.top + after.height * k             # <<<<<<<<<<<<<<
 * 		cdef float dx = center_x1 - center_x2
 * 		cdef float dy = center_y1 - center_y2
*/
  __pyx_v_center_y2 = (__pyx_v_after.top + (__pyx_v_after.height * __pyx_v_k));

  /* "pysfml261.pyx":1754
 * 		cdef float center_x2 = after.left + after.width * k
 * 		cdef float center_y2 = after.top + after.height * k
 * 		cdef float dx = center_x1 - center_x2             # <<<<<<<<<<<<<<
 * 		cdef float dy = center_y1 - center_y2
 * 		sprite.sprite.move(dx, dy)
*/
  __pyx_v_dx = (__pyx_v_center_x1 - __pyx_v_center_x2);

  /* "pysfml261.pyx":1755
 * 		cdef float center_y2 = after.top + after.height * k
 * 		cdef float dx = center_x1 - center_x2
 * 		cdef float dy = center_y1 - center_y2             # <<<<<<<<<<<<<<
 * 		sprite.sprite.move(dx, dy)
 * 
*/
  __pyx_v_dy = (__pyx_v_center_y1 - __pyx_v_center_y2);

  /* "pysfml261.pyx":1756
 * 		cdef float dx = center_x1 - center_x2
 * 		cdef float dy = center_y1 - center_y2
 * 		sprite.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __pyx_v_sprite->sprite->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1732
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def set_rotation_around_center(
 * 		sfSprite sprite,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1758
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def rotate_around_center(
 * 		sfSprite sprite,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_19rotate_around_center(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_19rotate_around_center = {"rotate_around_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_19rotate_around_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_19rotate_around_center(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  float __pyx_v_degrees;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate_around_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_degrees,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1758, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1758, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1758, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1758, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "rotate_around_center", 0) < 0) __PYX_ERR(0, 1758, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("rotate_around_center", 0, 1, 3, i); __PYX_ERR(0, 1758, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1758, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1758, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1758, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    if (values[1]) {
      __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1761, __pyx_L3_error)
    } else {
      __pyx_v_degrees = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1762, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1762
 * 		sfSprite sprite,
 * 		float degrees = 0,
 * 		bint local = True             # <<<<<<<<<<<<<<
 * 		) -> None:
 * 		cdef float k = <float>.5
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate_around_center", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 1758, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.rotate_around_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1760, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_18rotate_around_center(__pyx_v_sprite, __pyx_v_degrees, __pyx_v_local);

  /* "pysfml261.pyx":1758
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def rotate_around_center(
 * 		sfSprite sprite,
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_18rotate_around_center(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_degrees, int __pyx_v_local) {
  float __pyx_v_k;
  sf::FloatRect __pyx_v_before;
  float __pyx_v_center_x1;
  float __pyx_v_center_y1;
  sf::FloatRect __pyx_v_after;
  float __pyx_v_center_x2;
  float __pyx_v_center_y2;
  float __pyx_v_dx;
  float __pyx_v_dy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate_around_center", 0);

  /* "pysfml261.pyx":1764
 * 		bint local = True
 * 		) -> None:
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		cdef FloatRect before
 * 		if local:
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":1766
 * 		cdef float k = <float>.5
 * 		cdef FloatRect before
 * 		if local:             # <<<<<<<<<<<<<<
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1767
 * 		cdef FloatRect before
 * 		if local:
 * 			before = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()
*/
    __pyx_v_before = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

    /* "pysfml261.pyx":1766
 * 		cdef float k = <float>.5
 * 		cdef FloatRect before
 * 		if local:             # <<<<<<<<<<<<<<
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1769
 * 			before = sprite.sprite.getLocalBounds()
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float center_x1 = before.left + before.width * k
 * 		cdef float center_y1 = before.top + before.height * k
*/
  /*else*/ {
    __pyx_v_before = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1770
 * 		else:
 * 			before = sprite.sprite.getGlobalBounds()
 * 		cdef float center_x1 = before.left + before.width * k             # <<<<<<<<<<<<<<
 * 		cdef float center_y1 = before.top + before.height * k
 * 		sprite.sprite.rotate(degrees)
*/
  __pyx_v_center_x1 = (__pyx_v_before.left + (__pyx_v_before.width * __pyx_v_k));

  /* "pysfml261.pyx":1771
 * 			before = sprite.sprite.getGlobalBounds()
 * 		cdef float center_x1 = before.left + before.width * k
 * 		cdef float center_y1 = before.top + before.height * k             # <<<<<<<<<<<<<<
 * 		sprite.sprite.rotate(degrees)
 * 		cdef FloatRect after
*/
  __pyx_v_center_y1 = (__pyx_v_before.top + (__pyx_v_before.height * __pyx_v_k));

  /* "pysfml261.pyx":1772
 * 		cdef float center_x1 = before.left + before.width * k
 * 		cdef float center_y1 = before.top + before.height * k
 * 		sprite.sprite.rotate(degrees)             # <<<<<<<<<<<<<<
 * 		cdef FloatRect after
 * 		if local:
*/
  __pyx_v_sprite->sprite->rotate(__pyx_v_degrees);

  /* "pysfml261.pyx":1774
 * 		sprite.sprite.rotate(degrees)
 * 		cdef FloatRect after
 * 		if local:             # <<<<<<<<<<<<<<
 * 			after = sprite.sprite.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1775
 * 		cdef FloatRect after
 * 		if local:
 * 			after = sprite.sprite.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			after = sprite.sprite.getGlobalBounds()
*/
    __pyx_v_after = ((sf::FloatRect)__pyx_v_sprite->sprite->getLocalBounds());

    /* "pysfml261.pyx":1774
 * 		sprite.sprite.rotate(degrees)
 * 		cdef FloatRect after
 * 		if local:             # <<<<<<<<<<<<<<
 * 			after = sprite.sprite.getLocalBounds()
 * 		else:
*/
    goto __pyx_L4;
  }

  /* "pysfml261.pyx":1777
 * 			after = sprite.sprite.getLocalBounds()
 * 		else:
 * 			after = sprite.sprite.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		cdef float center_x2 = after.left + after.width * k
 * 		cdef float center_y2 = after.top + after.height * k
*/
  /*else*/ {
    __pyx_v_after = ((sf::FloatRect)__pyx_v_sprite->sprite->getGlobalBounds());
  }
  __pyx_L4:;

  /* "pysfml261.pyx":1778
 * 		else:
 * 			after = sprite.sprite.getGlobalBounds()
 * 		cdef float center_x2 = after.left + after.width * k             # <<<<<<<<<<<<<<
 * 		cdef float center_y2 = after.top + after.height * k
 * 		cdef float dx = center_x1 - center_x2
*/
  __pyx_v_center_x2 = (__pyx_v_after.left + (__pyx_v_after.width * __pyx_v_k));

  /* "pysfml261.pyx":1779
 * 			after = sprite.sprite.getGlobalBounds()
 * 		cdef float center_x2 = after.left + after.width * k
 * 		cdef float center_y2 = after.top + after.height * k             # <<<<<<<<<<<<<<
 * 		cdef float dx = center_x1 - center_x2
 * 		cdef float dy = center_y1 - center_y2
*/
  __pyx_v_center_y2 = (__pyx_v_after.top + (__pyx_v_after.height * __pyx_v_k));

  /* "pysfml261.pyx":1780
 * 		cdef float center_x2 = after.left + after.width * k
 * 		cdef float center_y2 = after.top + after.height * k
 * 		cdef float dx = center_x1 - center_x2             # <<<<<<<<<<<<<<
 * 		cdef float dy = center_y1 - center_y2
 * 		sprite.sprite.move(dx, dy)
*/
  __pyx_v_dx = (__pyx_v_center_x1 - __pyx_v_center_x2);

  /* "pysfml261.pyx":1781
 * 		cdef float center_y2 = after.top + after.height * k
 * 		cdef float dx = center_x1 - center_x2
 * 		cdef float dy = center_y1 - center_y2             # <<<<<<<<<<<<<<
 * 		sprite.sprite.move(dx, dy)
 * 
*/
  __pyx_v_dy = (__pyx_v_center_y1 - __pyx_v_center_y2);

  /* "pysfml261.pyx":1782
 * 		cdef float dx = center_x1 - center_x2
 * 		cdef float dy = center_y1 - center_y2
 * 		sprite.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __pyx_v_sprite->sprite->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1758
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def rotate_around_center(
 * 		sfSprite sprite,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1784
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def move_with_angle(
 * 		sfSprite sprite,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_21move_with_angle(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_21move_with_angle = {"move_with_angle", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_21move_with_angle, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_21move_with_angle(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  float __pyx_v_degrees;
  float __pyx_v_speed;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_with_angle (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_degrees,&__pyx_mstate_global->__pyx_n_u_speed_2,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1784, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1784, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1784, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1784, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "move_with_angle", 0) < 0) __PYX_ERR(0, 1784, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 3; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("move_with_angle", 1, 3, 3, i); __PYX_ERR(0, 1784, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1784, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1784, __pyx_L3_error)
      values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1784, __pyx_L3_error)
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1787, __pyx_L3_error)
    __pyx_v_speed = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_speed == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1788, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move_with_angle", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1784, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.move_with_angle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 1786, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_20move_with_angle(__pyx_v_sprite, __pyx_v_degrees, __pyx_v_speed);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_20move_with_angle(struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, float __pyx_v_degrees, float __pyx_v_speed) {
  float __pyx_v_pi;
  float __pyx_v_radians;
  float __pyx_v_dx;
  float __pyx_v_dy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_with_angle", 0);

  /* "pysfml261.pyx":1790
 * 		float speed
 * 		) -> None:
 * 		cdef float pi = <float>M_PI             # <<<<<<<<<<<<<<
 * 		cdef float radians = degrees * pi / 180
 * 		cdef float dx = speed * cos(radians)
*/
  __pyx_v_pi = ((float)M_PI);

  /* "pysfml261.pyx":1791
 * 		) -> None:
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = degrees * pi / 180             # <<<<<<<<<<<<<<
 * 		cdef float dx = speed * cos(radians)
 * 		cdef float dy = speed * sin(radians)
*/
  __pyx_v_radians = ((__pyx_v_degrees * __pyx_v_pi) / 180.0);

  /* "pysfml261.pyx":1792
 * 		cdef float pi = <float>M_PI
 * 		cdef float radians = degrees * pi / 180
 * 		cdef float dx = speed * cos(radians)             # <<<<<<<<<<<<<<
 * 		cdef float dy = speed * sin(radians)
 * 		sprite.sprite.move(dx, dy)
*/
  __pyx_v_dx = (__pyx_v_speed * cos(__pyx_v_radians));

  /* "pysfml261.pyx":1793
 * 		cdef float radians = degrees * pi / 180
 * 		cdef float dx = speed * cos(radians)
 * 		cdef float dy = speed * sin(radians)             # <<<<<<<<<<<<<<
 * 		sprite.sprite.move(dx, dy)
 * 
*/
  __pyx_v_dy = (__pyx_v_speed * sin(__pyx_v_radians));

  /* "pysfml261.pyx":1794
 * 		cdef float dx = speed * cos(radians)
 * 		cdef float dy = speed * sin(radians)
 * 		sprite.sprite.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_sprite->sprite->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1784
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def move_with_angle(
 * 		sfSprite sprite,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_23__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_23__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_23__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_23__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_22__reduce_cython__(((struct __pyx_obj_9pysfml261_TransformSfSprite *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_22__reduce_cython__(struct __pyx_obj_9pysfml261_TransformSfSprite *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
*/
  __Pyx_INCREF(__pyx_mstate_global->__pyx_empty_tuple);
  __pyx_v_state = __pyx_mstate_global->__pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
*/
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
*/
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
*/
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict) != (0)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
*/
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
*/
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, None), state
*/
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, None), state
 *     else:
*/
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, state)
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_TransformSfSprite); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self)))) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_mstate_global->__pyx_int_238750788) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, None), state
 *     else:
*/
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_TransformSfSprite__set_state(self, __pyx_state)
*/
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_TransformSfSprite); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self)))) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_mstate_global->__pyx_int_238750788) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_TransformSfSprite__set_state(self, __pyx_state)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_25__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_17TransformSfSprite_25__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_25__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_17TransformSfSprite_25__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 16, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 16, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 16, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 16, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 16, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_17TransformSfSprite_24__setstate_cython__(((struct __pyx_obj_9pysfml261_TransformSfSprite *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_17TransformSfSprite_24__setstate_cython__(struct __pyx_obj_9pysfml261_TransformSfSprite *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_TransformSfSprite__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
*/
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9pysfml261___pyx_unpickle_TransformSfSprite__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_TransformSfSprite__set_state(self, __pyx_state)
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.TransformSfSprite.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1801
 * 	cdef RectangleShape* shape
 * 
 * 	def __cinit__(             # <<<<<<<<<<<<<<
 * 		self,
 * 		sfColor color,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_16sfRectangleShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_16sfRectangleShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color = 0;
  float __pyx_v_width;
  float __pyx_v_height;
  float __pyx_v_left;
  float __pyx_v_top;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_color,&__pyx_mstate_global->__pyx_n_u_width,&__pyx_mstate_global->__pyx_n_u_height,&__pyx_mstate_global->__pyx_n_u_left,&__pyx_mstate_global->__pyx_n_u_top,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1801, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_VARARGS(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 1801, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 5, i); __PYX_ERR(0, 1801, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_VARARGS(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1801, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1801, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_color = ((struct __pyx_obj_9pysfml261_sfColor *)values[0]);
    if (values[1]) {
      __pyx_v_width = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1804, __pyx_L3_error)
    } else {
      __pyx_v_width = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_height = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1805, __pyx_L3_error)
    } else {
      __pyx_v_height = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_left = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1806, __pyx_L3_error)
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[4]) {
      __pyx_v_top = __Pyx_PyFloat_AsFloat(values[4]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1807, __pyx_L3_error)
    } else {
      __pyx_v_top = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 1801, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor, 1, "color", 0))) __PYX_ERR(0, 1803, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape___cinit__(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_color, __pyx_v_width, __pyx_v_height, __pyx_v_left, __pyx_v_top);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_16sfRectangleShape___cinit__(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color, float __pyx_v_width, float __pyx_v_height, float __pyx_v_left, float __pyx_v_top) {
  sf::Vector2f __pyx_v_widthHeight;
  sf::Vector2f const *__pyx_v_size;
  sf::Color const *__pyx_v_clr;
  int __pyx_r;
  sf::RectangleShape *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":1809
 * 		float top = 0
 * 		):
 * 		self.shape = new RectangleShape()             # <<<<<<<<<<<<<<
 * 		self.shape.setPosition(left, top)
 * 		cdef Vector2f widthHeight
*/
  try {
    __pyx_t_1 = new sf::RectangleShape();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1809, __pyx_L1_error)
  }
  __pyx_v_self->shape = __pyx_t_1;

  /* "pysfml261.pyx":1810
 * 		):
 * 		self.shape = new RectangleShape()
 * 		self.shape.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 		cdef Vector2f widthHeight
 * 		widthHeight.x = width
*/
  __pyx_v_self->shape->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1812
 * 		self.shape.setPosition(left, top)
 * 		cdef Vector2f widthHeight
 * 		widthHeight.x = width             # <<<<<<<<<<<<<<
 * 		widthHeight.y = height
 * 		cdef const Vector2f* size = &widthHeight
*/
  __pyx_v_widthHeight.x = __pyx_v_width;

  /* "pysfml261.pyx":1813
 * 		cdef Vector2f widthHeight
 * 		widthHeight.x = width
 * 		widthHeight.y = height             # <<<<<<<<<<<<<<
 * 		cdef const Vector2f* size = &widthHeight
 * 		self.shape.setSize(size[0])
*/
  __pyx_v_widthHeight.y = __pyx_v_height;

  /* "pysfml261.pyx":1814
 * 		widthHeight.x = width
 * 		widthHeight.y = height
 * 		cdef const Vector2f* size = &widthHeight             # <<<<<<<<<<<<<<
 * 		self.shape.setSize(size[0])
 * 		cdef const Color* clr = &color.color[0]
*/
  __pyx_v_size = (&__pyx_v_widthHeight);

  /* "pysfml261.pyx":1815
 * 		widthHeight.y = height
 * 		cdef const Vector2f* size = &widthHeight
 * 		self.shape.setSize(size[0])             # <<<<<<<<<<<<<<
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])
*/
  __pyx_v_self->shape->setSize(((sf::Vector2f const &)(__pyx_v_size[0])));

  /* "pysfml261.pyx":1816
 * 		cdef const Vector2f* size = &widthHeight
 * 		self.shape.setSize(size[0])
 * 		cdef const Color* clr = &color.color[0]             # <<<<<<<<<<<<<<
 * 		self.shape.setFillColor(clr[0])
 * 
*/
  __pyx_v_clr = (&(__pyx_v_color->color[0]));

  /* "pysfml261.pyx":1817
 * 		self.shape.setSize(size[0])
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->shape->setFillColor((__pyx_v_clr[0]));

  /* "pysfml261.pyx":1801
 * 	cdef RectangleShape* shape
 * 
 * 	def __cinit__(             # <<<<<<<<<<<<<<
 * 		self,
 * 		sfColor color,
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pysfml261.pyx":1819
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.shape
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_16sfRectangleShape_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_16sfRectangleShape_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_16sfRectangleShape_2__dealloc__(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_16sfRectangleShape_2__dealloc__(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {

  /* "pysfml261.pyx":1820
 * 
 * 	def __dealloc__(self):
 * 		del self.shape             # <<<<<<<<<<<<<<
 * 
 * 	def move(self,
*/
  delete __pyx_v_self->shape;

  /* "pysfml261.pyx":1819
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.shape
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":1822
 * 		del self.shape
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_5move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_5move = {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_5move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_5move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_dx;
  float __pyx_v_dy;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_dx,&__pyx_mstate_global->__pyx_n_u_dy,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1822, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1822, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1822, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "move", 0) < 0) __PYX_ERR(0, 1822, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1822, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1822, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_dx = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_dx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L3_error)
    } else {
      __pyx_v_dx = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_dy = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_dy == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1824, __pyx_L3_error)
    } else {
      __pyx_v_dy = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1822, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_4move(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_dx, __pyx_v_dy);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_4move(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move", 0);

  /* "pysfml261.pyx":1825
 * 		float dx = 0,
 * 		float dy = 0) -> None:
 * 		self.shape.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	def rotate(self, float degrees) -> None:
*/
  __pyx_v_self->shape->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1822
 * 		del self.shape
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1827
 * 		self.shape.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.rotate(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_7rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_7rotate = {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_7rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_7rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1827, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1827, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "rotate", 0) < 0) __PYX_ERR(0, 1827, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("rotate", 1, 1, 1, i); __PYX_ERR(0, 1827, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1827, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1827, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1827, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_6rotate(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_6rotate(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate", 0);

  /* "pysfml261.pyx":1828
 * 
 * 	def rotate(self, float degrees) -> None:
 * 		self.shape.rotate(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def contains(self,
*/
  __pyx_v_self->shape->rotate(__pyx_v_degrees);

  /* "pysfml261.pyx":1827
 * 		self.shape.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.rotate(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1830
 * 		self.shape.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_9contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_9contains = {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_9contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_9contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("contains (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1830, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1830, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1830, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1830, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "contains", 0) < 0) __PYX_ERR(0, 1830, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1830, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1830, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1830, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1831, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1832, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1833, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1833
 * 		float x = 0,
 * 		float y = 0,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("contains", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1830, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_8contains(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_local);

  /* "pysfml261.pyx":1830
 * 		self.shape.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_8contains(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("contains", 0);

  /* "pysfml261.pyx":1835
 * 		bint local = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.shape.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1836
 * 		cdef FloatRect rect
 * 		if local:
 * 			rect = self.shape.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect = self.shape.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->shape->getLocalBounds());

    /* "pysfml261.pyx":1835
 * 		bint local = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.shape.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1838
 * 			rect = self.shape.getLocalBounds()
 * 		else:
 * 			rect = self.shape.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return rect.contains(x, y)
 * 
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->shape->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1839
 * 		else:
 * 			rect = self.shape.getGlobalBounds()
 * 		return rect.contains(x, y)             # <<<<<<<<<<<<<<
 * 
 * 	def intersects(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_rect.contains(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1830
 * 		self.shape.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1841
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_11intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_11intersects = {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_11intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_11intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect = 0;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("intersects (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_rect,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1841, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1841, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1841, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "intersects", 0) < 0) __PYX_ERR(0, 1841, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, i); __PYX_ERR(0, 1841, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1841, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1841, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_rect = ((struct __pyx_obj_9pysfml261_sfFloatRect *)values[0]);
    if (values[1]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1843, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1843
 * 	def intersects(self,
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect r
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1841, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, 1, "rect", 0))) __PYX_ERR(0, 1842, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_10intersects(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_rect, __pyx_v_local);

  /* "pysfml261.pyx":1841
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_10intersects(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect, int __pyx_v_local) {
  sf::FloatRect __pyx_v_r;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("intersects", 0);

  /* "pysfml261.pyx":1845
 * 		bint local = True) -> bool:
 * 		cdef FloatRect r
 * 		if local:             # <<<<<<<<<<<<<<
 * 			r = self.shape.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1846
 * 		cdef FloatRect r
 * 		if local:
 * 			r = self.shape.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			r = self.shape.getGlobalBounds()
*/
    __pyx_v_r = ((sf::FloatRect)__pyx_v_self->shape->getLocalBounds());

    /* "pysfml261.pyx":1845
 * 		bint local = True) -> bool:
 * 		cdef FloatRect r
 * 		if local:             # <<<<<<<<<<<<<<
 * 			r = self.shape.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1848
 * 			r = self.shape.getLocalBounds()
 * 		else:
 * 			r = self.shape.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return r.intersects(rect.rect[0])
 * 
*/
  /*else*/ {
    __pyx_v_r = ((sf::FloatRect)__pyx_v_self->shape->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1849
 * 		else:
 * 			r = self.shape.getGlobalBounds()
 * 		return r.intersects(rect.rect[0])             # <<<<<<<<<<<<<<
 * 
 * 	def set_alpha(self, int a) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_r.intersects((__pyx_v_rect->rect[0]))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1841
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1851
 * 		return r.intersects(rect.rect[0])
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_13set_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_13set_alpha = {"set_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_13set_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_13set_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_a;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_a,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1851, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1851, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_alpha", 0) < 0) __PYX_ERR(0, 1851, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_alpha", 1, 1, 1, i); __PYX_ERR(0, 1851, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1851, __pyx_L3_error)
    }
    __pyx_v_a = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_a == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1851, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_alpha", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1851, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.set_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_12set_alpha(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_a);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_12set_alpha(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, int __pyx_v_a) {
  sf::Color __pyx_v_clr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha", 0);

  /* "pysfml261.pyx":1852
 * 
 * 	def set_alpha(self, int a) -> None:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()             # <<<<<<<<<<<<<<
 * 		clr.a = a
 * 		self.shape.setFillColor(clr)
*/
  __pyx_v_clr = ((sf::Color const )__pyx_v_self->shape->getFillColor());

  /* "pysfml261.pyx":1853
 * 	def set_alpha(self, int a) -> None:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a             # <<<<<<<<<<<<<<
 * 		self.shape.setFillColor(clr)
 * 
*/
  __pyx_v_clr.a = __pyx_v_a;

  /* "pysfml261.pyx":1854
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a
 * 		self.shape.setFillColor(clr)             # <<<<<<<<<<<<<<
 * 
 * 	def get_alpha(self) -> int:
*/
  __pyx_v_self->shape->setFillColor(__pyx_v_clr);

  /* "pysfml261.pyx":1851
 * 		return r.intersects(rect.rect[0])
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1856
 * 		self.shape.setFillColor(clr)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return clr.a
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_15get_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_15get_alpha = {"get_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_15get_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_15get_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_alpha (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_alpha", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_alpha", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_14get_alpha(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_14get_alpha(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  sf::Color __pyx_v_clr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_alpha", 0);

  /* "pysfml261.pyx":1857
 * 
 * 	def get_alpha(self) -> int:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()             # <<<<<<<<<<<<<<
 * 		return clr.a
 * 
*/
  __pyx_v_clr = ((sf::Color const )__pyx_v_self->shape->getFillColor());

  /* "pysfml261.pyx":1858
 * 	def get_alpha(self) -> int:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return clr.a             # <<<<<<<<<<<<<<
 * 
 * 	def set_position(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.a); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 1858, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1856
 * 		self.shape.setFillColor(clr)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return clr.a
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.get_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1860
 * 		return clr.a
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_17set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_17set_position = {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_17set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_17set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_left;
  float __pyx_v_top;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_left,&__pyx_mstate_global->__pyx_n_u_top,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1860, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1860, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1860, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_position", 0) < 0) __PYX_ERR(0, 1860, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1860, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1860, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_left = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1861, __pyx_L3_error)
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_top = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1862, __pyx_L3_error)
    } else {
      __pyx_v_top = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_position", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1860, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.set_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_16set_position(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_left, __pyx_v_top);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_16set_position(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_left, float __pyx_v_top) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position", 0);

  /* "pysfml261.pyx":1863
 * 		float left = 0,
 * 		float top = 0) -> None:
 * 		self.shape.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 
 * 	def get_position(self) -> tuple[float, float]:
*/
  __pyx_v_self->shape->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1860
 * 		return clr.a
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1865
 * 		self.shape.setPosition(left, top)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return (pos.x, pos.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_19get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_19get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_19get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_19get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_18get_position(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_18get_position(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":1866
 * 
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y)
 * 
*/
  __pyx_v_pos = ((sf::Vector2f const )__pyx_v_self->shape->getPosition());

  /* "pysfml261.pyx":1867
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return (pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_fill_color(self, sfColor color) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1867, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1867, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1865
 * 		self.shape.setPosition(left, top)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return (pos.x, pos.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1869
 * 		return (pos.x, pos.y)
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_21set_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_21set_fill_color = {"set_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_21set_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_21set_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fill_color (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_color,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1869, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1869, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_fill_color", 0) < 0) __PYX_ERR(0, 1869, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_fill_color", 1, 1, 1, i); __PYX_ERR(0, 1869, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1869, __pyx_L3_error)
    }
    __pyx_v_color = ((struct __pyx_obj_9pysfml261_sfColor *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_fill_color", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1869, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.set_fill_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor, 1, "color", 0))) __PYX_ERR(0, 1869, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_20set_fill_color(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_color);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_20set_fill_color(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color) {
  sf::Color const *__pyx_v_clr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fill_color", 0);

  /* "pysfml261.pyx":1870
 * 
 * 	def set_fill_color(self, sfColor color) -> None:
 * 		cdef const Color* clr = &color.color[0]             # <<<<<<<<<<<<<<
 * 		self.shape.setFillColor(clr[0])
 * 
*/
  __pyx_v_clr = (&(__pyx_v_color->color[0]));

  /* "pysfml261.pyx":1871
 * 	def set_fill_color(self, sfColor color) -> None:
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])             # <<<<<<<<<<<<<<
 * 
 * 	def get_fill_color(self) -> sfColor:
*/
  __pyx_v_self->shape->setFillColor((__pyx_v_clr[0]));

  /* "pysfml261.pyx":1869
 * 		return (pos.x, pos.y)
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1873
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def get_fill_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pw_9pysfml261_16sfRectangleShape_23get_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_23get_fill_color = {"get_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_23get_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pw_9pysfml261_16sfRectangleShape_23get_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfColor *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_fill_color (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_fill_color", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_fill_color", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_22get_fill_color(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfColor *__pyx_pf_9pysfml261_16sfRectangleShape_22get_fill_color(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  sf::Color __pyx_v_clr;
  struct __pyx_obj_9pysfml261_sfColor *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_fill_color", 0);

  /* "pysfml261.pyx":1874
 * 
 * 	def get_fill_color(self) -> sfColor:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()             # <<<<<<<<<<<<<<
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
 * 
*/
  __pyx_v_clr = ((sf::Color const )__pyx_v_self->shape->getFillColor());

  /* "pysfml261.pyx":1875
 * 	def get_fill_color(self) -> sfColor:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)             # <<<<<<<<<<<<<<
 * 
 * 	def set_size(self,
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor); 
  __pyx_t_4 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.r); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.g); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.b); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.a); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1875, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfColor *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1873
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def get_fill_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.get_fill_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1877
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
 * 
 * 	def set_size(self,             # <<<<<<<<<<<<<<
 * 		float width,
 * 		float height) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_25set_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_25set_size = {"set_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_25set_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_25set_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_width;
  float __pyx_v_height;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_width,&__pyx_mstate_global->__pyx_n_u_height,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1877, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1877, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1877, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_size", 0) < 0) __PYX_ERR(0, 1877, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_size", 1, 2, 2, i); __PYX_ERR(0, 1877, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1877, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1877, __pyx_L3_error)
    }
    __pyx_v_width = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1878, __pyx_L3_error)
    __pyx_v_height = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1879, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_size", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1877, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.set_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_24set_size(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_width, __pyx_v_height);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_24set_size(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_width, float __pyx_v_height) {
  sf::Vector2f __pyx_v_widthHeight;
  sf::Vector2f const *__pyx_v_size;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_size", 0);

  /* "pysfml261.pyx":1881
 * 		float height) -> None:
 * 		cdef Vector2f widthHeight
 * 		widthHeight.x = width             # <<<<<<<<<<<<<<
 * 		widthHeight.y = height
 * 		cdef const Vector2f* size = &widthHeight
*/
  __pyx_v_widthHeight.x = __pyx_v_width;

  /* "pysfml261.pyx":1882
 * 		cdef Vector2f widthHeight
 * 		widthHeight.x = width
 * 		widthHeight.y = height             # <<<<<<<<<<<<<<
 * 		cdef const Vector2f* size = &widthHeight
 * 		self.shape.setSize(size[0])
*/
  __pyx_v_widthHeight.y = __pyx_v_height;

  /* "pysfml261.pyx":1883
 * 		widthHeight.x = width
 * 		widthHeight.y = height
 * 		cdef const Vector2f* size = &widthHeight             # <<<<<<<<<<<<<<
 * 		self.shape.setSize(size[0])
 * 
*/
  __pyx_v_size = (&__pyx_v_widthHeight);

  /* "pysfml261.pyx":1884
 * 		widthHeight.y = height
 * 		cdef const Vector2f* size = &widthHeight
 * 		self.shape.setSize(size[0])             # <<<<<<<<<<<<<<
 * 
 * 	def get_size(self) -> tuple[float, float]:
*/
  __pyx_v_self->shape->setSize(((sf::Vector2f const &)(__pyx_v_size[0])));

  /* "pysfml261.pyx":1877
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
 * 
 * 	def set_size(self,             # <<<<<<<<<<<<<<
 * 		float width,
 * 		float height) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1886
 * 		self.shape.setSize(size[0])
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
 * 		return (size.x, size.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_27get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_27get_size = {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_27get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_27get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_size", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_size", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_26get_size(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_26get_size(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  sf::Vector2f __pyx_v_size;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_size", 0);

  /* "pysfml261.pyx":1887
 * 
 * 	def get_size(self) -> tuple[float, float]:
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()             # <<<<<<<<<<<<<<
 * 		return (size.x, size.y)
 * 
*/
  __pyx_v_size = ((sf::Vector2f const )__pyx_v_self->shape->getSize());

  /* "pysfml261.pyx":1888
 * 	def get_size(self) -> tuple[float, float]:
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
 * 		return (size.x, size.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_rotation(self, float degrees) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_size.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_size.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1888, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1888, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1886
 * 		self.shape.setSize(size[0])
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
 * 		return (size.x, size.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.get_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1890
 * 		return (size.x, size.y)
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRotation(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_29set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_29set_rotation = {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_29set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_29set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1890, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1890, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_rotation", 0) < 0) __PYX_ERR(0, 1890, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_rotation", 1, 1, 1, i); __PYX_ERR(0, 1890, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1890, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1890, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_rotation", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1890, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.set_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_28set_rotation(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_28set_rotation(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation", 0);

  /* "pysfml261.pyx":1891
 * 
 * 	def set_rotation(self, float degrees) -> None:
 * 		self.shape.setRotation(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def get_rotation(self) -> float:
*/
  __pyx_v_self->shape->setRotation(__pyx_v_degrees);

  /* "pysfml261.pyx":1890
 * 		return (size.x, size.y)
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRotation(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1893
 * 		self.shape.setRotation(degrees)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRotation()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_31get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_31get_rotation = {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_31get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_31get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_rotation", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_rotation", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_30get_rotation(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_30get_rotation(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_rotation", 0);

  /* "pysfml261.pyx":1894
 * 
 * 	def get_rotation(self) -> float:
 * 		return self.shape.getRotation()             # <<<<<<<<<<<<<<
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->shape->getRotation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1894, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1893
 * 		self.shape.setRotation(degrees)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRotation()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.get_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1896
 * 		return self.shape.getRotation()
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_16sfRectangleShape_33get_global_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_33get_global_bounds = {"get_global_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_33get_global_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_16sfRectangleShape_33get_global_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_global_bounds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_global_bounds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_global_bounds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_32get_global_bounds(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_16sfRectangleShape_32get_global_bounds(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  sf::FloatRect __pyx_v_bounds;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_global_bounds", 0);

  /* "pysfml261.pyx":1897
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
*/
  __pyx_v_bounds = ((sf::FloatRect)__pyx_v_self->shape->getGlobalBounds());

  /* "pysfml261.pyx":1898
 * 	def get_global_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)             # <<<<<<<<<<<<<<
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_bounds.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_bounds.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_bounds.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_bounds.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1896
 * 		return self.shape.getRotation()
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.get_global_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1900
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_16sfRectangleShape_35get_local_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_35get_local_bounds = {"get_local_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_35get_local_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_16sfRectangleShape_35get_local_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_local_bounds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_local_bounds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_local_bounds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_34get_local_bounds(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_16sfRectangleShape_34get_local_bounds(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  sf::FloatRect __pyx_v_bounds;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_local_bounds", 0);

  /* "pysfml261.pyx":1901
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
*/
  __pyx_v_bounds = ((sf::FloatRect)__pyx_v_self->shape->getLocalBounds());

  /* "pysfml261.pyx":1902
 * 	def get_local_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)             # <<<<<<<<<<<<<<
 * 
 * 	def clone(self) -> sfRectangleShape:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_bounds.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_bounds.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_bounds.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_bounds.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1902, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1900
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.get_local_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1904
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def clone(self) -> sfRectangleShape:             # <<<<<<<<<<<<<<
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_pw_9pysfml261_16sfRectangleShape_37clone(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_37clone = {"clone", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_37clone, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_pw_9pysfml261_16sfRectangleShape_37clone(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("clone", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("clone", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_36clone(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_pf_9pysfml261_16sfRectangleShape_36clone(struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_clr = 0;
  sf::Vector2f __pyx_v_size;
  sf::Vector2f __pyx_v_pos;
  struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pysfml261.pyx":1905
 * 
 * 	def clone(self) -> sfRectangleShape:
 * 		cdef sfColor clr = self.get_fill_color()             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
*/
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_get_fill_color, __pyx_callargs+__pyx_t_3, (1-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1905, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor))))) __PYX_ERR(0, 1905, __pyx_L1_error)
  __pyx_v_clr = ((struct __pyx_obj_9pysfml261_sfColor *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pysfml261.pyx":1906
 * 	def clone(self) -> sfRectangleShape:
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return sfRectangleShape(clr, size.x, size.y, pos.x, pos.y)
*/
  __pyx_v_size = ((sf::Vector2f const )__pyx_v_self->shape->getSize());

  /* "pysfml261.pyx":1907
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()             # <<<<<<<<<<<<<<
 * 		return sfRectangleShape(clr, size.x, size.y, pos.x, pos.y)
 * 
*/
  __pyx_v_pos = ((sf::Vector2f const )__pyx_v_self->shape->getPosition());

  /* "pysfml261.pyx":1908
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return sfRectangleShape(clr, size.x, size.y, pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape);
  __pyx_t_4 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape); 
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_size.x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_size.y); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = 1;
  {
    PyObject *__pyx_callargs[6] = {__pyx_t_2, ((PyObject *)__pyx_v_clr), __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_3, (6-__pyx_t_3) | (__pyx_t_3*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1908, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1904
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def clone(self) -> sfRectangleShape:             # <<<<<<<<<<<<<<
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_clr);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_39__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_39__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_39__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_39__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_38__reduce_cython__(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_38__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_41__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_16sfRectangleShape_41__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_41__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_16sfRectangleShape_41__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_16sfRectangleShape_40__setstate_cython__(((struct __pyx_obj_9pysfml261_sfRectangleShape *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_16sfRectangleShape_40__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfRectangleShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1915
 * 	cdef CircleShape* shape
 * 
 * 	def __cinit__(             # <<<<<<<<<<<<<<
 * 		self,
 * 		sfColor color,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_13sfCircleShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_13sfCircleShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color = 0;
  float __pyx_v_radius;
  float __pyx_v_left;
  float __pyx_v_top;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_color,&__pyx_mstate_global->__pyx_n_u_radius,&__pyx_mstate_global->__pyx_n_u_left,&__pyx_mstate_global->__pyx_n_u_top,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1915, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 1915, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 4, i); __PYX_ERR(0, 1915, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 1915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1915, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1915, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_color = ((struct __pyx_obj_9pysfml261_sfColor *)values[0]);
    if (values[1]) {
      __pyx_v_radius = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_radius == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1918, __pyx_L3_error)
    } else {
      __pyx_v_radius = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_left = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1919, __pyx_L3_error)
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_top = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1920, __pyx_L3_error)
    } else {
      __pyx_v_top = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 4, __pyx_nargs); __PYX_ERR(0, 1915, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor, 1, "color", 0))) __PYX_ERR(0, 1917, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape___cinit__(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_color, __pyx_v_radius, __pyx_v_left, __pyx_v_top);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_13sfCircleShape___cinit__(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color, float __pyx_v_radius, float __pyx_v_left, float __pyx_v_top) {
  sf::Color const *__pyx_v_clr;
  int __pyx_r;
  sf::CircleShape *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pysfml261.pyx":1922
 * 		float top = 0
 * 		):
 * 		self.shape = new CircleShape()             # <<<<<<<<<<<<<<
 * 		self.shape.setRadius(radius)
 * 		self.shape.setPosition(left, top)
*/
  try {
    __pyx_t_1 = new sf::CircleShape();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1922, __pyx_L1_error)
  }
  __pyx_v_self->shape = __pyx_t_1;

  /* "pysfml261.pyx":1923
 * 		):
 * 		self.shape = new CircleShape()
 * 		self.shape.setRadius(radius)             # <<<<<<<<<<<<<<
 * 		self.shape.setPosition(left, top)
 * 		cdef const Color* clr = &color.color[0]
*/
  __pyx_v_self->shape->setRadius(__pyx_v_radius);

  /* "pysfml261.pyx":1924
 * 		self.shape = new CircleShape()
 * 		self.shape.setRadius(radius)
 * 		self.shape.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])
*/
  __pyx_v_self->shape->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1925
 * 		self.shape.setRadius(radius)
 * 		self.shape.setPosition(left, top)
 * 		cdef const Color* clr = &color.color[0]             # <<<<<<<<<<<<<<
 * 		self.shape.setFillColor(clr[0])
 * 
*/
  __pyx_v_clr = (&(__pyx_v_color->color[0]));

  /* "pysfml261.pyx":1926
 * 		self.shape.setPosition(left, top)
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->shape->setFillColor((__pyx_v_clr[0]));

  /* "pysfml261.pyx":1915
 * 	cdef CircleShape* shape
 * 
 * 	def __cinit__(             # <<<<<<<<<<<<<<
 * 		self,
 * 		sfColor color,
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfCircleShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pysfml261.pyx":1928
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.shape
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_13sfCircleShape_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_13sfCircleShape_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_13sfCircleShape_2__dealloc__(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_13sfCircleShape_2__dealloc__(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {

  /* "pysfml261.pyx":1929
 * 
 * 	def __dealloc__(self):
 * 		del self.shape             # <<<<<<<<<<<<<<
 * 
 * 	def move(self,
*/
  delete __pyx_v_self->shape;

  /* "pysfml261.pyx":1928
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.shape
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":1931
 * 		del self.shape
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_5move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_5move = {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_5move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_5move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_dx;
  float __pyx_v_dy;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_dx,&__pyx_mstate_global->__pyx_n_u_dy,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1931, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1931, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1931, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "move", 0) < 0) __PYX_ERR(0, 1931, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1931, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1931, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_dx = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_dx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1932, __pyx_L3_error)
    } else {
      __pyx_v_dx = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_dy = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_dy == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1933, __pyx_L3_error)
    } else {
      __pyx_v_dy = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1931, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_4move(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_dx, __pyx_v_dy);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_4move(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move", 0);

  /* "pysfml261.pyx":1934
 * 		float dx = 0,
 * 		float dy = 0) -> None:
 * 		self.shape.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	def rotate(self, float degrees) -> None:
*/
  __pyx_v_self->shape->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":1931
 * 		del self.shape
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1936
 * 		self.shape.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.rotate(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_7rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_7rotate = {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_7rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_7rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1936, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1936, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "rotate", 0) < 0) __PYX_ERR(0, 1936, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("rotate", 1, 1, 1, i); __PYX_ERR(0, 1936, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1936, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1936, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1936, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_6rotate(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_6rotate(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate", 0);

  /* "pysfml261.pyx":1937
 * 
 * 	def rotate(self, float degrees) -> None:
 * 		self.shape.rotate(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def contains(self,
*/
  __pyx_v_self->shape->rotate(__pyx_v_degrees);

  /* "pysfml261.pyx":1936
 * 		self.shape.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.rotate(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1939
 * 		self.shape.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_9contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_9contains = {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_9contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_9contains(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("contains (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1939, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1939, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1939, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1939, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "contains", 0) < 0) __PYX_ERR(0, 1939, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 1939, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1939, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1939, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1940, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1941, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1942, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1942
 * 		float x = 0,
 * 		float y = 0,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("contains", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1939, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_8contains(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_local);

  /* "pysfml261.pyx":1939
 * 		self.shape.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_8contains(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, int __pyx_v_local) {
  sf::FloatRect __pyx_v_rect;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("contains", 0);

  /* "pysfml261.pyx":1944
 * 		bint local = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.shape.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1945
 * 		cdef FloatRect rect
 * 		if local:
 * 			rect = self.shape.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			rect = self.shape.getGlobalBounds()
*/
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->shape->getLocalBounds());

    /* "pysfml261.pyx":1944
 * 		bint local = True) -> bool:
 * 		cdef FloatRect rect
 * 		if local:             # <<<<<<<<<<<<<<
 * 			rect = self.shape.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1947
 * 			rect = self.shape.getLocalBounds()
 * 		else:
 * 			rect = self.shape.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return rect.contains(x, y)
 * 
*/
  /*else*/ {
    __pyx_v_rect = ((sf::FloatRect)__pyx_v_self->shape->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1948
 * 		else:
 * 			rect = self.shape.getGlobalBounds()
 * 		return rect.contains(x, y)             # <<<<<<<<<<<<<<
 * 
 * 	def intersects(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_rect.contains(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1948, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1939
 * 		self.shape.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.contains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1950
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_11intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_11intersects = {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_11intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_11intersects(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect = 0;
  int __pyx_v_local;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("intersects (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_rect,&__pyx_mstate_global->__pyx_n_u_local,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1950, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1950, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1950, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "intersects", 0) < 0) __PYX_ERR(0, 1950, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, i); __PYX_ERR(0, 1950, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1950, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1950, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_rect = ((struct __pyx_obj_9pysfml261_sfFloatRect *)values[0]);
    if (values[1]) {
      __pyx_v_local = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_local == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1952, __pyx_L3_error)
    } else {

      /* "pysfml261.pyx":1952
 * 	def intersects(self,
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect r
 * 		if local:
*/
      __pyx_v_local = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1950, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, 1, "rect", 0))) __PYX_ERR(0, 1951, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_10intersects(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_rect, __pyx_v_local);

  /* "pysfml261.pyx":1950
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_10intersects(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect, int __pyx_v_local) {
  sf::FloatRect __pyx_v_r;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("intersects", 0);

  /* "pysfml261.pyx":1954
 * 		bint local = True) -> bool:
 * 		cdef FloatRect r
 * 		if local:             # <<<<<<<<<<<<<<
 * 			r = self.shape.getLocalBounds()
 * 		else:
*/
  if (__pyx_v_local) {

    /* "pysfml261.pyx":1955
 * 		cdef FloatRect r
 * 		if local:
 * 			r = self.shape.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		else:
 * 			r = self.shape.getGlobalBounds()
*/
    __pyx_v_r = ((sf::FloatRect)__pyx_v_self->shape->getLocalBounds());

    /* "pysfml261.pyx":1954
 * 		bint local = True) -> bool:
 * 		cdef FloatRect r
 * 		if local:             # <<<<<<<<<<<<<<
 * 			r = self.shape.getLocalBounds()
 * 		else:
*/
    goto __pyx_L3;
  }

  /* "pysfml261.pyx":1957
 * 			r = self.shape.getLocalBounds()
 * 		else:
 * 			r = self.shape.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return r.intersects(rect.rect[0])
 * 
*/
  /*else*/ {
    __pyx_v_r = ((sf::FloatRect)__pyx_v_self->shape->getGlobalBounds());
  }
  __pyx_L3:;

  /* "pysfml261.pyx":1958
 * 		else:
 * 			r = self.shape.getGlobalBounds()
 * 		return r.intersects(rect.rect[0])             # <<<<<<<<<<<<<<
 * 
 * 	def set_alpha(self, int a) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_r.intersects((__pyx_v_rect->rect[0]))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1950
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.intersects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1960
 * 		return r.intersects(rect.rect[0])
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_13set_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_13set_alpha = {"set_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_13set_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_13set_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_a;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_a,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1960, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1960, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_alpha", 0) < 0) __PYX_ERR(0, 1960, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_alpha", 1, 1, 1, i); __PYX_ERR(0, 1960, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1960, __pyx_L3_error)
    }
    __pyx_v_a = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_a == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1960, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_alpha", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1960, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.set_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_12set_alpha(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_a);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_12set_alpha(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, int __pyx_v_a) {
  sf::Color __pyx_v_clr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha", 0);

  /* "pysfml261.pyx":1961
 * 
 * 	def set_alpha(self, int a) -> None:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()             # <<<<<<<<<<<<<<
 * 		clr.a = a
 * 		self.shape.setFillColor(clr)
*/
  __pyx_v_clr = ((sf::Color const )__pyx_v_self->shape->getFillColor());

  /* "pysfml261.pyx":1962
 * 	def set_alpha(self, int a) -> None:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a             # <<<<<<<<<<<<<<
 * 		self.shape.setFillColor(clr)
 * 
*/
  __pyx_v_clr.a = __pyx_v_a;

  /* "pysfml261.pyx":1963
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a
 * 		self.shape.setFillColor(clr)             # <<<<<<<<<<<<<<
 * 
 * 	def get_alpha(self) -> int:
*/
  __pyx_v_self->shape->setFillColor(__pyx_v_clr);

  /* "pysfml261.pyx":1960
 * 		return r.intersects(rect.rect[0])
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1965
 * 		self.shape.setFillColor(clr)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return clr.a
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_15get_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_15get_alpha = {"get_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_15get_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_15get_alpha(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_alpha (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_alpha", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_alpha", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_14get_alpha(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_14get_alpha(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  sf::Color __pyx_v_clr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_alpha", 0);

  /* "pysfml261.pyx":1966
 * 
 * 	def get_alpha(self) -> int:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()             # <<<<<<<<<<<<<<
 * 		return clr.a
 * 
*/
  __pyx_v_clr = ((sf::Color const )__pyx_v_self->shape->getFillColor());

  /* "pysfml261.pyx":1967
 * 	def get_alpha(self) -> int:
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return clr.a             # <<<<<<<<<<<<<<
 * 
 * 	def set_rotation(self, float degrees) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_clr.a); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1967, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyLong_CheckExact(__pyx_t_1)) || __Pyx_RaiseUnexpectedTypeError("int", __pyx_t_1))) __PYX_ERR(0, 1967, __pyx_L1_error)
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1965
 * 		self.shape.setFillColor(clr)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return clr.a
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.get_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1969
 * 		return clr.a
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRotation(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_17set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_17set_rotation = {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_17set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_17set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1969, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1969, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_rotation", 0) < 0) __PYX_ERR(0, 1969, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_rotation", 1, 1, 1, i); __PYX_ERR(0, 1969, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1969, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1969, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_rotation", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1969, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.set_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_16set_rotation(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_16set_rotation(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation", 0);

  /* "pysfml261.pyx":1970
 * 
 * 	def set_rotation(self, float degrees) -> None:
 * 		self.shape.setRotation(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def get_rotation(self) -> float:
*/
  __pyx_v_self->shape->setRotation(__pyx_v_degrees);

  /* "pysfml261.pyx":1969
 * 		return clr.a
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRotation(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1972
 * 		self.shape.setRotation(degrees)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRotation()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_19get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_19get_rotation = {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_19get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_19get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_rotation", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_rotation", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_18get_rotation(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_18get_rotation(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_rotation", 0);

  /* "pysfml261.pyx":1973
 * 
 * 	def get_rotation(self) -> float:
 * 		return self.shape.getRotation()             # <<<<<<<<<<<<<<
 * 
 * 	def set_fill_color(self, sfColor color) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->shape->getRotation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1972
 * 		self.shape.setRotation(degrees)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRotation()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.get_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1975
 * 		return self.shape.getRotation()
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_21set_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_21set_fill_color = {"set_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_21set_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_21set_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fill_color (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_color,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1975, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1975, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_fill_color", 0) < 0) __PYX_ERR(0, 1975, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_fill_color", 1, 1, 1, i); __PYX_ERR(0, 1975, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1975, __pyx_L3_error)
    }
    __pyx_v_color = ((struct __pyx_obj_9pysfml261_sfColor *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_fill_color", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1975, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.set_fill_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor, 1, "color", 0))) __PYX_ERR(0, 1975, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_20set_fill_color(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_color);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_20set_fill_color(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color) {
  sf::Color const *__pyx_v_clr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fill_color", 0);

  /* "pysfml261.pyx":1976
 * 
 * 	def set_fill_color(self, sfColor color) -> None:
 * 		cdef const Color* clr = &color.color[0]             # <<<<<<<<<<<<<<
 * 		self.shape.setFillColor(clr[0])
 * 
*/
  __pyx_v_clr = (&(__pyx_v_color->color[0]));

  /* "pysfml261.pyx":1977
 * 	def set_fill_color(self, sfColor color) -> None:
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])             # <<<<<<<<<<<<<<
 * 
 * 	def get_fill_color(self) -> sfColor:
*/
  __pyx_v_self->shape->setFillColor((__pyx_v_clr[0]));

  /* "pysfml261.pyx":1975
 * 		return self.shape.getRotation()
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1979
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def get_fill_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.shape.getFillColor()
 * 		return sfColor(color.r, color.g, color.b, color.a)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pw_9pysfml261_13sfCircleShape_23get_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_23get_fill_color = {"get_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_23get_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfColor *__pyx_pw_9pysfml261_13sfCircleShape_23get_fill_color(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfColor *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_fill_color (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_fill_color", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_fill_color", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_22get_fill_color(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfColor *__pyx_pf_9pysfml261_13sfCircleShape_22get_fill_color(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  sf::Color __pyx_v_color;
  struct __pyx_obj_9pysfml261_sfColor *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_fill_color", 0);

  /* "pysfml261.pyx":1980
 * 
 * 	def get_fill_color(self) -> sfColor:
 * 		cdef Color color = <const Color>self.shape.getFillColor()             # <<<<<<<<<<<<<<
 * 		return sfColor(color.r, color.g, color.b, color.a)
 * 
*/
  __pyx_v_color = ((sf::Color const )__pyx_v_self->shape->getFillColor());

  /* "pysfml261.pyx":1981
 * 	def get_fill_color(self) -> sfColor:
 * 		cdef Color color = <const Color>self.shape.getFillColor()
 * 		return sfColor(color.r, color.g, color.b, color.a)             # <<<<<<<<<<<<<<
 * 
 * 	def set_position(self,
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor); 
  __pyx_t_4 = __Pyx_PyLong_From_unsigned_int(__pyx_v_color.r); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1981, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyLong_From_unsigned_int(__pyx_v_color.g); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1981, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyLong_From_unsigned_int(__pyx_v_color.b); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1981, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyLong_From_unsigned_int(__pyx_v_color.a); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1981, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1981, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfColor *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1979
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def get_fill_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.shape.getFillColor()
 * 		return sfColor(color.r, color.g, color.b, color.a)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.get_fill_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1983
 * 		return sfColor(color.r, color.g, color.b, color.a)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_25set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_25set_position = {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_25set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_25set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_left;
  float __pyx_v_top;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_left,&__pyx_mstate_global->__pyx_n_u_top,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1983, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1983, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1983, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_position", 0) < 0) __PYX_ERR(0, 1983, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 1983, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1983, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_left = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1984, __pyx_L3_error)
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_top = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1985, __pyx_L3_error)
    } else {
      __pyx_v_top = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_position", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1983, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.set_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_24set_position(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_left, __pyx_v_top);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_24set_position(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_left, float __pyx_v_top) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position", 0);

  /* "pysfml261.pyx":1986
 * 		float left = 0,
 * 		float top = 0) -> None:
 * 		self.shape.setPosition(left, top)             # <<<<<<<<<<<<<<
 * 
 * 	def get_position(self) -> tuple[float, float]:
*/
  __pyx_v_self->shape->setPosition(__pyx_v_left, __pyx_v_top);

  /* "pysfml261.pyx":1983
 * 		return sfColor(color.r, color.g, color.b, color.a)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1988
 * 		self.shape.setPosition(left, top)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return (pos.x, pos.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_27get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_27get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_27get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_27get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_26get_position(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_26get_position(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":1989
 * 
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y)
 * 
*/
  __pyx_v_pos = ((sf::Vector2f const )__pyx_v_self->shape->getPosition());

  /* "pysfml261.pyx":1990
 * 	def get_position(self) -> tuple[float, float]:
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return (pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_radius(self, float radius) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 1990, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 1990, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1988
 * 		self.shape.setPosition(left, top)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return (pos.x, pos.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1992
 * 		return (pos.x, pos.y)
 * 
 * 	def set_radius(self, float radius) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRadius(radius)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_29set_radius(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_29set_radius = {"set_radius", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_29set_radius, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_29set_radius(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_radius;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_radius (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_radius,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 1992, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1992, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_radius", 0) < 0) __PYX_ERR(0, 1992, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_radius", 1, 1, 1, i); __PYX_ERR(0, 1992, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 1992, __pyx_L3_error)
    }
    __pyx_v_radius = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_radius == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1992, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_radius", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1992, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.set_radius", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_28set_radius(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v_radius);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_28set_radius(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, float __pyx_v_radius) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_radius", 0);

  /* "pysfml261.pyx":1993
 * 
 * 	def set_radius(self, float radius) -> None:
 * 		self.shape.setRadius(radius)             # <<<<<<<<<<<<<<
 * 
 * 	def get_radius(self) -> float:
*/
  __pyx_v_self->shape->setRadius(__pyx_v_radius);

  /* "pysfml261.pyx":1992
 * 		return (pos.x, pos.y)
 * 
 * 	def set_radius(self, float radius) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRadius(radius)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1995
 * 		self.shape.setRadius(radius)
 * 
 * 	def get_radius(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRadius()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_31get_radius(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_31get_radius = {"get_radius", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_31get_radius, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_31get_radius(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_radius (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_radius", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_radius", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_30get_radius(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_30get_radius(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_radius", 0);

  /* "pysfml261.pyx":1996
 * 
 * 	def get_radius(self) -> float:
 * 		return self.shape.getRadius()             # <<<<<<<<<<<<<<
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->shape->getRadius()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1995
 * 		self.shape.setRadius(radius)
 * 
 * 	def get_radius(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRadius()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.get_radius", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":1998
 * 		return self.shape.getRadius()
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_13sfCircleShape_33get_local_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_33get_local_bounds = {"get_local_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_33get_local_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_13sfCircleShape_33get_local_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_local_bounds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_local_bounds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_local_bounds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_32get_local_bounds(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_13sfCircleShape_32get_local_bounds(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  sf::FloatRect __pyx_v_bounds;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_local_bounds", 0);

  /* "pysfml261.pyx":1999
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
*/
  __pyx_v_bounds = ((sf::FloatRect)__pyx_v_self->shape->getLocalBounds());

  /* "pysfml261.pyx":2000
 * 	def get_local_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)             # <<<<<<<<<<<<<<
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_bounds.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_bounds.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_bounds.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_bounds.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2000, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":1998
 * 		return self.shape.getRadius()
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.get_local_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2002
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_13sfCircleShape_35get_global_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_35get_global_bounds = {"get_global_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_35get_global_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_13sfCircleShape_35get_global_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_global_bounds (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_global_bounds", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_global_bounds", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_34get_global_bounds(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_13sfCircleShape_34get_global_bounds(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  sf::FloatRect __pyx_v_bounds;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_global_bounds", 0);

  /* "pysfml261.pyx":2003
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
*/
  __pyx_v_bounds = ((sf::FloatRect)__pyx_v_self->shape->getGlobalBounds());

  /* "pysfml261.pyx":2004
 * 	def get_global_bounds(self) -> sfFloatRect:
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)             # <<<<<<<<<<<<<<
 * 
 * 	def clone(self) -> sfCircleShape:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_bounds.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2004, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_bounds.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2004, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_bounds.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2004, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_bounds.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2004, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2004, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2002
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.get_global_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2006
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def clone(self) -> sfCircleShape:             # <<<<<<<<<<<<<<
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_pw_9pysfml261_13sfCircleShape_37clone(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_37clone = {"clone", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_37clone, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_pw_9pysfml261_13sfCircleShape_37clone(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("clone", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("clone", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_36clone(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_pf_9pysfml261_13sfCircleShape_36clone(struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_clr = 0;
  sf::Vector2f __pyx_v_pos;
  float __pyx_v_radius;
  struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "pysfml261.pyx":2007
 * 
 * 	def clone(self) -> sfCircleShape:
 * 		cdef sfColor clr = self.get_fill_color()             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		cdef float radius = self.shape.getRadius()
*/
  __pyx_t_2 = ((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_get_fill_color, __pyx_callargs+__pyx_t_3, (1-__pyx_t_3) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2007, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor))))) __PYX_ERR(0, 2007, __pyx_L1_error)
  __pyx_v_clr = ((struct __pyx_obj_9pysfml261_sfColor *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pysfml261.pyx":2008
 * 	def clone(self) -> sfCircleShape:
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()             # <<<<<<<<<<<<<<
 * 		cdef float radius = self.shape.getRadius()
 * 		return sfCircleShape(clr, radius, pos.x, pos.y)
*/
  __pyx_v_pos = ((sf::Vector2f const )__pyx_v_self->shape->getPosition());

  /* "pysfml261.pyx":2009
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		cdef float radius = self.shape.getRadius()             # <<<<<<<<<<<<<<
 * 		return sfCircleShape(clr, radius, pos.x, pos.y)
 * 
*/
  __pyx_v_radius = __pyx_v_self->shape->getRadius();

  /* "pysfml261.pyx":2010
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		cdef float radius = self.shape.getRadius()
 * 		return sfCircleShape(clr, radius, pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape);
  __pyx_t_4 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape); 
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_radius); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2010, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2010, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2010, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, ((PyObject *)__pyx_v_clr), __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_3, (5-__pyx_t_3) | (__pyx_t_3*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2010, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2006
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def clone(self) -> sfCircleShape:             # <<<<<<<<<<<<<<
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfCircleShape.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_clr);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_39__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_39__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_39__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_39__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_38__reduce_cython__(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_38__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfCircleShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_41__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_13sfCircleShape_41__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_41__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_13sfCircleShape_41__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfCircleShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_13sfCircleShape_40__setstate_cython__(((struct __pyx_obj_9pysfml261_sfCircleShape *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_13sfCircleShape_40__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfCircleShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2017
 * 	cdef View* view
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_6sfView_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_6sfView_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_center_x;
  float __pyx_v_center_y;
  float __pyx_v_width;
  float __pyx_v_height;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_center_x,&__pyx_mstate_global->__pyx_n_u_center_y,&__pyx_mstate_global->__pyx_n_u_width,&__pyx_mstate_global->__pyx_n_u_height,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2017, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 2017, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2017, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2017, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2017, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 2017, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 2017, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2017, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2017, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2017, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_center_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_center_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2018, __pyx_L3_error)
    } else {
      __pyx_v_center_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_center_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_center_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2019, __pyx_L3_error)
    } else {
      __pyx_v_center_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_width = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2020, __pyx_L3_error)
    } else {
      __pyx_v_width = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_height = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2021, __pyx_L3_error)
    } else {
      __pyx_v_height = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 2017, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView___cinit__(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_center_x, __pyx_v_center_y, __pyx_v_width, __pyx_v_height);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_6sfView___cinit__(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_center_x, float __pyx_v_center_y, float __pyx_v_width, float __pyx_v_height) {
  int __pyx_r;

  /* "pysfml261.pyx":2022
 * 		float width = 0,
 * 		float height = 0):
 * 		self.view = new View()             # <<<<<<<<<<<<<<
 * 		self.view.setCenter(center_x, center_y)
 * 		self.view.setSize(width, height)
*/
  __pyx_v_self->view = new sf::View();

  /* "pysfml261.pyx":2023
 * 		float height = 0):
 * 		self.view = new View()
 * 		self.view.setCenter(center_x, center_y)             # <<<<<<<<<<<<<<
 * 		self.view.setSize(width, height)
 * 
*/
  __pyx_v_self->view->setCenter(__pyx_v_center_x, __pyx_v_center_y);

  /* "pysfml261.pyx":2024
 * 		self.view = new View()
 * 		self.view.setCenter(center_x, center_y)
 * 		self.view.setSize(width, height)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->view->setSize(__pyx_v_width, __pyx_v_height);

  /* "pysfml261.pyx":2017
 * 	cdef View* view
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0,
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":2026
 * 		self.view.setSize(width, height)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.view
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_6sfView_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_6sfView_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_6sfView_2__dealloc__(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_6sfView_2__dealloc__(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self) {

  /* "pysfml261.pyx":2027
 * 
 * 	def __dealloc__(self):
 * 		del self.view             # <<<<<<<<<<<<<<
 * 
 * 	def move(self,
*/
  delete __pyx_v_self->view;

  /* "pysfml261.pyx":2026
 * 		self.view.setSize(width, height)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.view
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":2029
 * 		del self.view
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_5move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_5move = {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_5move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_5move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_dx;
  float __pyx_v_dy;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_dx,&__pyx_mstate_global->__pyx_n_u_dy,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2029, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2029, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2029, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "move", 0) < 0) __PYX_ERR(0, 2029, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2029, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2029, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_dx = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_dx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2030, __pyx_L3_error)
    } else {
      __pyx_v_dx = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_dy = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_dy == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2031, __pyx_L3_error)
    } else {
      __pyx_v_dy = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2029, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_4move(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_dx, __pyx_v_dy);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_4move(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_dx, float __pyx_v_dy) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move", 0);

  /* "pysfml261.pyx":2032
 * 		float dx = 0,
 * 		float dy = 0) -> None:
 * 		self.view.move(dx, dy)             # <<<<<<<<<<<<<<
 * 
 * 	def rotate(self, float degrees) -> None:
*/
  __pyx_v_self->view->move(__pyx_v_dx, __pyx_v_dy);

  /* "pysfml261.pyx":2029
 * 		del self.view
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2034
 * 		self.view.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.rotate(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_7rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_7rotate = {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_7rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_7rotate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2034, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2034, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "rotate", 0) < 0) __PYX_ERR(0, 2034, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("rotate", 1, 1, 1, i); __PYX_ERR(0, 2034, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2034, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2034, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2034, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_6rotate(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_6rotate(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate", 0);

  /* "pysfml261.pyx":2035
 * 
 * 	def rotate(self, float degrees) -> None:
 * 		self.view.rotate(degrees)             # <<<<<<<<<<<<<<
 * 
 * 	def zoom(self, float factor) -> None:
*/
  __pyx_v_self->view->rotate(__pyx_v_degrees);

  /* "pysfml261.pyx":2034
 * 		self.view.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.rotate(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2037
 * 		self.view.rotate(degrees)
 * 
 * 	def zoom(self, float factor) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.zoom(factor)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_9zoom(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_9zoom = {"zoom", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_9zoom, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_9zoom(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_factor;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zoom (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_factor,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2037, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2037, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "zoom", 0) < 0) __PYX_ERR(0, 2037, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("zoom", 1, 1, 1, i); __PYX_ERR(0, 2037, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2037, __pyx_L3_error)
    }
    __pyx_v_factor = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_factor == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2037, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zoom", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2037, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.zoom", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_8zoom(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_factor);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_8zoom(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_factor) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zoom", 0);

  /* "pysfml261.pyx":2038
 * 
 * 	def zoom(self, float factor) -> None:
 * 		self.view.zoom(factor)             # <<<<<<<<<<<<<<
 * 
 * 	def rotate_around_center(self, float degrees) -> None:
*/
  __pyx_v_self->view->zoom(__pyx_v_factor);

  /* "pysfml261.pyx":2037
 * 		self.view.rotate(degrees)
 * 
 * 	def zoom(self, float factor) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.zoom(factor)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2040
 * 		self.view.zoom(factor)
 * 
 * 	def rotate_around_center(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.rotate(degrees)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_11rotate_around_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_11rotate_around_center = {"rotate_around_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_11rotate_around_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_11rotate_around_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate_around_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2040, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2040, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "rotate_around_center", 0) < 0) __PYX_ERR(0, 2040, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("rotate_around_center", 1, 1, 1, i); __PYX_ERR(0, 2040, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2040, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2040, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate_around_center", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2040, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.rotate_around_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_10rotate_around_center(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_10rotate_around_center(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_degrees) {
  sf::Vector2f __pyx_v_center;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate_around_center", 0);

  /* "pysfml261.pyx":2041
 * 
 * 	def rotate_around_center(self, float degrees) -> None:
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()             # <<<<<<<<<<<<<<
 * 		self.view.rotate(degrees)
 * 		self.view.setCenter(center.x, center.y)
*/
  __pyx_v_center = ((sf::Vector2f const )__pyx_v_self->view->getCenter());

  /* "pysfml261.pyx":2042
 * 	def rotate_around_center(self, float degrees) -> None:
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.rotate(degrees)             # <<<<<<<<<<<<<<
 * 		self.view.setCenter(center.x, center.y)
 * 
*/
  __pyx_v_self->view->rotate(__pyx_v_degrees);

  /* "pysfml261.pyx":2043
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.rotate(degrees)
 * 		self.view.setCenter(center.x, center.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_rotation_around_center(self, float degrees) -> None:
*/
  __pyx_v_self->view->setCenter(__pyx_v_center.x, __pyx_v_center.y);

  /* "pysfml261.pyx":2040
 * 		self.view.zoom(factor)
 * 
 * 	def rotate_around_center(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.rotate(degrees)
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2045
 * 		self.view.setCenter(center.x, center.y)
 * 
 * 	def set_rotation_around_center(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.setRotation(degrees)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_13set_rotation_around_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_13set_rotation_around_center = {"set_rotation_around_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_13set_rotation_around_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_13set_rotation_around_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation_around_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2045, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2045, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_rotation_around_center", 0) < 0) __PYX_ERR(0, 2045, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_rotation_around_center", 1, 1, 1, i); __PYX_ERR(0, 2045, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2045, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2045, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_rotation_around_center", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2045, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.set_rotation_around_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_12set_rotation_around_center(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_12set_rotation_around_center(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_degrees) {
  sf::Vector2f __pyx_v_center;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation_around_center", 0);

  /* "pysfml261.pyx":2046
 * 
 * 	def set_rotation_around_center(self, float degrees) -> None:
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()             # <<<<<<<<<<<<<<
 * 		self.view.setRotation(degrees)
 * 		self.view.setCenter(center.x, center.y)
*/
  __pyx_v_center = ((sf::Vector2f const )__pyx_v_self->view->getCenter());

  /* "pysfml261.pyx":2047
 * 	def set_rotation_around_center(self, float degrees) -> None:
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.setRotation(degrees)             # <<<<<<<<<<<<<<
 * 		self.view.setCenter(center.x, center.y)
 * 
*/
  __pyx_v_self->view->setRotation(__pyx_v_degrees);

  /* "pysfml261.pyx":2048
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.setRotation(degrees)
 * 		self.view.setCenter(center.x, center.y)             # <<<<<<<<<<<<<<
 * 
 * 	def get_rect(self) -> sfFloatRect:
*/
  __pyx_v_self->view->setCenter(__pyx_v_center.x, __pyx_v_center.y);

  /* "pysfml261.pyx":2045
 * 		self.view.setCenter(center.x, center.y)
 * 
 * 	def set_rotation_around_center(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.setRotation(degrees)
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2050
 * 		self.view.setCenter(center.x, center.y)
 * 
 * 	def get_rect(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = <const FloatRect>self.view.getViewport()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_6sfView_15get_rect(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_15get_rect = {"get_rect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_15get_rect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_6sfView_15get_rect(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_rect", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_rect", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfView_14get_rect(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_6sfView_14get_rect(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self) {
  sf::FloatRect __pyx_v_rect;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_rect", 0);

  /* "pysfml261.pyx":2051
 * 
 * 	def get_rect(self) -> sfFloatRect:
 * 		cdef FloatRect rect = <const FloatRect>self.view.getViewport()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
*/
  __pyx_v_rect = ((sf::FloatRect const )__pyx_v_self->view->getViewport());

  /* "pysfml261.pyx":2052
 * 	def get_rect(self) -> sfFloatRect:
 * 		cdef FloatRect rect = <const FloatRect>self.view.getViewport()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)             # <<<<<<<<<<<<<<
 * 
 * 	def get_left_top(self) -> tuple[float, float]:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_rect.left); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_rect.top); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_rect.width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_rect.height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2052, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2050
 * 		self.view.setCenter(center.x, center.y)
 * 
 * 	def get_rect(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = <const FloatRect>self.view.getViewport()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfView.get_rect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2054
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_left_top(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_17get_left_top(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_17get_left_top = {"get_left_top", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_17get_left_top, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_17get_left_top(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_left_top (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_left_top", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_left_top", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfView_16get_left_top(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_16get_left_top(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self) {
  sf::Vector2f __pyx_v_center;
  sf::Vector2f __pyx_v_size;
  float __pyx_v_k;
  float __pyx_v_left;
  float __pyx_v_top;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_left_top", 0);

  /* "pysfml261.pyx":2055
 * 
 * 	def get_left_top(self) -> tuple[float, float]:
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		cdef float k = <float>.5
*/
  __pyx_v_center = ((sf::Vector2f const )__pyx_v_self->view->getCenter());

  /* "pysfml261.pyx":2056
 * 	def get_left_top(self) -> tuple[float, float]:
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()             # <<<<<<<<<<<<<<
 * 		cdef float k = <float>.5
 * 		cdef float left = center.x - size.x * k, top = center.y - size.y * k
*/
  __pyx_v_size = ((sf::Vector2f const )__pyx_v_self->view->getSize());

  /* "pysfml261.pyx":2057
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		cdef float left = center.x - size.x * k, top = center.y - size.y * k
 * 		return (left, top)
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":2058
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		cdef float k = <float>.5
 * 		cdef float left = center.x - size.x * k, top = center.y - size.y * k             # <<<<<<<<<<<<<<
 * 		return (left, top)
 * 
*/
  __pyx_v_left = (__pyx_v_center.x - (__pyx_v_size.x * __pyx_v_k));
  __pyx_v_top = (__pyx_v_center.y - (__pyx_v_size.y * __pyx_v_k));

  /* "pysfml261.pyx":2059
 * 		cdef float k = <float>.5
 * 		cdef float left = center.x - size.x * k, top = center.y - size.y * k
 * 		return (left, top)             # <<<<<<<<<<<<<<
 * 
 * 	def set_left_top(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_left); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_top); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2059, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2059, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2054
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_left_top(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfView.get_left_top", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2061
 * 		return (left, top)
 * 
 * 	def set_left_top(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_19set_left_top(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_19set_left_top = {"set_left_top", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_19set_left_top, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_19set_left_top(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_left;
  float __pyx_v_top;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_left_top (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_left,&__pyx_mstate_global->__pyx_n_u_top,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2061, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2061, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2061, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_left_top", 0) < 0) __PYX_ERR(0, 2061, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2061, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2061, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_left = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2062, __pyx_L3_error)
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_top = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2063, __pyx_L3_error)
    } else {
      __pyx_v_top = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_left_top", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2061, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.set_left_top", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_18set_left_top(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_left, __pyx_v_top);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_18set_left_top(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_left, float __pyx_v_top) {
  sf::Vector2f __pyx_v_size;
  float __pyx_v_k;
  float __pyx_v_centerX;
  float __pyx_v_centerY;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_left_top", 0);

  /* "pysfml261.pyx":2064
 * 		float left = 0,
 * 		float top = 0) -> None:
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()             # <<<<<<<<<<<<<<
 * 		cdef float k = <float>.5
 * 		cdef float centerX = left + size.x * k, centerY = top + size.y * k
*/
  __pyx_v_size = ((sf::Vector2f const )__pyx_v_self->view->getSize());

  /* "pysfml261.pyx":2065
 * 		float top = 0) -> None:
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		cdef float k = <float>.5             # <<<<<<<<<<<<<<
 * 		cdef float centerX = left + size.x * k, centerY = top + size.y * k
 * 		self.view.setCenter(centerX, centerY)
*/
  __pyx_v_k = ((float).5);

  /* "pysfml261.pyx":2066
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		cdef float k = <float>.5
 * 		cdef float centerX = left + size.x * k, centerY = top + size.y * k             # <<<<<<<<<<<<<<
 * 		self.view.setCenter(centerX, centerY)
 * 
*/
  __pyx_v_centerX = (__pyx_v_left + (__pyx_v_size.x * __pyx_v_k));
  __pyx_v_centerY = (__pyx_v_top + (__pyx_v_size.y * __pyx_v_k));

  /* "pysfml261.pyx":2067
 * 		cdef float k = <float>.5
 * 		cdef float centerX = left + size.x * k, centerY = top + size.y * k
 * 		self.view.setCenter(centerX, centerY)             # <<<<<<<<<<<<<<
 * 
 * 	def get_center(self) -> tuple[float, float]:
*/
  __pyx_v_self->view->setCenter(__pyx_v_centerX, __pyx_v_centerY);

  /* "pysfml261.pyx":2061
 * 		return (left, top)
 * 
 * 	def set_left_top(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2069
 * 		self.view.setCenter(centerX, centerY)
 * 
 * 	def get_center(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		return (center.x, center.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_21get_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_21get_center = {"get_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_21get_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_21get_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_center", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_center", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfView_20get_center(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_20get_center(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self) {
  sf::Vector2f __pyx_v_center;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_center", 0);

  /* "pysfml261.pyx":2070
 * 
 * 	def get_center(self) -> tuple[float, float]:
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()             # <<<<<<<<<<<<<<
 * 		return (center.x, center.y)
 * 
*/
  __pyx_v_center = ((sf::Vector2f const )__pyx_v_self->view->getCenter());

  /* "pysfml261.pyx":2071
 * 	def get_center(self) -> tuple[float, float]:
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		return (center.x, center.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_center(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_center.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_center.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2071, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2071, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2069
 * 		self.view.setCenter(centerX, centerY)
 * 
 * 	def get_center(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		return (center.x, center.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfView.get_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2073
 * 		return (center.x, center.y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_23set_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_23set_center = {"set_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_23set_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_23set_center(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_center_x;
  float __pyx_v_center_y;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_center (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_center_x,&__pyx_mstate_global->__pyx_n_u_center_y,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2073, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2073, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2073, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_center", 0) < 0) __PYX_ERR(0, 2073, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2073, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2073, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_center_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_center_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2074, __pyx_L3_error)
    } else {
      __pyx_v_center_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_center_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_center_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2075, __pyx_L3_error)
    } else {
      __pyx_v_center_y = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_center", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2073, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.set_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_22set_center(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_center_x, __pyx_v_center_y);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_22set_center(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_center_x, float __pyx_v_center_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_center", 0);

  /* "pysfml261.pyx":2076
 * 		float center_x = 0,
 * 		float center_y = 0) -> None:
 * 		self.view.setCenter(center_x, center_y)             # <<<<<<<<<<<<<<
 * 
 * 	def get_size(self) -> tuple[float, float]:
*/
  __pyx_v_self->view->setCenter(__pyx_v_center_x, __pyx_v_center_y);

  /* "pysfml261.pyx":2073
 * 		return (center.x, center.y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2078
 * 		self.view.setCenter(center_x, center_y)
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		return (size.x, size.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_25get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_25get_size = {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_25get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_25get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_size", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_size", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfView_24get_size(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_24get_size(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self) {
  sf::Vector2f __pyx_v_size;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_size", 0);

  /* "pysfml261.pyx":2079
 * 
 * 	def get_size(self) -> tuple[float, float]:
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()             # <<<<<<<<<<<<<<
 * 		return (size.x, size.y)
 * 
*/
  __pyx_v_size = ((sf::Vector2f const )__pyx_v_self->view->getSize());

  /* "pysfml261.pyx":2080
 * 	def get_size(self) -> tuple[float, float]:
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		return (size.x, size.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_size(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_size.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_size.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2080, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2080, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2078
 * 		self.view.setCenter(center_x, center_y)
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		return (size.x, size.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfView.get_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2082
 * 		return (size.x, size.y)
 * 
 * 	def set_size(self,             # <<<<<<<<<<<<<<
 * 		float width = 0,
 * 		float height = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_27set_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_27set_size = {"set_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_27set_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_27set_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_width;
  float __pyx_v_height;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_width,&__pyx_mstate_global->__pyx_n_u_height,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2082, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2082, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2082, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_size", 0) < 0) __PYX_ERR(0, 2082, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2082, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2082, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_width = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2083, __pyx_L3_error)
    } else {
      __pyx_v_width = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_height = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2084, __pyx_L3_error)
    } else {
      __pyx_v_height = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_size", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2082, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.set_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_26set_size(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_width, __pyx_v_height);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_26set_size(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_width, float __pyx_v_height) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_size", 0);

  /* "pysfml261.pyx":2085
 * 		float width = 0,
 * 		float height = 0) -> None:
 * 		self.view.setSize(width, height)             # <<<<<<<<<<<<<<
 * 
 * 	def get_rotation(self) -> float:
*/
  __pyx_v_self->view->setSize(__pyx_v_width, __pyx_v_height);

  /* "pysfml261.pyx":2082
 * 		return (size.x, size.y)
 * 
 * 	def set_size(self,             # <<<<<<<<<<<<<<
 * 		float width = 0,
 * 		float height = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2087
 * 		self.view.setSize(width, height)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.view.getRotation()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_29get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_29get_rotation = {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_29get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_29get_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_rotation", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_rotation", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfView_28get_rotation(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_28get_rotation(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_rotation", 0);

  /* "pysfml261.pyx":2088
 * 
 * 	def get_rotation(self) -> float:
 * 		return self.view.getRotation()             # <<<<<<<<<<<<<<
 * 
 * 	def set_rotation(self, float degrees) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->view->getRotation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2087
 * 		self.view.setSize(width, height)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.view.getRotation()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfView.get_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2090
 * 		return self.view.getRotation()
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.setRotation(degrees)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_31set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_31set_rotation = {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_31set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_31set_rotation(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_degrees;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_degrees,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2090, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2090, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_rotation", 0) < 0) __PYX_ERR(0, 2090, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_rotation", 1, 1, 1, i); __PYX_ERR(0, 2090, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2090, __pyx_L3_error)
    }
    __pyx_v_degrees = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_degrees == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2090, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_rotation", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2090, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.set_rotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_30set_rotation(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v_degrees);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_30set_rotation(struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, float __pyx_v_degrees) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rotation", 0);

  /* "pysfml261.pyx":2091
 * 
 * 	def set_rotation(self, float degrees) -> None:
 * 		self.view.setRotation(degrees)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __pyx_v_self->view->setRotation(__pyx_v_degrees);

  /* "pysfml261.pyx":2090
 * 		return self.view.getRotation()
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.setRotation(degrees)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_33__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_33__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_33__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_33__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_6sfView_32__reduce_cython__(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_32__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfView *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfView.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_6sfView_35__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_6sfView_35__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_35__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_6sfView_35__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfView.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6sfView_34__setstate_cython__(((struct __pyx_obj_9pysfml261_sfView *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6sfView_34__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfView *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfView.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2098
 * 	cdef Shader* shader
 * 
 * 	def __cinit__(             # <<<<<<<<<<<<<<
 * 		self,
 * 		str filename,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8sfShader_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_8sfShader_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  int __pyx_v_type;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_filename,&__pyx_mstate_global->__pyx_n_u_type,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2098, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2098, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2098, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 2098, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, i); __PYX_ERR(0, 2098, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2098, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2098, __pyx_L3_error)
    }
    __pyx_v_filename = ((PyObject*)values[0]);
    __pyx_v_type = __Pyx_PyLong_As_int(values[1]); if (unlikely((__pyx_v_type == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2101, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 2098, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfShader.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_filename), (&PyUnicode_Type), 1, "filename", 1))) __PYX_ERR(0, 2100, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfShader___cinit__(((struct __pyx_obj_9pysfml261_sfShader *)__pyx_v_self), __pyx_v_filename, __pyx_v_type);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8sfShader___cinit__(struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self, PyObject *__pyx_v_filename, int __pyx_v_type) {
  std::string __pyx_v_path;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  PyObject *__pyx_t_9[3];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pysfml261.pyx":2103
 * 		int type
 * 		):
 * 		cdef string path = _text(filename).encode('utf-8')             # <<<<<<<<<<<<<<
 * 		self.shader = new Shader()
 * 		if not self.shader.loadFromFile(path, <Type>type):
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 2103, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_convert_string_from_py_6libcpp_6string_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2103, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_path = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "pysfml261.pyx":2104
 * 		):
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.shader = new Shader()             # <<<<<<<<<<<<<<
 * 		if not self.shader.loadFromFile(path, <Type>type):
 * 			if PY_MAJOR_VERSION < 3:
*/
  __pyx_v_self->shader = new sf::Shader();

  /* "pysfml261.pyx":2105
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.shader = new Shader()
 * 		if not self.shader.loadFromFile(path, <Type>type):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load shader from {0}!'.format(filename))
*/
  __pyx_t_4 = (!__pyx_v_self->shader->loadFromFile(__pyx_v_path, ((enum sf::Shader::Type)__pyx_v_type)));
  if (__pyx_t_4) {

    /* "pysfml261.pyx":2106
 * 		self.shader = new Shader()
 * 		if not self.shader.loadFromFile(path, <Type>type):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load shader from {0}!'.format(filename))
 * 			else:
*/
    __pyx_t_4 = (PY_MAJOR_VERSION < 3);
    if (unlikely(__pyx_t_4)) {

      /* "pysfml261.pyx":2107
 * 		if not self.shader.loadFromFile(path, <Type>type):
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load shader from {0}!'.format(filename))             # <<<<<<<<<<<<<<
 * 			else:
 * 				raise RuntimeError(f'Failed to load shader {filename}!')
*/
      __pyx_t_1 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_5 = __pyx_builtin_RuntimeError; 
      __pyx_t_7 = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_shader_from_0;
      __Pyx_INCREF(__pyx_t_7);
      __pyx_t_8 = 0;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_filename};
        __pyx_t_6 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_format, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2107, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
      }
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_6};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2107, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 2107, __pyx_L1_error)

      /* "pysfml261.pyx":2106
 * 		self.shader = new Shader()
 * 		if not self.shader.loadFromFile(path, <Type>type):
 * 			if PY_MAJOR_VERSION < 3:             # <<<<<<<<<<<<<<
 * 				raise RuntimeError('Failed to load shader from {0}!'.format(filename))
 * 			else:
*/
    }

    /* "pysfml261.pyx":2109
 * 				raise RuntimeError('Failed to load shader from {0}!'.format(filename))
 * 			else:
 * 				raise RuntimeError(f'Failed to load shader {filename}!')             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
    /*else*/ {
      __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_builtin_RuntimeError);
      __pyx_t_6 = __pyx_builtin_RuntimeError; 
      __pyx_t_1 = __Pyx_PyUnicode_Unicode(__pyx_v_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2109, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9[0] = __pyx_mstate_global->__pyx_kp_u_Failed_to_load_shader;
      __pyx_t_9[1] = __pyx_t_1;
      __pyx_t_9[2] = __pyx_mstate_global->__pyx_kp_u_;
      __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_9, 3, 22 + __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1) + 1, 127 | __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1));
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2109, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = 1;
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2109, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 2109, __pyx_L1_error)
    }

    /* "pysfml261.pyx":2105
 * 		cdef string path = _text(filename).encode('utf-8')
 * 		self.shader = new Shader()
 * 		if not self.shader.loadFromFile(path, <Type>type):             # <<<<<<<<<<<<<<
 * 			if PY_MAJOR_VERSION < 3:
 * 				raise RuntimeError('Failed to load shader from {0}!'.format(filename))
*/
  }

  /* "pysfml261.pyx":2098
 * 	cdef Shader* shader
 * 
 * 	def __cinit__(             # <<<<<<<<<<<<<<
 * 		self,
 * 		str filename,
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfShader.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2111
 * 				raise RuntimeError(f'Failed to load shader {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.shader is not NULL:
 * 			del self.shader
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_8sfShader_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_8sfShader_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_8sfShader_2__dealloc__(((struct __pyx_obj_9pysfml261_sfShader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_8sfShader_2__dealloc__(struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self) {
  int __pyx_t_1;

  /* "pysfml261.pyx":2112
 * 
 * 	def __dealloc__(self):
 * 		if self.shader is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.shader
 * 
*/
  __pyx_t_1 = (__pyx_v_self->shader != NULL);
  if (__pyx_t_1) {

    /* "pysfml261.pyx":2113
 * 	def __dealloc__(self):
 * 		if self.shader is not NULL:
 * 			del self.shader             # <<<<<<<<<<<<<<
 * 
 * 	def set_uniform(self,
*/
    delete __pyx_v_self->shader;

    /* "pysfml261.pyx":2112
 * 
 * 	def __dealloc__(self):
 * 		if self.shader is not NULL:             # <<<<<<<<<<<<<<
 * 			del self.shader
 * 
*/
  }

  /* "pysfml261.pyx":2111
 * 				raise RuntimeError(f'Failed to load shader {filename}!')
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self.shader is not NULL:
 * 			del self.shader
*/

  /* function exit code */
}

/* "pysfml261.pyx":2115
 * 			del self.shader
 * 
 * 	def set_uniform(self,             # <<<<<<<<<<<<<<
 * 		str name_,
 * 		float x) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfShader_5set_uniform(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfShader_5set_uniform = {"set_uniform", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfShader_5set_uniform, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfShader_5set_uniform(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_name_ = 0;
  float __pyx_v_x;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_uniform (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_name,&__pyx_mstate_global->__pyx_n_u_x,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2115, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2115, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2115, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_uniform", 0) < 0) __PYX_ERR(0, 2115, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_uniform", 1, 2, 2, i); __PYX_ERR(0, 2115, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2115, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2115, __pyx_L3_error)
    }
    __pyx_v_name_ = ((PyObject*)values[0]);
    __pyx_v_x = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2117, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_uniform", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 2115, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfShader.set_uniform", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name_), (&PyUnicode_Type), 1, "name_", 1))) __PYX_ERR(0, 2116, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8sfShader_4set_uniform(((struct __pyx_obj_9pysfml261_sfShader *)__pyx_v_self), __pyx_v_name_, __pyx_v_x);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfShader_4set_uniform(struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self, PyObject *__pyx_v_name_, float __pyx_v_x) {
  std::string __pyx_v_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_uniform", 0);

  /* "pysfml261.pyx":2118
 * 		str name_,
 * 		float x) -> None:
 * 		cdef string name = _text(name_).encode('utf-8')             # <<<<<<<<<<<<<<
 * 		self.shader.setUniform(name, x)
 * 
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_name_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 2118, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_convert_string_from_py_6libcpp_6string_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_name = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "pysfml261.pyx":2119
 * 		float x) -> None:
 * 		cdef string name = _text(name_).encode('utf-8')
 * 		self.shader.setUniform(name, x)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __pyx_v_self->shader->setUniform(__pyx_v_name, __pyx_v_x);

  /* "pysfml261.pyx":2115
 * 			del self.shader
 * 
 * 	def set_uniform(self,             # <<<<<<<<<<<<<<
 * 		str name_,
 * 		float x) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.sfShader.set_uniform", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2121
 * 		self.shader.setUniform(name, x)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_available() -> bool:
 * 		return Shader.isAvailable()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfShader_7is_available(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfShader_7is_available = {"is_available", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfShader_7is_available, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfShader_7is_available(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_available (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("is_available", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("is_available", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfShader_6is_available();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfShader_6is_available(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_available", 0);

  /* "pysfml261.pyx":2123
 * 	@staticmethod
 * 	def is_available() -> bool:
 * 		return Shader.isAvailable()             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(sf::Shader::isAvailable()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2121
 * 		self.shader.setUniform(name, x)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_available() -> bool:
 * 		return Shader.isAvailable()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfShader.is_available", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfShader_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfShader_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfShader_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfShader_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8sfShader_8__reduce_cython__(((struct __pyx_obj_9pysfml261_sfShader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfShader_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfShader.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8sfShader_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8sfShader_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfShader_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8sfShader_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfShader.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8sfShader_10__setstate_cython__(((struct __pyx_obj_9pysfml261_sfShader *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8sfShader_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfShader *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfShader.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2130
 * 	cdef RenderStates* states
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		sfShader shader):
 * 		self.states = new RenderStates(shader.shader)
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_14sfRenderStates_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_14sfRenderStates_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9pysfml261_sfShader *__pyx_v_shader = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_shader,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2130, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2130, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 2130, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, i); __PYX_ERR(0, 2130, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2130, __pyx_L3_error)
    }
    __pyx_v_shader = ((struct __pyx_obj_9pysfml261_sfShader *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2130, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderStates.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shader), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfShader, 1, "shader", 0))) __PYX_ERR(0, 2131, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderStates___cinit__(((struct __pyx_obj_9pysfml261_sfRenderStates *)__pyx_v_self), __pyx_v_shader);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_14sfRenderStates___cinit__(struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_self, struct __pyx_obj_9pysfml261_sfShader *__pyx_v_shader) {
  int __pyx_r;

  /* "pysfml261.pyx":2132
 * 	def __cinit__(self,
 * 		sfShader shader):
 * 		self.states = new RenderStates(shader.shader)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->states = new sf::RenderStates(__pyx_v_shader->shader);

  /* "pysfml261.pyx":2130
 * 	cdef RenderStates* states
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		sfShader shader):
 * 		self.states = new RenderStates(shader.shader)
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":2134
 * 		self.states = new RenderStates(shader.shader)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.states
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_14sfRenderStates_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_14sfRenderStates_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_14sfRenderStates_2__dealloc__(((struct __pyx_obj_9pysfml261_sfRenderStates *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_14sfRenderStates_2__dealloc__(struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_self) {

  /* "pysfml261.pyx":2135
 * 
 * 	def __dealloc__(self):
 * 		del self.states             # <<<<<<<<<<<<<<
 * 
 * 
*/
  delete __pyx_v_self->states;

  /* "pysfml261.pyx":2134
 * 		self.states = new RenderStates(shader.shader)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.states
 * 
*/

  /* function exit code */
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderStates_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderStates_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderStates_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderStates_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderStates_4__reduce_cython__(((struct __pyx_obj_9pysfml261_sfRenderStates *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderStates_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfRenderStates.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderStates_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderStates_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderStates_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderStates_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderStates.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderStates_6__setstate_cython__(((struct __pyx_obj_9pysfml261_sfRenderStates *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderStates_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfRenderStates.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2142
 * 	cdef RenderWindow* render_window
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		unsigned int width,
 * 		unsigned int height,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_14sfRenderWindow_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_14sfRenderWindow_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_width;
  unsigned int __pyx_v_height;
  unsigned int __pyx_v_bitsPerPixel;
  PyObject *__pyx_v_title = 0;
  unsigned int __pyx_v_style;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_width,&__pyx_mstate_global->__pyx_n_u_height,&__pyx_mstate_global->__pyx_n_u_bitsPerPixel,&__pyx_mstate_global->__pyx_n_u_title,&__pyx_mstate_global->__pyx_n_u_style,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2142, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_VARARGS(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 2142, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 2142, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2142, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2142, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2142, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 2142, __pyx_L3_error)
      if (!values[3]) values[3] = __Pyx_NewRef(((PyObject*)__pyx_mstate_global->__pyx_kp_u__2));
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 5, i); __PYX_ERR(0, 2142, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_VARARGS(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 2142, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 2142, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2142, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2142, __pyx_L3_error)
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2142, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
      if (!values[3]) values[3] = __Pyx_NewRef(((PyObject*)__pyx_mstate_global->__pyx_kp_u__2));
    }
    __pyx_v_width = __Pyx_PyLong_As_unsigned_int(values[0]); if (unlikely((__pyx_v_width == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2143, __pyx_L3_error)
    __pyx_v_height = __Pyx_PyLong_As_unsigned_int(values[1]); if (unlikely((__pyx_v_height == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2144, __pyx_L3_error)
    if (values[2]) {
      __pyx_v_bitsPerPixel = __Pyx_PyLong_As_unsigned_int(values[2]); if (unlikely((__pyx_v_bitsPerPixel == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2145, __pyx_L3_error)
    } else {
      __pyx_v_bitsPerPixel = ((unsigned int)32);
    }
    __pyx_v_title = ((PyObject*)values[3]);
    if (values[4]) {
      __pyx_v_style = __Pyx_PyLong_As_unsigned_int(values[4]); if (unlikely((__pyx_v_style == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2147, __pyx_L3_error)
    } else {
      __pyx_v_style = __pyx_mstate_global->__pyx_k__3;
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 5, __pyx_nargs); __PYX_ERR(0, 2142, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_title), (&PyUnicode_Type), 1, "title", 1))) __PYX_ERR(0, 2146, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow___cinit__(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_width, __pyx_v_height, __pyx_v_bitsPerPixel, __pyx_v_title, __pyx_v_style);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_14sfRenderWindow___cinit__(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, unsigned int __pyx_v_width, unsigned int __pyx_v_height, unsigned int __pyx_v_bitsPerPixel, PyObject *__pyx_v_title, unsigned int __pyx_v_style) {
  sf::VideoMode __pyx_v_mode;
  sf::String __pyx_v_title_;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char const *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pysfml261.pyx":2149
 * 		unsigned int style = Style.Default):
 * 
 * 		cdef VideoMode mode = VideoMode(width, height, bitsPerPixel)             # <<<<<<<<<<<<<<
 * 		cdef String title_ = String(_text(title).encode('utf-8'))
 * 		self.render_window = new RenderWindow(mode, title_, style)
*/
  __pyx_v_mode = sf::VideoMode(__pyx_v_width, __pyx_v_height, __pyx_v_bitsPerPixel);

  /* "pysfml261.pyx":2150
 * 
 * 		cdef VideoMode mode = VideoMode(width, height, bitsPerPixel)
 * 		cdef String title_ = String(_text(title).encode('utf-8'))             # <<<<<<<<<<<<<<
 * 		self.render_window = new RenderWindow(mode, title_, style)
 * 
*/
  __pyx_t_1 = __pyx_f_9pysfml261__text(__pyx_v_title); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 2150, __pyx_L1_error)
  }
  __pyx_t_2 = PyUnicode_AsUTF8String(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyBytes_AsString(__pyx_t_2); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(0, 2150, __pyx_L1_error)
  __pyx_v_title_ = sf::String(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2151
 * 		cdef VideoMode mode = VideoMode(width, height, bitsPerPixel)
 * 		cdef String title_ = String(_text(title).encode('utf-8'))
 * 		self.render_window = new RenderWindow(mode, title_, style)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
*/
  __pyx_v_self->render_window = new sf::RenderWindow(__pyx_v_mode, __pyx_v_title_, __pyx_v_style);

  /* "pysfml261.pyx":2142
 * 	cdef RenderWindow* render_window
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		unsigned int width,
 * 		unsigned int height,
*/

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2153
 * 		self.render_window = new RenderWindow(mode, title_, style)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.render_window
 * 
*/

/* Python wrapper */
static void __pyx_pw_9pysfml261_14sfRenderWindow_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9pysfml261_14sfRenderWindow_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9pysfml261_14sfRenderWindow_2__dealloc__(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9pysfml261_14sfRenderWindow_2__dealloc__(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {

  /* "pysfml261.pyx":2154
 * 
 * 	def __dealloc__(self):
 * 		del self.render_window             # <<<<<<<<<<<<<<
 * 
 * 	def map_coords_to_pixel(self,
*/
  delete __pyx_v_self->render_window;

  /* "pysfml261.pyx":2153
 * 		self.render_window = new RenderWindow(mode, title_, style)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.render_window
 * 
*/

  /* function exit code */
}

/* "pysfml261.pyx":2156
 * 		del self.render_window
 * 
 * 	def map_coords_to_pixel(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> tuple[int, int]:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_5map_coords_to_pixel(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_5map_coords_to_pixel = {"map_coords_to_pixel", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_5map_coords_to_pixel, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_5map_coords_to_pixel(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("map_coords_to_pixel (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2156, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2156, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2156, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "map_coords_to_pixel", 0) < 0) __PYX_ERR(0, 2156, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2156, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2156, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2157, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2158, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("map_coords_to_pixel", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2156, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.map_coords_to_pixel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_4map_coords_to_pixel(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_4map_coords_to_pixel(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, float __pyx_v_x, float __pyx_v_y) {
  sf::Vector2f __pyx_v_pos_;
  sf::Vector2f const *__pyx_v_pos;
  sf::Vector2i __pyx_v_pixel;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("map_coords_to_pixel", 0);

  /* "pysfml261.pyx":2160
 * 		float y = 0) -> tuple[int, int]:
 * 		cdef Vector2f pos_
 * 		pos_.x = x             # <<<<<<<<<<<<<<
 * 		pos_.y = y
 * 		cdef const Vector2f* pos = &pos_
*/
  __pyx_v_pos_.x = __pyx_v_x;

  /* "pysfml261.pyx":2161
 * 		cdef Vector2f pos_
 * 		pos_.x = x
 * 		pos_.y = y             # <<<<<<<<<<<<<<
 * 		cdef const Vector2f* pos = &pos_
 * 		cdef Vector2i pixel = self.render_window.mapCoordsToPixel(pos[0])
*/
  __pyx_v_pos_.y = __pyx_v_y;

  /* "pysfml261.pyx":2162
 * 		pos_.x = x
 * 		pos_.y = y
 * 		cdef const Vector2f* pos = &pos_             # <<<<<<<<<<<<<<
 * 		cdef Vector2i pixel = self.render_window.mapCoordsToPixel(pos[0])
 * 		return (pixel.x, pixel.y)
*/
  __pyx_v_pos = (&__pyx_v_pos_);

  /* "pysfml261.pyx":2163
 * 		pos_.y = y
 * 		cdef const Vector2f* pos = &pos_
 * 		cdef Vector2i pixel = self.render_window.mapCoordsToPixel(pos[0])             # <<<<<<<<<<<<<<
 * 		return (pixel.x, pixel.y)
 * 
*/
  __pyx_v_pixel = ((sf::Vector2i)__pyx_v_self->render_window->mapCoordsToPixel(((sf::Vector2f const &)(__pyx_v_pos[0]))));

  /* "pysfml261.pyx":2164
 * 		cdef const Vector2f* pos = &pos_
 * 		cdef Vector2i pixel = self.render_window.mapCoordsToPixel(pos[0])
 * 		return (pixel.x, pixel.y)             # <<<<<<<<<<<<<<
 * 
 * 	def map_pixel_to_coords(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_int(__pyx_v_pixel.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_From_int(__pyx_v_pixel.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2164, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2164, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2156
 * 		del self.render_window
 * 
 * 	def map_coords_to_pixel(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> tuple[int, int]:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.map_coords_to_pixel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2166
 * 		return (pixel.x, pixel.y)
 * 
 * 	def map_pixel_to_coords(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> tuple[float, float]:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_7map_pixel_to_coords(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_7map_pixel_to_coords = {"map_pixel_to_coords", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_7map_pixel_to_coords, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_7map_pixel_to_coords(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  float __pyx_v_x;
  float __pyx_v_y;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("map_pixel_to_coords (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2166, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2166, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2166, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "map_pixel_to_coords", 0) < 0) __PYX_ERR(0, 2166, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2166, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2166, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2167, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2168, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("map_pixel_to_coords", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2166, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.map_pixel_to_coords", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_6map_pixel_to_coords(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_6map_pixel_to_coords(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, float __pyx_v_x, float __pyx_v_y) {
  sf::Vector2i __pyx_v_pos_;
  sf::Vector2i const *__pyx_v_pos;
  sf::Vector2f __pyx_v_coord;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("map_pixel_to_coords", 0);

  /* "pysfml261.pyx":2170
 * 		float y = 0) -> tuple[float, float]:
 * 		cdef Vector2i pos_
 * 		pos_.x = <int>x             # <<<<<<<<<<<<<<
 * 		pos_.y = <int>y
 * 		cdef const Vector2i* pos = &pos_
*/
  __pyx_v_pos_.x = ((int)__pyx_v_x);

  /* "pysfml261.pyx":2171
 * 		cdef Vector2i pos_
 * 		pos_.x = <int>x
 * 		pos_.y = <int>y             # <<<<<<<<<<<<<<
 * 		cdef const Vector2i* pos = &pos_
 * 		cdef Vector2f coord = self.render_window.mapPixelToCoords(pos[0])
*/
  __pyx_v_pos_.y = ((int)__pyx_v_y);

  /* "pysfml261.pyx":2172
 * 		pos_.x = <int>x
 * 		pos_.y = <int>y
 * 		cdef const Vector2i* pos = &pos_             # <<<<<<<<<<<<<<
 * 		cdef Vector2f coord = self.render_window.mapPixelToCoords(pos[0])
 * 		return (coord.x, coord.y)
*/
  __pyx_v_pos = (&__pyx_v_pos_);

  /* "pysfml261.pyx":2173
 * 		pos_.y = <int>y
 * 		cdef const Vector2i* pos = &pos_
 * 		cdef Vector2f coord = self.render_window.mapPixelToCoords(pos[0])             # <<<<<<<<<<<<<<
 * 		return (coord.x, coord.y)
 * 
*/
  __pyx_v_coord = ((sf::Vector2f)__pyx_v_self->render_window->mapPixelToCoords(((sf::Vector2i const &)(__pyx_v_pos[0]))));

  /* "pysfml261.pyx":2174
 * 		cdef const Vector2i* pos = &pos_
 * 		cdef Vector2f coord = self.render_window.mapPixelToCoords(pos[0])
 * 		return (coord.x, coord.y)             # <<<<<<<<<<<<<<
 * 
 * 	def get_desktop_rect(self) -> sfFloatRect:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_coord.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_coord.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2174, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2174, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2166
 * 		return (pixel.x, pixel.y)
 * 
 * 	def map_pixel_to_coords(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> tuple[float, float]:
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.map_pixel_to_coords", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2176
 * 		return (coord.x, coord.y)
 * 
 * 	def get_desktop_rect(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		cdef Vector2u size = self.render_window.getSize()
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_14sfRenderWindow_9get_desktop_rect(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_9get_desktop_rect = {"get_desktop_rect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_9get_desktop_rect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pw_9pysfml261_14sfRenderWindow_9get_desktop_rect(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_desktop_rect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_desktop_rect", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_desktop_rect", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_8get_desktop_rect(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_pf_9pysfml261_14sfRenderWindow_8get_desktop_rect(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {
  sf::Vector2i __pyx_v_pos;
  sf::Vector2u __pyx_v_size;
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_desktop_rect", 0);

  /* "pysfml261.pyx":2177
 * 
 * 	def get_desktop_rect(self) -> sfFloatRect:
 * 		cdef Vector2i pos = self.render_window.getPosition()             # <<<<<<<<<<<<<<
 * 		cdef Vector2u size = self.render_window.getSize()
 * 		return sfFloatRect(pos.x, pos.y, size.x, size.y)
*/
  __pyx_v_pos = ((sf::Vector2i)__pyx_v_self->render_window->getPosition());

  /* "pysfml261.pyx":2178
 * 	def get_desktop_rect(self) -> sfFloatRect:
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		cdef Vector2u size = self.render_window.getSize()             # <<<<<<<<<<<<<<
 * 		return sfFloatRect(pos.x, pos.y, size.x, size.y)
 * 
*/
  __pyx_v_size = ((sf::Vector2u)__pyx_v_self->render_window->getSize());

  /* "pysfml261.pyx":2179
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		cdef Vector2u size = self.render_window.getSize()
 * 		return sfFloatRect(pos.x, pos.y, size.x, size.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_view(self, sfView view_) -> None:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect); 
  __pyx_t_4 = __Pyx_PyLong_From_int(__pyx_v_pos.x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyLong_From_int(__pyx_v_pos.y); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyLong_From_unsigned_int(__pyx_v_size.x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyLong_From_unsigned_int(__pyx_v_size.y); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2179, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfFloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2176
 * 		return (coord.x, coord.y)
 * 
 * 	def get_desktop_rect(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		cdef Vector2u size = self.render_window.getSize()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.get_desktop_rect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2181
 * 		return sfFloatRect(pos.x, pos.y, size.x, size.y)
 * 
 * 	def set_view(self, sfView view_) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const View* view = &view_.view[0]
 * 		self.render_window.setView(view[0])
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_11set_view(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_11set_view = {"set_view", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_11set_view, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_11set_view(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfView *__pyx_v_view_ = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_view (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_view,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2181, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2181, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_view", 0) < 0) __PYX_ERR(0, 2181, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_view", 1, 1, 1, i); __PYX_ERR(0, 2181, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2181, __pyx_L3_error)
    }
    __pyx_v_view_ = ((struct __pyx_obj_9pysfml261_sfView *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_view", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2181, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.set_view", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_view_), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, 1, "view_", 0))) __PYX_ERR(0, 2181, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_10set_view(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_view_);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_10set_view(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfView *__pyx_v_view_) {
  sf::View const *__pyx_v_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_view", 0);

  /* "pysfml261.pyx":2182
 * 
 * 	def set_view(self, sfView view_) -> None:
 * 		cdef const View* view = &view_.view[0]             # <<<<<<<<<<<<<<
 * 		self.render_window.setView(view[0])
 * 
*/
  __pyx_v_view = (&(__pyx_v_view_->view[0]));

  /* "pysfml261.pyx":2183
 * 	def set_view(self, sfView view_) -> None:
 * 		cdef const View* view = &view_.view[0]
 * 		self.render_window.setView(view[0])             # <<<<<<<<<<<<<<
 * 
 * 	def get_view(self) -> sfView:
*/
  __pyx_v_self->render_window->setView((__pyx_v_view[0]));

  /* "pysfml261.pyx":2181
 * 		return sfFloatRect(pos.x, pos.y, size.x, size.y)
 * 
 * 	def set_view(self, sfView view_) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const View* view = &view_.view[0]
 * 		self.render_window.setView(view[0])
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2185
 * 		self.render_window.setView(view[0])
 * 
 * 	def get_view(self) -> sfView:             # <<<<<<<<<<<<<<
 * 		cdef View view = <const View>self.render_window.getView()
 * 		cdef Vector2f center = <const Vector2f>view.getCenter()
*/

/* Python wrapper */
static struct __pyx_obj_9pysfml261_sfView *__pyx_pw_9pysfml261_14sfRenderWindow_13get_view(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_13get_view = {"get_view", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_13get_view, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static struct __pyx_obj_9pysfml261_sfView *__pyx_pw_9pysfml261_14sfRenderWindow_13get_view(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  struct __pyx_obj_9pysfml261_sfView *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_view (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_view", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_view", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_12get_view(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9pysfml261_sfView *__pyx_pf_9pysfml261_14sfRenderWindow_12get_view(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {
  sf::View __pyx_v_view;
  sf::Vector2f __pyx_v_center;
  sf::Vector2f __pyx_v_size;
  struct __pyx_obj_9pysfml261_sfView *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_view", 0);

  /* "pysfml261.pyx":2186
 * 
 * 	def get_view(self) -> sfView:
 * 		cdef View view = <const View>self.render_window.getView()             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>view.getCenter()
 * 		cdef Vector2f size = <const Vector2f>view.getSize()
*/
  __pyx_v_view = ((sf::View const )__pyx_v_self->render_window->getView());

  /* "pysfml261.pyx":2187
 * 	def get_view(self) -> sfView:
 * 		cdef View view = <const View>self.render_window.getView()
 * 		cdef Vector2f center = <const Vector2f>view.getCenter()             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>view.getSize()
 * 		return sfView(center.x, center.y, size.x, size.y)
*/
  __pyx_v_center = ((sf::Vector2f const )__pyx_v_view.getCenter());

  /* "pysfml261.pyx":2188
 * 		cdef View view = <const View>self.render_window.getView()
 * 		cdef Vector2f center = <const Vector2f>view.getCenter()
 * 		cdef Vector2f size = <const Vector2f>view.getSize()             # <<<<<<<<<<<<<<
 * 		return sfView(center.x, center.y, size.x, size.y)
 * 
*/
  __pyx_v_size = ((sf::Vector2f const )__pyx_v_view.getSize());

  /* "pysfml261.pyx":2189
 * 		cdef Vector2f center = <const Vector2f>view.getCenter()
 * 		cdef Vector2f size = <const Vector2f>view.getSize()
 * 		return sfView(center.x, center.y, size.x, size.y)             # <<<<<<<<<<<<<<
 * 
 * 	def get_position(self) -> tuple[int, int]:
*/
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_2 = NULL;
  __Pyx_INCREF((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView);
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView); 
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_center.x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_center.y); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_size.x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_size.y); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = 1;
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_8, (5-__pyx_t_8) | (__pyx_t_8*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2189, __pyx_L1_error)
    __Pyx_GOTREF((PyObject *)__pyx_t_1);
  }
  __pyx_r = ((struct __pyx_obj_9pysfml261_sfView *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2185
 * 		self.render_window.setView(view[0])
 * 
 * 	def get_view(self) -> sfView:             # <<<<<<<<<<<<<<
 * 		cdef View view = <const View>self.render_window.getView()
 * 		cdef Vector2f center = <const Vector2f>view.getCenter()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.get_view", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2191
 * 		return sfView(center.x, center.y, size.x, size.y)
 * 
 * 	def get_position(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		return (pos.x, pos.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_15get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_15get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_15get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_15get_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_14get_position(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_14get_position(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {
  sf::Vector2i __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":2192
 * 
 * 	def get_position(self) -> tuple[int, int]:
 * 		cdef Vector2i pos = self.render_window.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y)
 * 
*/
  __pyx_v_pos = ((sf::Vector2i)__pyx_v_self->render_window->getPosition());

  /* "pysfml261.pyx":2193
 * 	def get_position(self) -> tuple[int, int]:
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		return (pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 	def set_position(self,
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_int(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_From_int(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2193, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2193, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2191
 * 		return sfView(center.x, center.y, size.x, size.y)
 * 
 * 	def get_position(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		return (pos.x, pos.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2195
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		int x = 0,
 * 		int y = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_17set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_17set_position = {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_17set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_17set_position(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_x;
  int __pyx_v_y;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_x,&__pyx_mstate_global->__pyx_n_u_y,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2195, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2195, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2195, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_position", 0) < 0) __PYX_ERR(0, 2195, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2195, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2195, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2196, __pyx_L3_error)
    } else {
      __pyx_v_x = ((int)0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyLong_As_int(values[1]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2197, __pyx_L3_error)
    } else {
      __pyx_v_y = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_position", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2195, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.set_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_16set_position(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_16set_position(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_x, int __pyx_v_y) {
  sf::Vector2i __pyx_v_pos;
  sf::Vector2i const *__pyx_v_const_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_position", 0);

  /* "pysfml261.pyx":2199
 * 		int y = 0) -> None:
 * 		cdef Vector2i pos
 * 		pos.x = x             # <<<<<<<<<<<<<<
 * 		pos.y = y
 * 		cdef const Vector2i* const_pos = &pos
*/
  __pyx_v_pos.x = __pyx_v_x;

  /* "pysfml261.pyx":2200
 * 		cdef Vector2i pos
 * 		pos.x = x
 * 		pos.y = y             # <<<<<<<<<<<<<<
 * 		cdef const Vector2i* const_pos = &pos
 * 		self.render_window.setPosition(const_pos[0])
*/
  __pyx_v_pos.y = __pyx_v_y;

  /* "pysfml261.pyx":2201
 * 		pos.x = x
 * 		pos.y = y
 * 		cdef const Vector2i* const_pos = &pos             # <<<<<<<<<<<<<<
 * 		self.render_window.setPosition(const_pos[0])
 * 
*/
  __pyx_v_const_pos = (&__pyx_v_pos);

  /* "pysfml261.pyx":2202
 * 		pos.y = y
 * 		cdef const Vector2i* const_pos = &pos
 * 		self.render_window.setPosition(const_pos[0])             # <<<<<<<<<<<<<<
 * 
 * 	def move(self,
*/
  __pyx_v_self->render_window->setPosition(((sf::Vector2i const &)(__pyx_v_const_pos[0])));

  /* "pysfml261.pyx":2195
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		int x = 0,
 * 		int y = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2204
 * 		self.render_window.setPosition(const_pos[0])
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		int dx = 0,
 * 		int dy = 0) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_19move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_19move = {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_19move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_19move(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_dx;
  int __pyx_v_dy;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_dx,&__pyx_mstate_global->__pyx_n_u_dy,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2204, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2204, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2204, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "move", 0) < 0) __PYX_ERR(0, 2204, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2204, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2204, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_dx = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_dx == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2205, __pyx_L3_error)
    } else {
      __pyx_v_dx = ((int)0);
    }
    if (values[1]) {
      __pyx_v_dy = __Pyx_PyLong_As_int(values[1]); if (unlikely((__pyx_v_dy == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2206, __pyx_L3_error)
    } else {
      __pyx_v_dy = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2204, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_18move(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_dx, __pyx_v_dy);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_18move(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_dx, int __pyx_v_dy) {
  sf::Vector2i __pyx_v_pos;
  sf::Vector2i const *__pyx_v_const_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move", 0);

  /* "pysfml261.pyx":2207
 * 		int dx = 0,
 * 		int dy = 0) -> None:
 * 		cdef Vector2i pos = self.render_window.getPosition()             # <<<<<<<<<<<<<<
 * 		pos.x += dx
 * 		pos.y += dy
*/
  __pyx_v_pos = ((sf::Vector2i)__pyx_v_self->render_window->getPosition());

  /* "pysfml261.pyx":2208
 * 		int dy = 0) -> None:
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		pos.x += dx             # <<<<<<<<<<<<<<
 * 		pos.y += dy
 * 		cdef const Vector2i* const_pos = &pos
*/
  __pyx_v_pos.x = (__pyx_v_pos.x + __pyx_v_dx);

  /* "pysfml261.pyx":2209
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		pos.x += dx
 * 		pos.y += dy             # <<<<<<<<<<<<<<
 * 		cdef const Vector2i* const_pos = &pos
 * 		self.render_window.setPosition(const_pos[0])
*/
  __pyx_v_pos.y = (__pyx_v_pos.y + __pyx_v_dy);

  /* "pysfml261.pyx":2210
 * 		pos.x += dx
 * 		pos.y += dy
 * 		cdef const Vector2i* const_pos = &pos             # <<<<<<<<<<<<<<
 * 		self.render_window.setPosition(const_pos[0])
 * 
*/
  __pyx_v_const_pos = (&__pyx_v_pos);

  /* "pysfml261.pyx":2211
 * 		pos.y += dy
 * 		cdef const Vector2i* const_pos = &pos
 * 		self.render_window.setPosition(const_pos[0])             # <<<<<<<<<<<<<<
 * 
 * 	def draw_sprite(self, sfSprite sprite) -> None:
*/
  __pyx_v_self->render_window->setPosition(((sf::Vector2i const &)(__pyx_v_const_pos[0])));

  /* "pysfml261.pyx":2204
 * 		self.render_window.setPosition(const_pos[0])
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		int dx = 0,
 * 		int dy = 0) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2213
 * 		self.render_window.setPosition(const_pos[0])
 * 
 * 	def draw_sprite(self, sfSprite sprite) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(sprite.sprite[0], Default)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_21draw_sprite(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_21draw_sprite = {"draw_sprite", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_21draw_sprite, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_21draw_sprite(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_sprite (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2213, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2213, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "draw_sprite", 0) < 0) __PYX_ERR(0, 2213, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("draw_sprite", 1, 1, 1, i); __PYX_ERR(0, 2213, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2213, __pyx_L3_error)
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_sprite", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2213, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.draw_sprite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 2213, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_20draw_sprite(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_sprite);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_20draw_sprite(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_sprite", 0);

  /* "pysfml261.pyx":2214
 * 
 * 	def draw_sprite(self, sfSprite sprite) -> None:
 * 		self.render_window.draw(sprite.sprite[0], Default)             # <<<<<<<<<<<<<<
 * 
 * 	def draw_sprite_use_state(self,
*/
  __pyx_v_self->render_window->draw((__pyx_v_sprite->sprite[0]), sf::RenderStates::Default);

  /* "pysfml261.pyx":2213
 * 		self.render_window.setPosition(const_pos[0])
 * 
 * 	def draw_sprite(self, sfSprite sprite) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(sprite.sprite[0], Default)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2216
 * 		self.render_window.draw(sprite.sprite[0], Default)
 * 
 * 	def draw_sprite_use_state(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		sfRenderStates states) -> None:
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_23draw_sprite_use_state(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_23draw_sprite_use_state = {"draw_sprite_use_state", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_23draw_sprite_use_state, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_23draw_sprite_use_state(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite = 0;
  struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_states = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_sprite_use_state (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprite,&__pyx_mstate_global->__pyx_n_u_states,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2216, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2216, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2216, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "draw_sprite_use_state", 0) < 0) __PYX_ERR(0, 2216, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 2; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("draw_sprite_use_state", 1, 2, 2, i); __PYX_ERR(0, 2216, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2216, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2216, __pyx_L3_error)
    }
    __pyx_v_sprite = ((struct __pyx_obj_9pysfml261_sfSprite *)values[0]);
    __pyx_v_states = ((struct __pyx_obj_9pysfml261_sfRenderStates *)values[1]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_sprite_use_state", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 2216, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.draw_sprite_use_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprite), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, 1, "sprite", 0))) __PYX_ERR(0, 2217, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_states), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderStates, 1, "states", 0))) __PYX_ERR(0, 2218, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_22draw_sprite_use_state(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_sprite, __pyx_v_states);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_22draw_sprite_use_state(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfSprite *__pyx_v_sprite, struct __pyx_obj_9pysfml261_sfRenderStates *__pyx_v_states) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_sprite_use_state", 0);

  /* "pysfml261.pyx":2219
 * 		sfSprite sprite,
 * 		sfRenderStates states) -> None:
 * 		self.render_window.draw(sprite.sprite[0], states.states[0])             # <<<<<<<<<<<<<<
 * 
 * 	def draw_text(self, sfText text) -> None:
*/
  __pyx_v_self->render_window->draw((__pyx_v_sprite->sprite[0]), (__pyx_v_states->states[0]));

  /* "pysfml261.pyx":2216
 * 		self.render_window.draw(sprite.sprite[0], Default)
 * 
 * 	def draw_sprite_use_state(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		sfRenderStates states) -> None:
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2221
 * 		self.render_window.draw(sprite.sprite[0], states.states[0])
 * 
 * 	def draw_text(self, sfText text) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(text.text[0], Default)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_25draw_text(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_25draw_text = {"draw_text", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_25draw_text, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_25draw_text(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfText *__pyx_v_text = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_text (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_text,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2221, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2221, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "draw_text", 0) < 0) __PYX_ERR(0, 2221, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("draw_text", 1, 1, 1, i); __PYX_ERR(0, 2221, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2221, __pyx_L3_error)
    }
    __pyx_v_text = ((struct __pyx_obj_9pysfml261_sfText *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_text", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2221, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.draw_text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_text), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, 1, "text", 0))) __PYX_ERR(0, 2221, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_24draw_text(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_text);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_24draw_text(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfText *__pyx_v_text) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_text", 0);

  /* "pysfml261.pyx":2222
 * 
 * 	def draw_text(self, sfText text) -> None:
 * 		self.render_window.draw(text.text[0], Default)             # <<<<<<<<<<<<<<
 * 
 * 	def draw_rect_shape(self, sfRectangleShape shape) -> None:
*/
  __pyx_v_self->render_window->draw((__pyx_v_text->text[0]), sf::RenderStates::Default);

  /* "pysfml261.pyx":2221
 * 		self.render_window.draw(sprite.sprite[0], states.states[0])
 * 
 * 	def draw_text(self, sfText text) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(text.text[0], Default)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2224
 * 		self.render_window.draw(text.text[0], Default)
 * 
 * 	def draw_rect_shape(self, sfRectangleShape shape) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_27draw_rect_shape(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_27draw_rect_shape = {"draw_rect_shape", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_27draw_rect_shape, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_27draw_rect_shape(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_shape = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_rect_shape (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_shape,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2224, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2224, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "draw_rect_shape", 0) < 0) __PYX_ERR(0, 2224, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("draw_rect_shape", 1, 1, 1, i); __PYX_ERR(0, 2224, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2224, __pyx_L3_error)
    }
    __pyx_v_shape = ((struct __pyx_obj_9pysfml261_sfRectangleShape *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_rect_shape", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2224, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.draw_rect_shape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, 1, "shape", 0))) __PYX_ERR(0, 2224, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_26draw_rect_shape(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_shape);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_26draw_rect_shape(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfRectangleShape *__pyx_v_shape) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_rect_shape", 0);

  /* "pysfml261.pyx":2225
 * 
 * 	def draw_rect_shape(self, sfRectangleShape shape) -> None:
 * 		self.render_window.draw(shape.shape[0], Default)             # <<<<<<<<<<<<<<
 * 
 * 	def draw_circle_shape(self, sfCircleShape shape) -> None:
*/
  __pyx_v_self->render_window->draw((__pyx_v_shape->shape[0]), sf::RenderStates::Default);

  /* "pysfml261.pyx":2224
 * 		self.render_window.draw(text.text[0], Default)
 * 
 * 	def draw_rect_shape(self, sfRectangleShape shape) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2227
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
 * 	def draw_circle_shape(self, sfCircleShape shape) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_29draw_circle_shape(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_29draw_circle_shape = {"draw_circle_shape", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_29draw_circle_shape, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_29draw_circle_shape(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_shape = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_circle_shape (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_shape,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2227, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2227, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "draw_circle_shape", 0) < 0) __PYX_ERR(0, 2227, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("draw_circle_shape", 1, 1, 1, i); __PYX_ERR(0, 2227, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2227, __pyx_L3_error)
    }
    __pyx_v_shape = ((struct __pyx_obj_9pysfml261_sfCircleShape *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_circle_shape", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2227, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.draw_circle_shape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, 1, "shape", 0))) __PYX_ERR(0, 2227, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_28draw_circle_shape(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_shape);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_28draw_circle_shape(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfCircleShape *__pyx_v_shape) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_circle_shape", 0);

  /* "pysfml261.pyx":2228
 * 
 * 	def draw_circle_shape(self, sfCircleShape shape) -> None:
 * 		self.render_window.draw(shape.shape[0], Default)             # <<<<<<<<<<<<<<
 * 
 * 	def set_icon(self,
*/
  __pyx_v_self->render_window->draw((__pyx_v_shape->shape[0]), sf::RenderStates::Default);

  /* "pysfml261.pyx":2227
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
 * 	def draw_circle_shape(self, sfCircleShape shape) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2230
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
 * 	def set_icon(self,             # <<<<<<<<<<<<<<
 * 		sfImage icon,
 * 		unsigned int width = 32,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_31set_icon(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_31set_icon = {"set_icon", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_31set_icon, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_31set_icon(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfImage *__pyx_v_icon = 0;
  unsigned int __pyx_v_width;
  unsigned int __pyx_v_height;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_icon (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_icon,&__pyx_mstate_global->__pyx_n_u_width,&__pyx_mstate_global->__pyx_n_u_height,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2230, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2230, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2230, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2230, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_icon", 0) < 0) __PYX_ERR(0, 2230, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_icon", 0, 1, 3, i); __PYX_ERR(0, 2230, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2230, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2230, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2230, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_icon = ((struct __pyx_obj_9pysfml261_sfImage *)values[0]);
    if (values[1]) {
      __pyx_v_width = __Pyx_PyLong_As_unsigned_int(values[1]); if (unlikely((__pyx_v_width == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2232, __pyx_L3_error)
    } else {
      __pyx_v_width = ((unsigned int)32);
    }
    if (values[2]) {
      __pyx_v_height = __Pyx_PyLong_As_unsigned_int(values[2]); if (unlikely((__pyx_v_height == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2233, __pyx_L3_error)
    } else {
      __pyx_v_height = ((unsigned int)32);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_icon", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 2230, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.set_icon", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_icon), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfImage, 1, "icon", 0))) __PYX_ERR(0, 2231, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_30set_icon(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_icon, __pyx_v_width, __pyx_v_height);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_30set_icon(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfImage *__pyx_v_icon, unsigned int __pyx_v_width, unsigned int __pyx_v_height) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_icon", 0);

  /* "pysfml261.pyx":2234
 * 		unsigned int width = 32,
 * 		unsigned int height = 32) -> None:
 * 		self.render_window.setIcon(width, height, icon.image.getPixelsPtr())             # <<<<<<<<<<<<<<
 * 
 * 	def clear(self, sfColor color) -> None:
*/
  __pyx_v_self->render_window->setIcon(__pyx_v_width, __pyx_v_height, __pyx_v_icon->image->getPixelsPtr());

  /* "pysfml261.pyx":2230
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
 * 	def set_icon(self,             # <<<<<<<<<<<<<<
 * 		sfImage icon,
 * 		unsigned int width = 32,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2236
 * 		self.render_window.setIcon(width, height, icon.image.getPixelsPtr())
 * 
 * 	def clear(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.clear(color.color[0])
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_33clear(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_33clear = {"clear", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_33clear, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_33clear(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_color,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2236, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2236, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "clear", 0) < 0) __PYX_ERR(0, 2236, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("clear", 1, 1, 1, i); __PYX_ERR(0, 2236, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2236, __pyx_L3_error)
    }
    __pyx_v_color = ((struct __pyx_obj_9pysfml261_sfColor *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("clear", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2236, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfColor, 1, "color", 0))) __PYX_ERR(0, 2236, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_32clear(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_color);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_32clear(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfColor *__pyx_v_color) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear", 0);

  /* "pysfml261.pyx":2237
 * 
 * 	def clear(self, sfColor color) -> None:
 * 		self.render_window.clear(color.color[0])             # <<<<<<<<<<<<<<
 * 
 * 	def poll_event(self, sfEvent event) -> bool:
*/
  __pyx_v_self->render_window->clear((__pyx_v_color->color[0]));

  /* "pysfml261.pyx":2236
 * 		self.render_window.setIcon(width, height, icon.image.getPixelsPtr())
 * 
 * 	def clear(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.clear(color.color[0])
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2239
 * 		self.render_window.clear(color.color[0])
 * 
 * 	def poll_event(self, sfEvent event) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.pollEvent(event.event[0])
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_35poll_event(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_35poll_event = {"poll_event", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_35poll_event, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_35poll_event(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("poll_event (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_event,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2239, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2239, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "poll_event", 0) < 0) __PYX_ERR(0, 2239, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("poll_event", 1, 1, 1, i); __PYX_ERR(0, 2239, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2239, __pyx_L3_error)
    }
    __pyx_v_event = ((struct __pyx_obj_9pysfml261_sfEvent *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("poll_event", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2239, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.poll_event", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_event), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfEvent, 1, "event", 0))) __PYX_ERR(0, 2239, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_34poll_event(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_event);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_34poll_event(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, struct __pyx_obj_9pysfml261_sfEvent *__pyx_v_event) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("poll_event", 0);

  /* "pysfml261.pyx":2240
 * 
 * 	def poll_event(self, sfEvent event) -> bool:
 * 		return self.render_window.pollEvent(event.event[0])             # <<<<<<<<<<<<<<
 * 
 * 	def set_visible(self, bint visible = True) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->render_window->pollEvent((__pyx_v_event->event[0]))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2239
 * 		self.render_window.clear(color.color[0])
 * 
 * 	def poll_event(self, sfEvent event) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.pollEvent(event.event[0])
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.poll_event", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2242
 * 		return self.render_window.pollEvent(event.event[0])
 * 
 * 	def set_visible(self, bint visible = True) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setVisible(visible)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_37set_visible(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_37set_visible = {"set_visible", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_37set_visible, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_37set_visible(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_visible;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_visible (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_visible,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2242, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2242, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_visible", 0) < 0) __PYX_ERR(0, 2242, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2242, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_visible = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_visible == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2242, __pyx_L3_error)
    } else {
      __pyx_v_visible = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_visible", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 2242, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.set_visible", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_36set_visible(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_visible);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_36set_visible(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_visible) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_visible", 0);

  /* "pysfml261.pyx":2243
 * 
 * 	def set_visible(self, bint visible = True) -> None:
 * 		self.render_window.setVisible(visible)             # <<<<<<<<<<<<<<
 * 
 * 	def is_open(self) -> bool:
*/
  __pyx_v_self->render_window->setVisible(__pyx_v_visible);

  /* "pysfml261.pyx":2242
 * 		return self.render_window.pollEvent(event.event[0])
 * 
 * 	def set_visible(self, bint visible = True) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setVisible(visible)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2245
 * 		self.render_window.setVisible(visible)
 * 
 * 	def is_open(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.isOpen()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_39is_open(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_39is_open = {"is_open", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_39is_open, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_39is_open(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_open (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("is_open", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("is_open", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_38is_open(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_38is_open(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_open", 0);

  /* "pysfml261.pyx":2246
 * 
 * 	def is_open(self) -> bool:
 * 		return self.render_window.isOpen()             # <<<<<<<<<<<<<<
 * 
 * 	def close(self) -> None:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->render_window->isOpen()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2245
 * 		self.render_window.setVisible(visible)
 * 
 * 	def is_open(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.isOpen()
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.is_open", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2248
 * 		return self.render_window.isOpen()
 * 
 * 	def close(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.close()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_41close(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_41close = {"close", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_41close, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_41close(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("close (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("close", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("close", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_40close(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_40close(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("close", 0);

  /* "pysfml261.pyx":2249
 * 
 * 	def close(self) -> None:
 * 		self.render_window.close()             # <<<<<<<<<<<<<<
 * 
 * 	def display(self) -> None:
*/
  __pyx_v_self->render_window->close();

  /* "pysfml261.pyx":2248
 * 		return self.render_window.isOpen()
 * 
 * 	def close(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.close()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2251
 * 		self.render_window.close()
 * 
 * 	def display(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.display()
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_43display(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_43display = {"display", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_43display, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_43display(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("display (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("display", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("display", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_42display(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_42display(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("display", 0);

  /* "pysfml261.pyx":2252
 * 
 * 	def display(self) -> None:
 * 		self.render_window.display()             # <<<<<<<<<<<<<<
 * 
 * 	def set_mouse_cursor_visible(self, bint visible) -> None:
*/
  __pyx_v_self->render_window->display();

  /* "pysfml261.pyx":2251
 * 		self.render_window.close()
 * 
 * 	def display(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.display()
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2254
 * 		self.render_window.display()
 * 
 * 	def set_mouse_cursor_visible(self, bint visible) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setMouseCursorVisible(visible)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_45set_mouse_cursor_visible(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_45set_mouse_cursor_visible = {"set_mouse_cursor_visible", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_45set_mouse_cursor_visible, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_45set_mouse_cursor_visible(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_visible;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_mouse_cursor_visible (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_visible,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2254, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2254, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_mouse_cursor_visible", 0) < 0) __PYX_ERR(0, 2254, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_mouse_cursor_visible", 1, 1, 1, i); __PYX_ERR(0, 2254, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2254, __pyx_L3_error)
    }
    __pyx_v_visible = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_visible == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2254, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_mouse_cursor_visible", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2254, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.set_mouse_cursor_visible", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_44set_mouse_cursor_visible(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_visible);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_44set_mouse_cursor_visible(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_visible) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_mouse_cursor_visible", 0);

  /* "pysfml261.pyx":2255
 * 
 * 	def set_mouse_cursor_visible(self, bint visible) -> None:
 * 		self.render_window.setMouseCursorVisible(visible)             # <<<<<<<<<<<<<<
 * 
 * 	def set_framerate_limit(self, unsigned int limit) -> None:
*/
  __pyx_v_self->render_window->setMouseCursorVisible(__pyx_v_visible);

  /* "pysfml261.pyx":2254
 * 		self.render_window.display()
 * 
 * 	def set_mouse_cursor_visible(self, bint visible) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setMouseCursorVisible(visible)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2257
 * 		self.render_window.setMouseCursorVisible(visible)
 * 
 * 	def set_framerate_limit(self, unsigned int limit) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setFramerateLimit(limit)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_47set_framerate_limit(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_47set_framerate_limit = {"set_framerate_limit", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_47set_framerate_limit, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_47set_framerate_limit(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  unsigned int __pyx_v_limit;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_framerate_limit (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_limit,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2257, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2257, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_framerate_limit", 0) < 0) __PYX_ERR(0, 2257, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("set_framerate_limit", 1, 1, 1, i); __PYX_ERR(0, 2257, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2257, __pyx_L3_error)
    }
    __pyx_v_limit = __Pyx_PyLong_As_unsigned_int(values[0]); if (unlikely((__pyx_v_limit == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2257, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_framerate_limit", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2257, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.set_framerate_limit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_46set_framerate_limit(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_limit);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_46set_framerate_limit(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, unsigned int __pyx_v_limit) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_framerate_limit", 0);

  /* "pysfml261.pyx":2258
 * 
 * 	def set_framerate_limit(self, unsigned int limit) -> None:
 * 		self.render_window.setFramerateLimit(limit)             # <<<<<<<<<<<<<<
 * 
 * 	def set_active(self, bint active = True) -> bool:
*/
  __pyx_v_self->render_window->setFramerateLimit(__pyx_v_limit);

  /* "pysfml261.pyx":2257
 * 		self.render_window.setMouseCursorVisible(visible)
 * 
 * 	def set_framerate_limit(self, unsigned int limit) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setFramerateLimit(limit)
 * 
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2260
 * 		self.render_window.setFramerateLimit(limit)
 * 
 * 	def set_active(self, bint active = True) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.setActive(active)
 * 
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_49set_active(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_49set_active = {"set_active", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_49set_active, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_49set_active(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_active;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_active (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_active,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2260, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2260, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "set_active", 0) < 0) __PYX_ERR(0, 2260, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2260, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_active = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_active == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2260, __pyx_L3_error)
    } else {
      __pyx_v_active = ((int)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_active", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 2260, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.set_active", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_48set_active(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v_active);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_48set_active(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, int __pyx_v_active) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_active", 0);

  /* "pysfml261.pyx":2261
 * 
 * 	def set_active(self, bint active = True) -> bool:
 * 		return self.render_window.setActive(active)             # <<<<<<<<<<<<<<
 * 
 * 	def get_size(self) -> tuple[int, int]:
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->render_window->setActive(__pyx_v_active)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2260
 * 		self.render_window.setFramerateLimit(limit)
 * 
 * 	def set_active(self, bint active = True) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.setActive(active)
 * 
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.set_active", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2263
 * 		return self.render_window.setActive(active)
 * 
 * 	def get_size(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2u size = self.render_window.getSize()
 * 		return (size.x, size.y)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_51get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_51get_size = {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_51get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_51get_size(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_size (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_size", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_size", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_50get_size(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_50get_size(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {
  sf::Vector2u __pyx_v_size;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_size", 0);

  /* "pysfml261.pyx":2264
 * 
 * 	def get_size(self) -> tuple[int, int]:
 * 		cdef Vector2u size = self.render_window.getSize()             # <<<<<<<<<<<<<<
 * 		return (size.x, size.y)
 * 
*/
  __pyx_v_size = ((sf::Vector2u)__pyx_v_self->render_window->getSize());

  /* "pysfml261.pyx":2265
 * 	def get_size(self) -> tuple[int, int]:
 * 		cdef Vector2u size = self.render_window.getSize()
 * 		return (size.x, size.y)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_unsigned_int(__pyx_v_size.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_From_unsigned_int(__pyx_v_size.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2265, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2265, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2263
 * 		return self.render_window.setActive(active)
 * 
 * 	def get_size(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2u size = self.render_window.getSize()
 * 		return (size.x, size.y)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.get_size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_53__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_53__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_53__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_53__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_52__reduce_cython__(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_52__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_55__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_14sfRenderWindow_55__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_55__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_14sfRenderWindow_55__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_14sfRenderWindow_54__setstate_cython__(((struct __pyx_obj_9pysfml261_sfRenderWindow *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_14sfRenderWindow_54__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.sfRenderWindow.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2270
 * cdef class sfMouse:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def world_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i mouse_pos_ = sf_Mouse.getPosition()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMouse_1world_pos(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMouse_1world_pos = {"world_pos", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_1world_pos, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMouse_1world_pos(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_wnd = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("world_pos (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_wnd,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2270, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2270, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "world_pos", 0) < 0) __PYX_ERR(0, 2270, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("world_pos", 1, 1, 1, i); __PYX_ERR(0, 2270, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2270, __pyx_L3_error)
    }
    __pyx_v_wnd = ((struct __pyx_obj_9pysfml261_sfRenderWindow *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("world_pos", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2270, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMouse.world_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_wnd), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, 1, "wnd", 0))) __PYX_ERR(0, 2271, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_7sfMouse_world_pos(__pyx_v_wnd);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMouse_world_pos(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_wnd) {
  sf::Vector2i __pyx_v_mouse_pos_;
  sf::Vector2i const *__pyx_v_mouse_pos;
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("world_pos", 0);

  /* "pysfml261.pyx":2272
 * 	@staticmethod
 * 	def world_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i mouse_pos_ = sf_Mouse.getPosition()             # <<<<<<<<<<<<<<
 * 		cdef const Vector2i* mouse_pos = &mouse_pos_
 * 		cdef Vector2f pos = wnd.render_window.mapPixelToCoords(mouse_pos[0])
*/
  __pyx_v_mouse_pos_ = ((sf::Vector2i)sf::Mouse::getPosition());

  /* "pysfml261.pyx":2273
 * 	def world_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i mouse_pos_ = sf_Mouse.getPosition()
 * 		cdef const Vector2i* mouse_pos = &mouse_pos_             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = wnd.render_window.mapPixelToCoords(mouse_pos[0])
 * 		return (<int>pos.x, <int>pos.y)
*/
  __pyx_v_mouse_pos = (&__pyx_v_mouse_pos_);

  /* "pysfml261.pyx":2274
 * 		cdef Vector2i mouse_pos_ = sf_Mouse.getPosition()
 * 		cdef const Vector2i* mouse_pos = &mouse_pos_
 * 		cdef Vector2f pos = wnd.render_window.mapPixelToCoords(mouse_pos[0])             # <<<<<<<<<<<<<<
 * 		return (<int>pos.x, <int>pos.y)
 * 
*/
  __pyx_v_pos = ((sf::Vector2f)__pyx_v_wnd->render_window->mapPixelToCoords(((sf::Vector2i const &)(__pyx_v_mouse_pos[0]))));

  /* "pysfml261.pyx":2275
 * 		cdef const Vector2i* mouse_pos = &mouse_pos_
 * 		cdef Vector2f pos = wnd.render_window.mapPixelToCoords(mouse_pos[0])
 * 		return (<int>pos.x, <int>pos.y)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_int(((int)__pyx_v_pos.x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_From_int(((int)__pyx_v_pos.y)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2275, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2275, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2270
 * cdef class sfMouse:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def world_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i mouse_pos_ = sf_Mouse.getPosition()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfMouse.world_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2277
 * 		return (<int>pos.x, <int>pos.y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def relative_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i wnd_pos = wnd.render_window.getPosition()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMouse_3relative_pos(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMouse_3relative_pos = {"relative_pos", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_3relative_pos, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMouse_3relative_pos(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_wnd = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("relative_pos (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_wnd,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2277, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2277, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "relative_pos", 0) < 0) __PYX_ERR(0, 2277, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("relative_pos", 1, 1, 1, i); __PYX_ERR(0, 2277, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2277, __pyx_L3_error)
    }
    __pyx_v_wnd = ((struct __pyx_obj_9pysfml261_sfRenderWindow *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("relative_pos", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2277, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMouse.relative_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_wnd), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, 1, "wnd", 0))) __PYX_ERR(0, 2278, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_7sfMouse_2relative_pos(__pyx_v_wnd);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMouse_2relative_pos(struct __pyx_obj_9pysfml261_sfRenderWindow *__pyx_v_wnd) {
  sf::Vector2i __pyx_v_wnd_pos;
  sf::Vector2u __pyx_v_wnd_size;
  sf::FloatRect __pyx_v_wnd_rect;
  sf::Vector2i __pyx_v_mouse_pos;
  int __pyx_v_x;
  int __pyx_v_y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("relative_pos", 0);

  /* "pysfml261.pyx":2279
 * 	@staticmethod
 * 	def relative_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i wnd_pos = wnd.render_window.getPosition()             # <<<<<<<<<<<<<<
 * 		cdef Vector2u wnd_size = wnd.render_window.getSize()
 * 		cdef FloatRect wnd_rect = FloatRect(wnd_pos.x, wnd_pos.y, wnd_size.x, wnd_size.y)
*/
  __pyx_v_wnd_pos = ((sf::Vector2i)__pyx_v_wnd->render_window->getPosition());

  /* "pysfml261.pyx":2280
 * 	def relative_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i wnd_pos = wnd.render_window.getPosition()
 * 		cdef Vector2u wnd_size = wnd.render_window.getSize()             # <<<<<<<<<<<<<<
 * 		cdef FloatRect wnd_rect = FloatRect(wnd_pos.x, wnd_pos.y, wnd_size.x, wnd_size.y)
 * 		cdef Vector2i mouse_pos = sf_Mouse.getPosition()
*/
  __pyx_v_wnd_size = ((sf::Vector2u)__pyx_v_wnd->render_window->getSize());

  /* "pysfml261.pyx":2281
 * 		cdef Vector2i wnd_pos = wnd.render_window.getPosition()
 * 		cdef Vector2u wnd_size = wnd.render_window.getSize()
 * 		cdef FloatRect wnd_rect = FloatRect(wnd_pos.x, wnd_pos.y, wnd_size.x, wnd_size.y)             # <<<<<<<<<<<<<<
 * 		cdef Vector2i mouse_pos = sf_Mouse.getPosition()
 * 		if not wnd_rect.contains(mouse_pos.x, mouse_pos.y):
*/
  __pyx_v_wnd_rect = sf::FloatRect(__pyx_v_wnd_pos.x, __pyx_v_wnd_pos.y, __pyx_v_wnd_size.x, __pyx_v_wnd_size.y);

  /* "pysfml261.pyx":2282
 * 		cdef Vector2u wnd_size = wnd.render_window.getSize()
 * 		cdef FloatRect wnd_rect = FloatRect(wnd_pos.x, wnd_pos.y, wnd_size.x, wnd_size.y)
 * 		cdef Vector2i mouse_pos = sf_Mouse.getPosition()             # <<<<<<<<<<<<<<
 * 		if not wnd_rect.contains(mouse_pos.x, mouse_pos.y):
 * 			return (0, 0)
*/
  __pyx_v_mouse_pos = ((sf::Vector2i)sf::Mouse::getPosition());

  /* "pysfml261.pyx":2283
 * 		cdef FloatRect wnd_rect = FloatRect(wnd_pos.x, wnd_pos.y, wnd_size.x, wnd_size.y)
 * 		cdef Vector2i mouse_pos = sf_Mouse.getPosition()
 * 		if not wnd_rect.contains(mouse_pos.x, mouse_pos.y):             # <<<<<<<<<<<<<<
 * 			return (0, 0)
 * 		cdef int x = mouse_pos.x - wnd_pos.x
*/
  __pyx_t_1 = (!__pyx_v_wnd_rect.contains(__pyx_v_mouse_pos.x, __pyx_v_mouse_pos.y));
  if (__pyx_t_1) {

    /* "pysfml261.pyx":2284
 * 		cdef Vector2i mouse_pos = sf_Mouse.getPosition()
 * 		if not wnd_rect.contains(mouse_pos.x, mouse_pos.y):
 * 			return (0, 0)             # <<<<<<<<<<<<<<
 * 		cdef int x = mouse_pos.x - wnd_pos.x
 * 		cdef int y = mouse_pos.y - wnd_pos.y
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_tuple[0]);
    __pyx_r = __pyx_mstate_global->__pyx_tuple[0];
    goto __pyx_L0;

    /* "pysfml261.pyx":2283
 * 		cdef FloatRect wnd_rect = FloatRect(wnd_pos.x, wnd_pos.y, wnd_size.x, wnd_size.y)
 * 		cdef Vector2i mouse_pos = sf_Mouse.getPosition()
 * 		if not wnd_rect.contains(mouse_pos.x, mouse_pos.y):             # <<<<<<<<<<<<<<
 * 			return (0, 0)
 * 		cdef int x = mouse_pos.x - wnd_pos.x
*/
  }

  /* "pysfml261.pyx":2285
 * 		if not wnd_rect.contains(mouse_pos.x, mouse_pos.y):
 * 			return (0, 0)
 * 		cdef int x = mouse_pos.x - wnd_pos.x             # <<<<<<<<<<<<<<
 * 		cdef int y = mouse_pos.y - wnd_pos.y
 * 		return (x, y)
*/
  __pyx_v_x = (__pyx_v_mouse_pos.x - __pyx_v_wnd_pos.x);

  /* "pysfml261.pyx":2286
 * 			return (0, 0)
 * 		cdef int x = mouse_pos.x - wnd_pos.x
 * 		cdef int y = mouse_pos.y - wnd_pos.y             # <<<<<<<<<<<<<<
 * 		return (x, y)
 * 
*/
  __pyx_v_y = (__pyx_v_mouse_pos.y - __pyx_v_wnd_pos.y);

  /* "pysfml261.pyx":2287
 * 		cdef int x = mouse_pos.x - wnd_pos.x
 * 		cdef int y = mouse_pos.y - wnd_pos.y
 * 		return (x, y)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyLong_From_int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyLong_From_int(__pyx_v_y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2) != (0)) __PYX_ERR(0, 2287, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3) != (0)) __PYX_ERR(0, 2287, __pyx_L1_error);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2277
 * 		return (<int>pos.x, <int>pos.y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def relative_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i wnd_pos = wnd.render_window.getPosition()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pysfml261.sfMouse.relative_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2289
 * 		return (x, y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def relative_to_rect(sfFloatRect rect) -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMouse_5relative_to_rect(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMouse_5relative_to_rect = {"relative_to_rect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_5relative_to_rect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMouse_5relative_to_rect(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("relative_to_rect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_rect,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2289, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2289, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "relative_to_rect", 0) < 0) __PYX_ERR(0, 2289, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("relative_to_rect", 1, 1, 1, i); __PYX_ERR(0, 2289, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2289, __pyx_L3_error)
    }
    __pyx_v_rect = ((struct __pyx_obj_9pysfml261_sfFloatRect *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("relative_to_rect", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2289, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMouse.relative_to_rect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, 1, "rect", 0))) __PYX_ERR(0, 2290, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_7sfMouse_4relative_to_rect(__pyx_v_rect);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMouse_4relative_to_rect(struct __pyx_obj_9pysfml261_sfFloatRect *__pyx_v_rect) {
  sf::Vector2i __pyx_v_pos;
  int __pyx_v_x;
  int __pyx_v_y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("relative_to_rect", 0);

  /* "pysfml261.pyx":2291
 * 	@staticmethod
 * 	def relative_to_rect(sfFloatRect rect) -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()             # <<<<<<<<<<<<<<
 * 		if not rect.rect.contains(pos.x, pos.y):
 * 			return (0, 0)
*/
  __pyx_v_pos = ((sf::Vector2i)sf::Mouse::getPosition());

  /* "pysfml261.pyx":2292
 * 	def relative_to_rect(sfFloatRect rect) -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
 * 		if not rect.rect.contains(pos.x, pos.y):             # <<<<<<<<<<<<<<
 * 			return (0, 0)
 * 		cdef int x = pos.x - rect.left
*/
  __pyx_t_1 = (!__pyx_v_rect->rect->contains(__pyx_v_pos.x, __pyx_v_pos.y));
  if (__pyx_t_1) {

    /* "pysfml261.pyx":2293
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
 * 		if not rect.rect.contains(pos.x, pos.y):
 * 			return (0, 0)             # <<<<<<<<<<<<<<
 * 		cdef int x = pos.x - rect.left
 * 		cdef int y = pos.y - rect.top
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_tuple[0]);
    __pyx_r = __pyx_mstate_global->__pyx_tuple[0];
    goto __pyx_L0;

    /* "pysfml261.pyx":2292
 * 	def relative_to_rect(sfFloatRect rect) -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
 * 		if not rect.rect.contains(pos.x, pos.y):             # <<<<<<<<<<<<<<
 * 			return (0, 0)
 * 		cdef int x = pos.x - rect.left
*/
  }

  /* "pysfml261.pyx":2294
 * 		if not rect.rect.contains(pos.x, pos.y):
 * 			return (0, 0)
 * 		cdef int x = pos.x - rect.left             # <<<<<<<<<<<<<<
 * 		cdef int y = pos.y - rect.top
 * 		return (x, y)
*/
  __pyx_t_2 = __Pyx_PyLong_From_int(__pyx_v_pos.x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rect), __pyx_mstate_global->__pyx_n_u_left); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyNumber_Subtract(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyLong_As_int(__pyx_t_4); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2294, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_x = __pyx_t_5;

  /* "pysfml261.pyx":2295
 * 			return (0, 0)
 * 		cdef int x = pos.x - rect.left
 * 		cdef int y = pos.y - rect.top             # <<<<<<<<<<<<<<
 * 		return (x, y)
 * 
*/
  __pyx_t_4 = __Pyx_PyLong_From_int(__pyx_v_pos.y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rect), __pyx_mstate_global->__pyx_n_u_top); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Subtract(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyLong_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2295, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_y = __pyx_t_5;

  /* "pysfml261.pyx":2296
 * 		cdef int x = pos.x - rect.left
 * 		cdef int y = pos.y - rect.top
 * 		return (x, y)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyLong_From_int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyLong_From_int(__pyx_v_y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2) != (0)) __PYX_ERR(0, 2296, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3) != (0)) __PYX_ERR(0, 2296, __pyx_L1_error);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2289
 * 		return (x, y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def relative_to_rect(sfFloatRect rect) -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pysfml261.sfMouse.relative_to_rect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2298
 * 		return (x, y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_position() -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMouse_7get_position(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMouse_7get_position = {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_7get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMouse_7get_position(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_position (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("get_position", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("get_position", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMouse_6get_position();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMouse_6get_position(void) {
  sf::Vector2i __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_position", 0);

  /* "pysfml261.pyx":2300
 * 	@staticmethod
 * 	def get_position() -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()             # <<<<<<<<<<<<<<
 * 		return (pos.x, pos.y)
 * 
*/
  __pyx_v_pos = ((sf::Vector2i)sf::Mouse::getPosition());

  /* "pysfml261.pyx":2301
 * 	def get_position() -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
 * 		return (pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyLong_From_int(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyLong_From_int(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1) != (0)) __PYX_ERR(0, 2301, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2) != (0)) __PYX_ERR(0, 2301, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2298
 * 		return (x, y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_position() -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.sfMouse.get_position", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2303
 * 		return (pos.x, pos.y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_button_pressed(int button) -> bool:
 * 		return sf_Mouse.isButtonPressed(<Button>button)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMouse_9is_button_pressed(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMouse_9is_button_pressed = {"is_button_pressed", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_9is_button_pressed, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMouse_9is_button_pressed(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_button;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_button_pressed (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_button,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2303, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2303, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "is_button_pressed", 0) < 0) __PYX_ERR(0, 2303, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("is_button_pressed", 1, 1, 1, i); __PYX_ERR(0, 2303, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2303, __pyx_L3_error)
    }
    __pyx_v_button = __Pyx_PyLong_As_int(values[0]); if (unlikely((__pyx_v_button == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2304, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_button_pressed", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 2303, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMouse.is_button_pressed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMouse_8is_button_pressed(__pyx_v_button);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMouse_8is_button_pressed(int __pyx_v_button) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_button_pressed", 0);

  /* "pysfml261.pyx":2305
 * 	@staticmethod
 * 	def is_button_pressed(int button) -> bool:
 * 		return sf_Mouse.isButtonPressed(<Button>button)             # <<<<<<<<<<<<<<
 * 
 * 
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(sf::Mouse::isButtonPressed(((enum sf::Mouse::Button)__pyx_v_button))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2303
 * 		return (pos.x, pos.y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_button_pressed(int button) -> bool:
 * 		return sf_Mouse.isButtonPressed(<Button>button)
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfMouse.is_button_pressed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMouse_11__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMouse_11__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_11__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMouse_11__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_7sfMouse_10__reduce_cython__(((struct __pyx_obj_9pysfml261_sfMouse *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMouse_10__reduce_cython__(struct __pyx_obj_9pysfml261_sfMouse *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
*/
  __Pyx_INCREF(__pyx_mstate_global->__pyx_empty_tuple);
  __pyx_v_state = __pyx_mstate_global->__pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
*/
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_mstate_global->__pyx_n_u_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
*/
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
*/
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict) != (0)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
*/
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
*/
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, None), state
*/
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, None), state
 *     else:
*/
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, state)
*/
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_sfMouse); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self)))) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_mstate_global->__pyx_int_238750788) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state) != (0)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, None), state
 *     else:
*/
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_sfMouse__set_state(self, __pyx_state)
*/
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_sfMouse); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self)))) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_mstate_global->__pyx_int_238750788) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1) != (0)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pysfml261.sfMouse.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_sfMouse__set_state(self, __pyx_state)
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7sfMouse_13__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7sfMouse_13__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_13__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7sfMouse_13__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 16, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 16, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 16, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 16, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 16, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.sfMouse.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_7sfMouse_12__setstate_cython__(((struct __pyx_obj_9pysfml261_sfMouse *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_7sfMouse_12__setstate_cython__(struct __pyx_obj_9pysfml261_sfMouse *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_sfMouse__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
*/
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9pysfml261___pyx_unpickle_sfMouse__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_sfMouse__set_state(self, __pyx_state)
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.sfMouse.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2315
 * 	cdef float distance_y
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float left_ = 0,
 * 		float top_ = 0,
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8Camera2D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9pysfml261_8Camera2D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_left_;
  float __pyx_v_top_;
  float __pyx_v_distance_x_;
  float __pyx_v_distance_y_;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_left_2,&__pyx_mstate_global->__pyx_n_u_top_2,&__pyx_mstate_global->__pyx_n_u_distance_x_2,&__pyx_mstate_global->__pyx_n_u_distance_y_2,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_VARARGS(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2315, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 2315, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2315, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2315, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2315, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__cinit__", 0) < 0) __PYX_ERR(0, 2315, __pyx_L3_error)
    } else {
      switch (__pyx_nargs) {
        case  4:
        values[3] = __Pyx_ArgRef_VARARGS(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 2315, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_VARARGS(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2315, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_VARARGS(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2315, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_VARARGS(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2315, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_left_ = __Pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_left_ == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2316, __pyx_L3_error)
    } else {
      __pyx_v_left_ = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_top_ = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_top_ == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2317, __pyx_L3_error)
    } else {
      __pyx_v_top_ = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_distance_x_ = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_distance_x_ == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2318, __pyx_L3_error)
    } else {
      __pyx_v_distance_x_ = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_distance_y_ = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_distance_y_ == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2319, __pyx_L3_error)
    } else {
      __pyx_v_distance_y_ = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 2315, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.Camera2D.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D___cinit__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self), __pyx_v_left_, __pyx_v_top_, __pyx_v_distance_x_, __pyx_v_distance_y_);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8Camera2D___cinit__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_left_, float __pyx_v_top_, float __pyx_v_distance_x_, float __pyx_v_distance_y_) {
  int __pyx_r;

  /* "pysfml261.pyx":2320
 * 		float distance_x_ = 0,
 * 		float distance_y_ = 0):
 * 		self.left = left_             # <<<<<<<<<<<<<<
 * 		self.top = top_
 * 		self.distance_x = distance_x_
*/
  __pyx_v_self->left = __pyx_v_left_;

  /* "pysfml261.pyx":2321
 * 		float distance_y_ = 0):
 * 		self.left = left_
 * 		self.top = top_             # <<<<<<<<<<<<<<
 * 		self.distance_x = distance_x_
 * 		self.distance_y = distance_y_
*/
  __pyx_v_self->top = __pyx_v_top_;

  /* "pysfml261.pyx":2322
 * 		self.left = left_
 * 		self.top = top_
 * 		self.distance_x = distance_x_             # <<<<<<<<<<<<<<
 * 		self.distance_y = distance_y_
 * 
*/
  __pyx_v_self->distance_x = __pyx_v_distance_x_;

  /* "pysfml261.pyx":2323
 * 		self.top = top_
 * 		self.distance_x = distance_x_
 * 		self.distance_y = distance_y_             # <<<<<<<<<<<<<<
 * 
 * 	def shift(self,
*/
  __pyx_v_self->distance_y = __pyx_v_distance_y_;

  /* "pysfml261.pyx":2315
 * 	cdef float distance_y
 * 
 * 	def __cinit__(self,             # <<<<<<<<<<<<<<
 * 		float left_ = 0,
 * 		float top_ = 0,
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":2325
 * 		self.distance_y = distance_y_
 * 
 * 	def shift(self,             # <<<<<<<<<<<<<<
 * 		list[sfSprite] sprites,
 * 		float pivot_x = 0,
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Camera2D_3shift(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8Camera2D_3shift = {"shift", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Camera2D_3shift, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8Camera2D_3shift(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_sprites = 0;
  float __pyx_v_pivot_x;
  float __pyx_v_pivot_y;
  float __pyx_v_dx;
  float __pyx_v_dy;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("shift (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_sprites,&__pyx_mstate_global->__pyx_n_u_pivot_x,&__pyx_mstate_global->__pyx_n_u_pivot_y,&__pyx_mstate_global->__pyx_n_u_dx,&__pyx_mstate_global->__pyx_n_u_dy,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(0, 2325, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "shift", 0) < 0) __PYX_ERR(0, 2325, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("shift", 0, 1, 5, i); __PYX_ERR(0, 2325, __pyx_L3_error) }
      }
    } else {
      switch (__pyx_nargs) {
        case  5:
        values[4] = __Pyx_ArgRef_FASTCALL(__pyx_args, 4);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[4])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  4:
        values[3] = __Pyx_ArgRef_FASTCALL(__pyx_args, 3);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[3])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(0, 2325, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(0, 2325, __pyx_L3_error)
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sprites = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_pivot_x = __Pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_pivot_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2327, __pyx_L3_error)
    } else {
      __pyx_v_pivot_x = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_pivot_y = __Pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_pivot_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2328, __pyx_L3_error)
    } else {
      __pyx_v_pivot_y = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_dx = __Pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_dx == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2329, __pyx_L3_error)
    } else {
      __pyx_v_dx = ((float)0.0);
    }
    if (values[4]) {
      __pyx_v_dy = __Pyx_PyFloat_AsFloat(values[4]); if (unlikely((__pyx_v_dy == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2330, __pyx_L3_error)
    } else {
      __pyx_v_dy = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("shift", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 2325, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.Camera2D.shift", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sprites), (&PyList_Type), 1, "sprites", 1))) __PYX_ERR(0, 2326, __pyx_L1_error)
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_2shift(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self), __pyx_v_sprites, __pyx_v_pivot_x, __pyx_v_pivot_y, __pyx_v_dx, __pyx_v_dy);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  goto __pyx_L7_cleaned_up;
  __pyx_L0:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __pyx_L7_cleaned_up:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Camera2D_2shift(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, PyObject *__pyx_v_sprites, float __pyx_v_pivot_x, float __pyx_v_pivot_y, float __pyx_v_dx, float __pyx_v_dy) {
  float __pyx_v_lengthX;
  float __pyx_v_lengthY;
  float __pyx_v_offsetX;
  float __pyx_v_offsetY;
  PyObject *__pyx_7genexpr__pyx_v_sprite = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  size_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("shift", 0);

  /* "pysfml261.pyx":2331
 * 		float dx = 0,
 * 		float dy = 0):
 * 		cdef float lengthX = fabs(self.left - pivot_x)             # <<<<<<<<<<<<<<
 * 		cdef float lengthY = fabs(self.top - pivot_y)
 * 		cdef float offsetX = self.distance_x - lengthX + dx
*/
  __pyx_v_lengthX = fabs((__pyx_v_self->left - __pyx_v_pivot_x));

  /* "pysfml261.pyx":2332
 * 		float dy = 0):
 * 		cdef float lengthX = fabs(self.left - pivot_x)
 * 		cdef float lengthY = fabs(self.top - pivot_y)             # <<<<<<<<<<<<<<
 * 		cdef float offsetX = self.distance_x - lengthX + dx
 * 		cdef float offsetY = self.distance_y - lengthY + dy
*/
  __pyx_v_lengthY = fabs((__pyx_v_self->top - __pyx_v_pivot_y));

  /* "pysfml261.pyx":2333
 * 		cdef float lengthX = fabs(self.left - pivot_x)
 * 		cdef float lengthY = fabs(self.top - pivot_y)
 * 		cdef float offsetX = self.distance_x - lengthX + dx             # <<<<<<<<<<<<<<
 * 		cdef float offsetY = self.distance_y - lengthY + dy
 * 		[sprite.sprite.move(offsetX, offsetY) for sprite in sprites]
*/
  __pyx_v_offsetX = ((__pyx_v_self->distance_x - __pyx_v_lengthX) + __pyx_v_dx);

  /* "pysfml261.pyx":2334
 * 		cdef float lengthY = fabs(self.top - pivot_y)
 * 		cdef float offsetX = self.distance_x - lengthX + dx
 * 		cdef float offsetY = self.distance_y - lengthY + dy             # <<<<<<<<<<<<<<
 * 		[sprite.sprite.move(offsetX, offsetY) for sprite in sprites]
 * 
*/
  __pyx_v_offsetY = ((__pyx_v_self->distance_y - __pyx_v_lengthY) + __pyx_v_dy);

  /* "pysfml261.pyx":2335
 * 		cdef float offsetX = self.distance_x - lengthX + dx
 * 		cdef float offsetY = self.distance_y - lengthY + dy
 * 		[sprite.sprite.move(offsetX, offsetY) for sprite in sprites]             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2335, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__pyx_v_sprites == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 2335, __pyx_L5_error)
    }
    __pyx_t_2 = __pyx_v_sprites; __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = 0;
    for (;;) {
      {
        Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_2);
        #if !CYTHON_ASSUME_SAFE_SIZE
        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 2335, __pyx_L5_error)
        #endif
        if (__pyx_t_3 >= __pyx_temp) break;
      }
      __pyx_t_4 = __Pyx_PyList_GetItemRef(__pyx_t_2, __pyx_t_3);
      ++__pyx_t_3;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2335, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_7genexpr__pyx_v_sprite, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_7genexpr__pyx_v_sprite, __pyx_mstate_global->__pyx_n_u_sprite); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2335, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __pyx_t_6;
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_7 = PyFloat_FromDouble(__pyx_v_offsetX); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2335, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_offsetY); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2335, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = 0;
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_7, __pyx_t_8};
        __pyx_t_4 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_move, __pyx_callargs+__pyx_t_9, (3-__pyx_t_9) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2335, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_4);
      }
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 2335, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_sprite); __pyx_7genexpr__pyx_v_sprite = 0;
    goto __pyx_L9_exit_scope;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_sprite); __pyx_7genexpr__pyx_v_sprite = 0;
    goto __pyx_L1_error;
    __pyx_L9_exit_scope:;
  } /* exit inner scope */
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pysfml261.pyx":2325
 * 		self.distance_y = distance_y_
 * 
 * 	def shift(self,             # <<<<<<<<<<<<<<
 * 		list[sfSprite] sprites,
 * 		float pivot_x = 0,
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pysfml261.Camera2D.shift", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_7genexpr__pyx_v_sprite);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2337
 * 		[sprite.sprite.move(offsetX, offsetY) for sprite in sprites]
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pleft(self) -> float:
 * 		return self.left
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Camera2D_5pleft_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8Camera2D_5pleft_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_5pleft___get__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Camera2D_5pleft___get__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":2339
 * 	@property
 * 	def pleft(self) -> float:
 * 		return self.left             # <<<<<<<<<<<<<<
 * 
 * 	@pleft.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->left); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2337
 * 		[sprite.sprite.move(offsetX, offsetY) for sprite in sprites]
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def pleft(self) -> float:
 * 		return self.left
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.Camera2D.pleft.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2341
 * 		return self.left
 * 
 * 	@pleft.setter             # <<<<<<<<<<<<<<
 * 	def pleft(self, float left) -> None:
 * 		self.left = left
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8Camera2D_5pleft_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_left); /*proto*/
static int __pyx_pw_9pysfml261_8Camera2D_5pleft_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_left) {
  float __pyx_v_left;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_left); {
    __pyx_v_left = __Pyx_PyFloat_AsFloat(__pyx_arg_left); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2342, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.Camera2D.pleft.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_5pleft_2__set__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self), ((float)__pyx_v_left));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8Camera2D_5pleft_2__set__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_left) {
  int __pyx_r;

  /* "pysfml261.pyx":2343
 * 	@pleft.setter
 * 	def pleft(self, float left) -> None:
 * 		self.left = left             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->left = __pyx_v_left;

  /* "pysfml261.pyx":2341
 * 		return self.left
 * 
 * 	@pleft.setter             # <<<<<<<<<<<<<<
 * 	def pleft(self, float left) -> None:
 * 		self.left = left
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":2345
 * 		self.left = left
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def ptop(self) -> float:
 * 		return self.top
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Camera2D_4ptop_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8Camera2D_4ptop_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_4ptop___get__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Camera2D_4ptop___get__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":2347
 * 	@property
 * 	def ptop(self) -> float:
 * 		return self.top             # <<<<<<<<<<<<<<
 * 
 * 	@ptop.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->top); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2345
 * 		self.left = left
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def ptop(self) -> float:
 * 		return self.top
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.Camera2D.ptop.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2349
 * 		return self.top
 * 
 * 	@ptop.setter             # <<<<<<<<<<<<<<
 * 	def ptop(self, float top) -> None:
 * 		self.top = top
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8Camera2D_4ptop_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_top); /*proto*/
static int __pyx_pw_9pysfml261_8Camera2D_4ptop_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_top) {
  float __pyx_v_top;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_top); {
    __pyx_v_top = __Pyx_PyFloat_AsFloat(__pyx_arg_top); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2350, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.Camera2D.ptop.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_4ptop_2__set__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self), ((float)__pyx_v_top));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8Camera2D_4ptop_2__set__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_top) {
  int __pyx_r;

  /* "pysfml261.pyx":2351
 * 	@ptop.setter
 * 	def ptop(self, float top) -> None:
 * 		self.top = top             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->top = __pyx_v_top;

  /* "pysfml261.pyx":2349
 * 		return self.top
 * 
 * 	@ptop.setter             # <<<<<<<<<<<<<<
 * 	def ptop(self, float top) -> None:
 * 		self.top = top
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":2353
 * 		self.top = top
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def dist_x(self) -> float:
 * 		return self.distance_x
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Camera2D_6dist_x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8Camera2D_6dist_x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_6dist_x___get__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Camera2D_6dist_x___get__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":2355
 * 	@property
 * 	def dist_x(self) -> float:
 * 		return self.distance_x             # <<<<<<<<<<<<<<
 * 
 * 	@dist_x.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->distance_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2353
 * 		self.top = top
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def dist_x(self) -> float:
 * 		return self.distance_x
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.Camera2D.dist_x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2357
 * 		return self.distance_x
 * 
 * 	@dist_x.setter             # <<<<<<<<<<<<<<
 * 	def dist_x(self, float distance) -> None:
 * 		self.distance_x = distance
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8Camera2D_6dist_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_distance); /*proto*/
static int __pyx_pw_9pysfml261_8Camera2D_6dist_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_distance) {
  float __pyx_v_distance;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_distance); {
    __pyx_v_distance = __Pyx_PyFloat_AsFloat(__pyx_arg_distance); if (unlikely((__pyx_v_distance == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2358, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.Camera2D.dist_x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_6dist_x_2__set__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self), ((float)__pyx_v_distance));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8Camera2D_6dist_x_2__set__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_distance) {
  int __pyx_r;

  /* "pysfml261.pyx":2359
 * 	@dist_x.setter
 * 	def dist_x(self, float distance) -> None:
 * 		self.distance_x = distance             # <<<<<<<<<<<<<<
 * 
 * 	@property
*/
  __pyx_v_self->distance_x = __pyx_v_distance;

  /* "pysfml261.pyx":2357
 * 		return self.distance_x
 * 
 * 	@dist_x.setter             # <<<<<<<<<<<<<<
 * 	def dist_x(self, float distance) -> None:
 * 		self.distance_x = distance
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pysfml261.pyx":2361
 * 		self.distance_x = distance
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def dist_y(self) -> float:
 * 		return self.distance_y
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Camera2D_6dist_y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9pysfml261_8Camera2D_6dist_y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_6dist_y___get__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Camera2D_6dist_y___get__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pysfml261.pyx":2363
 * 	@property
 * 	def dist_y(self) -> float:
 * 		return self.distance_y             # <<<<<<<<<<<<<<
 * 
 * 	@dist_y.setter
*/
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->distance_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pysfml261.pyx":2361
 * 		self.distance_x = distance
 * 
 * 	@property             # <<<<<<<<<<<<<<
 * 	def dist_y(self) -> float:
 * 		return self.distance_y
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pysfml261.Camera2D.dist_y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pysfml261.pyx":2365
 * 		return self.distance_y
 * 
 * 	@dist_y.setter             # <<<<<<<<<<<<<<
 * 	def dist_y(self, float distance) -> None:
 * 		self.distance_y = distance
*/

/* Python wrapper */
static int __pyx_pw_9pysfml261_8Camera2D_6dist_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_distance); /*proto*/
static int __pyx_pw_9pysfml261_8Camera2D_6dist_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_distance) {
  float __pyx_v_distance;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  assert(__pyx_arg_distance); {
    __pyx_v_distance = __Pyx_PyFloat_AsFloat(__pyx_arg_distance); if (unlikely((__pyx_v_distance == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 2366, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pysfml261.Camera2D.dist_y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_6dist_y_2__set__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self), ((float)__pyx_v_distance));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9pysfml261_8Camera2D_6dist_y_2__set__(struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, float __pyx_v_distance) {
  int __pyx_r;

  /* "pysfml261.pyx":2367
 * 	@dist_y.setter
 * 	def dist_y(self, float distance) -> None:
 * 		self.distance_y = distance             # <<<<<<<<<<<<<<
*/
  __pyx_v_self->distance_y = __pyx_v_distance;

  /* "pysfml261.pyx":2365
 * 		return self.distance_y
 * 
 * 	@dist_y.setter             # <<<<<<<<<<<<<<
 * 	def dist_y(self, float distance) -> None:
 * 		self.distance_y = distance
*/

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Camera2D_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8Camera2D_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Camera2D_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8Camera2D_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) { __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL; }
  const Py_ssize_t __pyx_kwds_len = unlikely(__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
  if (unlikely(__pyx_kwds_len < 0)) return NULL;
  if (unlikely(__pyx_kwds_len > 0)) {__Pyx_RejectKeywords("__reduce_cython__", __pyx_kwds); return NULL;}
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_4__reduce_cython__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Camera2D_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.Camera2D.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_8Camera2D_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_8Camera2D_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Camera2D_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_8Camera2D_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__setstate_cython__", 0) < 0) __PYX_ERR(1, 3, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 1; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, i); __PYX_ERR(1, 3, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 3, __pyx_L3_error)
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.Camera2D.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8Camera2D_6__setstate_cython__(((struct __pyx_obj_9pysfml261_Camera2D *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8Camera2D_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9pysfml261_Camera2D *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
*/
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_mstate_global->__pyx_kp_u_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pysfml261.Camera2D.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_sfKeyboard(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_5__pyx_unpickle_sfKeyboard(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_5__pyx_unpickle_sfKeyboard = {"__pyx_unpickle_sfKeyboard", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_5__pyx_unpickle_sfKeyboard, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_5__pyx_unpickle_sfKeyboard(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_sfKeyboard (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_type,&__pyx_mstate_global->__pyx_n_u_pyx_checksum,&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 1, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__pyx_unpickle_sfKeyboard", 0) < 0) __PYX_ERR(1, 1, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 3; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_sfKeyboard", 1, 3, 3, i); __PYX_ERR(1, 1, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 1, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(1, 1, __pyx_L3_error)
      values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(1, 1, __pyx_L3_error)
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyLong_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_sfKeyboard", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_sfKeyboard", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_4__pyx_unpickle_sfKeyboard(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_4__pyx_unpickle_sfKeyboard(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_sfKeyboard", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
*/
  __pyx_t_1 = __Pyx_PyLong_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_mstate_global->__pyx_tuple[1], Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = sfKeyboard.__new__(__pyx_type)
*/
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_n_u_PickleError);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_n_u_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_mstate_global->__pyx_n_u_PickleError) != (0)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_mstate_global->__pyx_n_u_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = sfKeyboard.__new__(__pyx_type)
 *     if __pyx_state is not None:
*/
    __pyx_t_3 = __Pyx_PyLong_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyUnicode_Format(__pyx_mstate_global->__pyx_kp_u_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
*/
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = sfKeyboard.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_sfKeyboard__set_state(<sfKeyboard> __pyx_result, __pyx_state)
*/
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_4 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_new, __pyx_callargs+__pyx_t_4, (2-__pyx_t_4) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = sfKeyboard.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_sfKeyboard__set_state(<sfKeyboard> __pyx_result, __pyx_state)
 *     return __pyx_result
*/
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = sfKeyboard.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_sfKeyboard__set_state(<sfKeyboard> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_sfKeyboard__set_state(sfKeyboard __pyx_result, tuple __pyx_state):
*/
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_9pysfml261___pyx_unpickle_sfKeyboard__set_state(((struct __pyx_obj_9pysfml261_sfKeyboard *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = sfKeyboard.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_sfKeyboard__set_state(<sfKeyboard> __pyx_result, __pyx_state)
 *     return __pyx_result
*/
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_sfKeyboard__set_state(<sfKeyboard> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_sfKeyboard__set_state(sfKeyboard __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
*/
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_sfKeyboard(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_sfKeyboard", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_sfKeyboard__set_state(<sfKeyboard> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_sfKeyboard__set_state(sfKeyboard __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/

static PyObject *__pyx_f_9pysfml261___pyx_unpickle_sfKeyboard__set_state(struct __pyx_obj_9pysfml261_sfKeyboard *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_sfKeyboard__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_sfKeyboard__set_state(sfKeyboard __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_mstate_global->__pyx_n_u_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_sfKeyboard__set_state(sfKeyboard __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
*/
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_mstate_global->__pyx_n_u_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __pyx_t_6;
    __Pyx_INCREF(__pyx_t_5);
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyLong_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = 0;
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
      __pyx_t_4 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_update, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_sfKeyboard__set_state(sfKeyboard __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_sfKeyboard__set_state(<sfKeyboard> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_sfKeyboard__set_state(sfKeyboard __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_sfKeyboard__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_TransformSfSprite(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_7__pyx_unpickle_TransformSfSprite(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_7__pyx_unpickle_TransformSfSprite = {"__pyx_unpickle_TransformSfSprite", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7__pyx_unpickle_TransformSfSprite, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_7__pyx_unpickle_TransformSfSprite(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_TransformSfSprite (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_type,&__pyx_mstate_global->__pyx_n_u_pyx_checksum,&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 1, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__pyx_unpickle_TransformSfSprite", 0) < 0) __PYX_ERR(1, 1, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 3; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_TransformSfSprite", 1, 3, 3, i); __PYX_ERR(1, 1, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 1, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(1, 1, __pyx_L3_error)
      values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(1, 1, __pyx_L3_error)
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyLong_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_TransformSfSprite", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_TransformSfSprite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_6__pyx_unpickle_TransformSfSprite(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_6__pyx_unpickle_TransformSfSprite(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_TransformSfSprite", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
*/
  __pyx_t_1 = __Pyx_PyLong_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_mstate_global->__pyx_tuple[1], Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = TransformSfSprite.__new__(__pyx_type)
*/
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_n_u_PickleError);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_n_u_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_mstate_global->__pyx_n_u_PickleError) != (0)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_mstate_global->__pyx_n_u_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = TransformSfSprite.__new__(__pyx_type)
 *     if __pyx_state is not None:
*/
    __pyx_t_3 = __Pyx_PyLong_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyUnicode_Format(__pyx_mstate_global->__pyx_kp_u_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
*/
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = TransformSfSprite.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_TransformSfSprite__set_state(<TransformSfSprite> __pyx_result, __pyx_state)
*/
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_4 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_new, __pyx_callargs+__pyx_t_4, (2-__pyx_t_4) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = TransformSfSprite.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_TransformSfSprite__set_state(<TransformSfSprite> __pyx_result, __pyx_state)
 *     return __pyx_result
*/
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = TransformSfSprite.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_TransformSfSprite__set_state(<TransformSfSprite> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_TransformSfSprite__set_state(TransformSfSprite __pyx_result, tuple __pyx_state):
*/
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_9pysfml261___pyx_unpickle_TransformSfSprite__set_state(((struct __pyx_obj_9pysfml261_TransformSfSprite *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = TransformSfSprite.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_TransformSfSprite__set_state(<TransformSfSprite> __pyx_result, __pyx_state)
 *     return __pyx_result
*/
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_TransformSfSprite__set_state(<TransformSfSprite> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_TransformSfSprite__set_state(TransformSfSprite __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
*/
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_TransformSfSprite(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_TransformSfSprite", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_TransformSfSprite__set_state(<TransformSfSprite> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_TransformSfSprite__set_state(TransformSfSprite __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/

static PyObject *__pyx_f_9pysfml261___pyx_unpickle_TransformSfSprite__set_state(struct __pyx_obj_9pysfml261_TransformSfSprite *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_TransformSfSprite__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_TransformSfSprite__set_state(TransformSfSprite __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_mstate_global->__pyx_n_u_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_TransformSfSprite__set_state(TransformSfSprite __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
*/
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_mstate_global->__pyx_n_u_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __pyx_t_6;
    __Pyx_INCREF(__pyx_t_5);
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyLong_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = 0;
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
      __pyx_t_4 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_update, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_TransformSfSprite__set_state(TransformSfSprite __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_TransformSfSprite__set_state(<TransformSfSprite> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_TransformSfSprite__set_state(TransformSfSprite __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_TransformSfSprite__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_sfMouse(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
*/

/* Python wrapper */
static PyObject *__pyx_pw_9pysfml261_9__pyx_unpickle_sfMouse(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9pysfml261_9__pyx_unpickle_sfMouse = {"__pyx_unpickle_sfMouse", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9__pyx_unpickle_sfMouse, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9pysfml261_9__pyx_unpickle_sfMouse(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_sfMouse (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_SIZE
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject ** const __pyx_pyargnames[] = {&__pyx_mstate_global->__pyx_n_u_pyx_type,&__pyx_mstate_global->__pyx_n_u_pyx_checksum,&__pyx_mstate_global->__pyx_n_u_pyx_state,0};
    const Py_ssize_t __pyx_kwds_len = (__pyx_kwds) ? __Pyx_NumKwargs_FASTCALL(__pyx_kwds) : 0;
    if (unlikely(__pyx_kwds_len) < 0) __PYX_ERR(1, 1, __pyx_L3_error)
    if (__pyx_kwds_len > 0) {
      switch (__pyx_nargs) {
        case  3:
        values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  2:
        values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  1:
        values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
        if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 1, __pyx_L3_error)
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      const Py_ssize_t kwd_pos_args = __pyx_nargs;
      if (__Pyx_ParseKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values, kwd_pos_args, __pyx_kwds_len, "__pyx_unpickle_sfMouse", 0) < 0) __PYX_ERR(1, 1, __pyx_L3_error)
      for (Py_ssize_t i = __pyx_nargs; i < 3; i++) {
        if (unlikely(!values[i])) { __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_sfMouse", 1, 3, 3, i); __PYX_ERR(1, 1, __pyx_L3_error) }
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_ArgRef_FASTCALL(__pyx_args, 0);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[0])) __PYX_ERR(1, 1, __pyx_L3_error)
      values[1] = __Pyx_ArgRef_FASTCALL(__pyx_args, 1);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[1])) __PYX_ERR(1, 1, __pyx_L3_error)
      values[2] = __Pyx_ArgRef_FASTCALL(__pyx_args, 2);
      if (!CYTHON_ASSUME_SAFE_MACROS && unlikely(!values[2])) __PYX_ERR(1, 1, __pyx_L3_error)
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyLong_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_sfMouse", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_sfMouse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9pysfml261_8__pyx_unpickle_sfMouse(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  for (Py_ssize_t __pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
    Py_XDECREF(values[__pyx_temp]);
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9pysfml261_8__pyx_unpickle_sfMouse(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_sfMouse", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
*/
  __pyx_t_1 = __Pyx_PyLong_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_mstate_global->__pyx_tuple[1], Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = sfMouse.__new__(__pyx_type)
*/
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_mstate_global->__pyx_n_u_PickleError);
    __Pyx_GIVEREF(__pyx_mstate_global->__pyx_n_u_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_mstate_global->__pyx_n_u_PickleError) != (0)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_mstate_global->__pyx_n_u_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = sfMouse.__new__(__pyx_type)
 *     if __pyx_state is not None:
*/
    __pyx_t_3 = __Pyx_PyLong_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyUnicode_Format(__pyx_mstate_global->__pyx_kp_u_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
*/
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = sfMouse.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_sfMouse__set_state(<sfMouse> __pyx_result, __pyx_state)
*/
  __pyx_t_3 = ((PyObject *)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_4 = 0;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_new, __pyx_callargs+__pyx_t_4, (2-__pyx_t_4) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = sfMouse.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_sfMouse__set_state(<sfMouse> __pyx_result, __pyx_state)
 *     return __pyx_result
*/
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = sfMouse.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_sfMouse__set_state(<sfMouse> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_sfMouse__set_state(sfMouse __pyx_result, tuple __pyx_state):
*/
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_9pysfml261___pyx_unpickle_sfMouse__set_state(((struct __pyx_obj_9pysfml261_sfMouse *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = sfMouse.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_sfMouse__set_state(<sfMouse> __pyx_result, __pyx_state)
 *     return __pyx_result
*/
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_sfMouse__set_state(<sfMouse> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_sfMouse__set_state(sfMouse __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
*/
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_sfMouse(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
*/

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_sfMouse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_sfMouse__set_state(<sfMouse> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_sfMouse__set_state(sfMouse __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/

static PyObject *__pyx_f_9pysfml261___pyx_unpickle_sfMouse__set_state(struct __pyx_obj_9pysfml261_sfMouse *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_sfMouse__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_sfMouse__set_state(sfMouse __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_mstate_global->__pyx_n_u_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_sfMouse__set_state(sfMouse __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
*/
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_mstate_global->__pyx_n_u_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __pyx_t_6;
    __Pyx_INCREF(__pyx_t_5);
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyLong_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = 0;
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_7};
      __pyx_t_4 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_update, __pyx_callargs+__pyx_t_8, (2-__pyx_t_8) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_sfMouse__set_state(sfMouse __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_sfMouse__set_state(<sfMouse> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_sfMouse__set_state(sfMouse __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pysfml261.__pyx_unpickle_sfMouse__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
/* #### Code section: module_exttypes ### */

static PyObject *__pyx_tp_new_9pysfml261_MathPoint2f(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_11MathPoint2f_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_MathPoint2f(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_MathPoint2f) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_11MathPoint2f_pos_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11MathPoint2f_5pos_x_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11MathPoint2f_pos_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11MathPoint2f_5pos_x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_11MathPoint2f_pos_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11MathPoint2f_5pos_y_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11MathPoint2f_pos_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11MathPoint2f_5pos_y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9pysfml261_MathPoint2f[] = {
  {"distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint2f_3distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint2f_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint2f_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_MathPoint2f[] = {
  {"pos_x", __pyx_getprop_9pysfml261_11MathPoint2f_pos_x, __pyx_setprop_9pysfml261_11MathPoint2f_pos_x, 0, 0},
  {"pos_y", __pyx_getprop_9pysfml261_11MathPoint2f_pos_y, __pyx_setprop_9pysfml261_11MathPoint2f_pos_y, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_MathPoint2f_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_MathPoint2f},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_MathPoint2f},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_MathPoint2f},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_MathPoint2f},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_MathPoint2f_spec = {
  "pysfml261.MathPoint2f",
  sizeof(struct __pyx_obj_9pysfml261_MathPoint2f),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_MathPoint2f_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_MathPoint2f = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""MathPoint2f", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_MathPoint2f), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_MathPoint2f, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_MathPoint2f, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_MathPoint2f, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_MathPoint2f, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_MathVector2f(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_12MathVector2f_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_MathVector2f(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_MathVector2f) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_12MathVector2f_modul(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_12MathVector2f_5modul_1__get__(o);
}

static PyObject *__pyx_getprop_9pysfml261_12MathVector2f_pos_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_12MathVector2f_5pos_x_1__get__(o);
}

static int __pyx_setprop_9pysfml261_12MathVector2f_pos_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_12MathVector2f_5pos_x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_12MathVector2f_pos_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_12MathVector2f_5pos_y_1__get__(o);
}

static int __pyx_setprop_9pysfml261_12MathVector2f_pos_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_12MathVector2f_5pos_y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9pysfml261_MathVector2f[] = {
  {"sum", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_3sum, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"sub", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_5sub, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"scalar_product", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_7scalar_product, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"cosin", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_9cosin, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"vector_product", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_11vector_product, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"sinus", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_13sinus, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_15distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"multiply_num", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_17multiply_num, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"basis", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_19basis, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_parallel", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_21is_parallel, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_perpendicular", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_23is_perpendicular, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"angle_between", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_25angle_between, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"from_points", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_27from_points, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_29__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector2f_31__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_MathVector2f[] = {
  {"modul", __pyx_getprop_9pysfml261_12MathVector2f_modul, 0, 0, 0},
  {"pos_x", __pyx_getprop_9pysfml261_12MathVector2f_pos_x, __pyx_setprop_9pysfml261_12MathVector2f_pos_x, 0, 0},
  {"pos_y", __pyx_getprop_9pysfml261_12MathVector2f_pos_y, __pyx_setprop_9pysfml261_12MathVector2f_pos_y, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_MathVector2f_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_MathVector2f},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_MathVector2f},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_MathVector2f},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_MathVector2f},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_MathVector2f_spec = {
  "pysfml261.MathVector2f",
  sizeof(struct __pyx_obj_9pysfml261_MathVector2f),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_MathVector2f_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_MathVector2f = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""MathVector2f", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_MathVector2f), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_MathVector2f, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_MathVector2f, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_MathVector2f, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_MathVector2f, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_MathPoint3f(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_11MathPoint3f_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_MathPoint3f(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_MathPoint3f) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_11MathPoint3f_pos_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11MathPoint3f_5pos_x_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11MathPoint3f_pos_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11MathPoint3f_5pos_x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_11MathPoint3f_pos_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11MathPoint3f_5pos_y_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11MathPoint3f_pos_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11MathPoint3f_5pos_y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_11MathPoint3f_pos_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11MathPoint3f_5pos_z_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11MathPoint3f_pos_z(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11MathPoint3f_5pos_z_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9pysfml261_MathPoint3f[] = {
  {"distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint3f_3distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint3f_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11MathPoint3f_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_MathPoint3f[] = {
  {"pos_x", __pyx_getprop_9pysfml261_11MathPoint3f_pos_x, __pyx_setprop_9pysfml261_11MathPoint3f_pos_x, 0, 0},
  {"pos_y", __pyx_getprop_9pysfml261_11MathPoint3f_pos_y, __pyx_setprop_9pysfml261_11MathPoint3f_pos_y, 0, 0},
  {"pos_z", __pyx_getprop_9pysfml261_11MathPoint3f_pos_z, __pyx_setprop_9pysfml261_11MathPoint3f_pos_z, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_MathPoint3f_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_MathPoint3f},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_MathPoint3f},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_MathPoint3f},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_MathPoint3f},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_MathPoint3f_spec = {
  "pysfml261.MathPoint3f",
  sizeof(struct __pyx_obj_9pysfml261_MathPoint3f),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_MathPoint3f_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_MathPoint3f = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""MathPoint3f", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_MathPoint3f), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_MathPoint3f, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_MathPoint3f, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_MathPoint3f, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_MathPoint3f, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_MathVector3f(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_12MathVector3f_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_MathVector3f(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_MathVector3f) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_12MathVector3f_modul(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_12MathVector3f_5modul_1__get__(o);
}

static PyObject *__pyx_getprop_9pysfml261_12MathVector3f_pos_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_12MathVector3f_5pos_x_1__get__(o);
}

static int __pyx_setprop_9pysfml261_12MathVector3f_pos_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_12MathVector3f_5pos_x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_12MathVector3f_pos_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_12MathVector3f_5pos_y_1__get__(o);
}

static int __pyx_setprop_9pysfml261_12MathVector3f_pos_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_12MathVector3f_5pos_y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_12MathVector3f_pos_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_12MathVector3f_5pos_z_1__get__(o);
}

static int __pyx_setprop_9pysfml261_12MathVector3f_pos_z(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_12MathVector3f_5pos_z_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9pysfml261_MathVector3f[] = {
  {"sum", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_3sum, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"sub", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_5sub, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"scalar_product", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_7scalar_product, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"cosin", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_9cosin, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"vector_product", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_11vector_product, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"sinus", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_13sinus, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_15distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"multiply_num", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_17multiply_num, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"basis", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_19basis, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_parallel", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_21is_parallel, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_perpendicular", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_23is_perpendicular, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"angle_between", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_25angle_between, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"from_points", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_27from_points, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_29__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_12MathVector3f_31__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_MathVector3f[] = {
  {"modul", __pyx_getprop_9pysfml261_12MathVector3f_modul, 0, 0, 0},
  {"pos_x", __pyx_getprop_9pysfml261_12MathVector3f_pos_x, __pyx_setprop_9pysfml261_12MathVector3f_pos_x, 0, 0},
  {"pos_y", __pyx_getprop_9pysfml261_12MathVector3f_pos_y, __pyx_setprop_9pysfml261_12MathVector3f_pos_y, 0, 0},
  {"pos_z", __pyx_getprop_9pysfml261_12MathVector3f_pos_z, __pyx_setprop_9pysfml261_12MathVector3f_pos_z, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_MathVector3f_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_MathVector3f},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_MathVector3f},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_MathVector3f},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_MathVector3f},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_MathVector3f_spec = {
  "pysfml261.MathVector3f",
  sizeof(struct __pyx_obj_9pysfml261_MathVector3f),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_MathVector3f_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_MathVector3f = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""MathVector3f", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_MathVector3f), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_MathVector3f, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_MathVector3f, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_MathVector3f, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_MathVector3f, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfSoundBuffer(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_13sfSoundBuffer_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfSoundBuffer(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfSoundBuffer) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_13sfSoundBuffer_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfSoundBuffer[] = {
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfSoundBuffer_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfSoundBuffer_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfSoundBuffer_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfSoundBuffer},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfSoundBuffer},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfSoundBuffer},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfSoundBuffer_spec = {
  "pysfml261.sfSoundBuffer",
  sizeof(struct __pyx_obj_9pysfml261_sfSoundBuffer),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfSoundBuffer_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfSoundBuffer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfSoundBuffer", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfSoundBuffer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfSoundBuffer, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfSoundBuffer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfSoundBuffer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfSound(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_7sfSound_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfSound(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfSound) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_7sfSound_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfSound[] = {
  {"play", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_5play, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"pause", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_7pause, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"stop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_9stop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_status", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_11get_status, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_buffer", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_13set_buffer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"reset_buffer", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_15reset_buffer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_relative_to", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_17set_relative_to, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_19get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_21set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_min_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_23get_min_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_min_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_25set_min_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_attenuation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_27get_attenuation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_attenuation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_29set_attenuation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_loop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_31get_loop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_loop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_33set_loop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_volume", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_35get_volume, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_volume", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_37set_volume, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_pitch", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_39get_pitch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_pitch", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_41set_pitch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_43__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfSound_45__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfSound_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfSound},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfSound},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfSound},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfSound_spec = {
  "pysfml261.sfSound",
  sizeof(struct __pyx_obj_9pysfml261_sfSound),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfSound_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfSound = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfSound", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfSound), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfSound, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfSound, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfSound, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfMusic(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_7sfMusic_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfMusic(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfMusic) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_7sfMusic_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfMusic[] = {
  {"play", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_5play, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"pause", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_7pause, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"stop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_9stop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_status", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_11get_status, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_relative_to", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_13set_relative_to, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_15get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_17set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_min_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_19get_min_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_min_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_21set_min_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_attenuation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_23get_attenuation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_attenuation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_25set_attenuation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_loop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_27get_loop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_loop", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_29set_loop, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_volume", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_31get_volume, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_volume", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_33set_volume, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_pitch", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_35get_pitch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_pitch", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_37set_pitch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_39__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMusic_41__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfMusic_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfMusic},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfMusic},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfMusic},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfMusic_spec = {
  "pysfml261.sfMusic",
  sizeof(struct __pyx_obj_9pysfml261_sfMusic),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfMusic_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfMusic = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfMusic", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfMusic), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfMusic, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfMusic, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfMusic, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfTime(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_6sfTime_1__cinit__(o, __pyx_mstate_global->__pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfTime(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfTime) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_6sfTime_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfTime[] = {
  {"asSeconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_5asSeconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"asMilliseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_7asMilliseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"asMicroseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_9asMicroseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_11__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfTime_13__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfTime_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfTime},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfTime},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfTime},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfTime_spec = {
  "pysfml261.sfTime",
  sizeof(struct __pyx_obj_9pysfml261_sfTime),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfTime_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfTime = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfTime", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfTime), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfTime, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfTime, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfTime, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfClock(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_7sfClock_1__cinit__(o, __pyx_mstate_global->__pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfClock(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfClock) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_7sfClock_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfClock[] = {
  {"get_elapsed_seconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_5get_elapsed_seconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_elapsed_milliseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_7get_elapsed_milliseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_elapsed_microseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_9get_elapsed_microseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"restart_asseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_11restart_asseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"restart_asmilliseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_13restart_asmilliseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"restart_asmicroseconds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_15restart_asmicroseconds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_17__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfClock_19__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfClock_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfClock},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfClock},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfClock},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfClock_spec = {
  "pysfml261.sfClock",
  sizeof(struct __pyx_obj_9pysfml261_sfClock),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfClock_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfClock = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfClock", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfClock), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfClock, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfClock, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfClock, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_TimeCollector(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_13TimeCollector_1__cinit__(o, __pyx_mstate_global->__pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_TimeCollector(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_TimeCollector) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_13TimeCollector_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_13TimeCollector_seconds(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_13TimeCollector_7seconds_1__get__(o);
}

static PyObject *__pyx_getprop_9pysfml261_13TimeCollector_milliseconds(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_13TimeCollector_12milliseconds_1__get__(o);
}

static PyObject *__pyx_getprop_9pysfml261_13TimeCollector_microseconds(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_13TimeCollector_12microseconds_1__get__(o);
}

static PyMethodDef __pyx_methods_9pysfml261_TimeCollector[] = {
  {"collect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13TimeCollector_5collect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"reset", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13TimeCollector_7reset, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13TimeCollector_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13TimeCollector_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_TimeCollector[] = {
  {"seconds", __pyx_getprop_9pysfml261_13TimeCollector_seconds, 0, 0, 0},
  {"milliseconds", __pyx_getprop_9pysfml261_13TimeCollector_milliseconds, 0, 0, 0},
  {"microseconds", __pyx_getprop_9pysfml261_13TimeCollector_microseconds, 0, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_TimeCollector_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_TimeCollector},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_TimeCollector},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_TimeCollector},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_TimeCollector},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_TimeCollector_spec = {
  "pysfml261.TimeCollector",
  sizeof(struct __pyx_obj_9pysfml261_TimeCollector),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_TimeCollector_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_TimeCollector = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""TimeCollector", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_TimeCollector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_TimeCollector, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_TimeCollector, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_TimeCollector, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_TimeCollector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_TimedFloat(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_10TimedFloat_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_TimedFloat(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_TimedFloat) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_10TimedFloat_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_TimedFloat[] = {
  {"get_timed", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_5get_timed, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_value", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_7get_value, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_value", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_9set_value, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_11__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10TimedFloat_13__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_TimedFloat_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_TimedFloat},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_TimedFloat},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_TimedFloat},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_TimedFloat_spec = {
  "pysfml261.TimedFloat",
  sizeof(struct __pyx_obj_9pysfml261_TimedFloat),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_TimedFloat_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_TimedFloat = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""TimedFloat", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_TimedFloat), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_TimedFloat, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_TimedFloat, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_TimedFloat, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_Animator(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_8Animator_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_Animator(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_Animator) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_8Animator_lenz(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_8Animator_4lenz_1__get__(o);
}

static int __pyx_setprop_9pysfml261_8Animator_lenz(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_8Animator_4lenz_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_8Animator_spid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_8Animator_4spid_1__get__(o);
}

static int __pyx_setprop_9pysfml261_8Animator_spid(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_8Animator_4spid_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_8Animator_is_ended(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_8Animator_8is_ended_1__get__(o);
}

static PyObject *__pyx_getprop_9pysfml261_8Animator_is_started(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_8Animator_10is_started_1__get__(o);
}

static PyMethodDef __pyx_methods_9pysfml261_Animator[] = {
  {"get_current_index", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Animator_3get_current_index, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Animator_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Animator_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_Animator[] = {
  {"lenz", __pyx_getprop_9pysfml261_8Animator_lenz, __pyx_setprop_9pysfml261_8Animator_lenz, 0, 0},
  {"spid", __pyx_getprop_9pysfml261_8Animator_spid, __pyx_setprop_9pysfml261_8Animator_spid, 0, 0},
  {"is_ended", __pyx_getprop_9pysfml261_8Animator_is_ended, 0, 0, 0},
  {"is_started", __pyx_getprop_9pysfml261_8Animator_is_started, 0, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_Animator_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_Animator},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_Animator},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_Animator},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_Animator},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_Animator_spec = {
  "pysfml261.Animator",
  sizeof(struct __pyx_obj_9pysfml261_Animator),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_Animator_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_Animator = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""Animator", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_Animator), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_Animator, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_Animator, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_Animator, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_Animator, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfImage(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_7sfImage_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfImage(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfImage) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_7sfImage_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfImage[] = {
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfImage_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfImage_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfImage_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfImage},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfImage},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfImage},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfImage_spec = {
  "pysfml261.sfImage",
  sizeof(struct __pyx_obj_9pysfml261_sfImage),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfImage_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfImage = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfImage", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfImage), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfImage, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfImage, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfImage, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfVideoMode(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_11sfVideoMode_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfVideoMode(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfVideoMode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_11sfVideoMode_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_11sfVideoMode_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11sfVideoMode_5width_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11sfVideoMode_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11sfVideoMode_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_11sfVideoMode_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11sfVideoMode_6height_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11sfVideoMode_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11sfVideoMode_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_11sfVideoMode_bits_per_pixel(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11sfVideoMode_14bits_per_pixel_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11sfVideoMode_bits_per_pixel(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11sfVideoMode_14bits_per_pixel_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9pysfml261_sfVideoMode[] = {
  {"get_desktop_mode", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfVideoMode_5get_desktop_mode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_valid", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfVideoMode_7is_valid, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfVideoMode_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfVideoMode_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_sfVideoMode[] = {
  {"width", __pyx_getprop_9pysfml261_11sfVideoMode_width, __pyx_setprop_9pysfml261_11sfVideoMode_width, 0, 0},
  {"height", __pyx_getprop_9pysfml261_11sfVideoMode_height, __pyx_setprop_9pysfml261_11sfVideoMode_height, 0, 0},
  {"bits_per_pixel", __pyx_getprop_9pysfml261_11sfVideoMode_bits_per_pixel, __pyx_setprop_9pysfml261_11sfVideoMode_bits_per_pixel, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfVideoMode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfVideoMode},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfVideoMode},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_sfVideoMode},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfVideoMode},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfVideoMode_spec = {
  "pysfml261.sfVideoMode",
  sizeof(struct __pyx_obj_9pysfml261_sfVideoMode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfVideoMode_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfVideoMode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfVideoMode", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfVideoMode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfVideoMode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfVideoMode, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_sfVideoMode, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfVideoMode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfColor(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_7sfColor_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfColor(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfColor) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_7sfColor_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_7sfColor_r(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_7sfColor_1r_1__get__(o);
}

static int __pyx_setprop_9pysfml261_7sfColor_r(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_7sfColor_1r_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_7sfColor_g(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_7sfColor_1g_1__get__(o);
}

static int __pyx_setprop_9pysfml261_7sfColor_g(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_7sfColor_1g_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_7sfColor_b(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_7sfColor_1b_1__get__(o);
}

static int __pyx_setprop_9pysfml261_7sfColor_b(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_7sfColor_1b_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_7sfColor_a(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_7sfColor_1a_1__get__(o);
}

static int __pyx_setprop_9pysfml261_7sfColor_a(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_7sfColor_1a_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9pysfml261_sfColor[] = {
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfColor_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfColor_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_sfColor[] = {
  {"r", __pyx_getprop_9pysfml261_7sfColor_r, __pyx_setprop_9pysfml261_7sfColor_r, 0, 0},
  {"g", __pyx_getprop_9pysfml261_7sfColor_g, __pyx_setprop_9pysfml261_7sfColor_g, 0, 0},
  {"b", __pyx_getprop_9pysfml261_7sfColor_b, __pyx_setprop_9pysfml261_7sfColor_b, 0, 0},
  {"a", __pyx_getprop_9pysfml261_7sfColor_a, __pyx_setprop_9pysfml261_7sfColor_a, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfColor_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfColor},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfColor},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_sfColor},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfColor},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfColor_spec = {
  "pysfml261.sfColor",
  sizeof(struct __pyx_obj_9pysfml261_sfColor),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfColor_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfColor = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfColor", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfColor), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfColor, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfColor, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_sfColor, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfColor, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfEvent(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_7sfEvent_1__cinit__(o, __pyx_mstate_global->__pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfEvent(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfEvent) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_7sfEvent_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfEvent[] = {
  {"get_type", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_5get_type, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_key_code", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_7get_key_code, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_text_unicode", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_9get_text_unicode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_mouse_button", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_11get_mouse_button, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfEvent_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfEvent_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfEvent},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfEvent},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfEvent},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfEvent_spec = {
  "pysfml261.sfEvent",
  sizeof(struct __pyx_obj_9pysfml261_sfEvent),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfEvent_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfEvent = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfEvent", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfEvent), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfEvent, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfEvent, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfEvent, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfKeyboard(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_9pysfml261_sfKeyboard(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfKeyboard) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfKeyboard[] = {
  {"is_key_pressed", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10sfKeyboard_1is_key_pressed, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"localize", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10sfKeyboard_3localize, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10sfKeyboard_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_10sfKeyboard_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfKeyboard_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfKeyboard},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfKeyboard},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfKeyboard},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfKeyboard_spec = {
  "pysfml261.sfKeyboard",
  sizeof(struct __pyx_obj_9pysfml261_sfKeyboard),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfKeyboard_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfKeyboard = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfKeyboard", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfKeyboard), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfKeyboard, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfKeyboard, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfKeyboard, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfFloatRect(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_11sfFloatRect_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfFloatRect(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfFloatRect) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_11sfFloatRect_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_11sfFloatRect_left(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11sfFloatRect_4left_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11sfFloatRect_left(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11sfFloatRect_4left_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_11sfFloatRect_top(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11sfFloatRect_3top_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11sfFloatRect_top(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11sfFloatRect_3top_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_11sfFloatRect_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11sfFloatRect_5width_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11sfFloatRect_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11sfFloatRect_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_11sfFloatRect_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_11sfFloatRect_6height_1__get__(o);
}

static int __pyx_setprop_9pysfml261_11sfFloatRect_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_11sfFloatRect_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9pysfml261_sfFloatRect[] = {
  {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_5contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_7intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_9get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_11get_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_13set_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_15get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_17move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_19__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_11sfFloatRect_21__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_sfFloatRect[] = {
  {"left", __pyx_getprop_9pysfml261_11sfFloatRect_left, __pyx_setprop_9pysfml261_11sfFloatRect_left, 0, 0},
  {"top", __pyx_getprop_9pysfml261_11sfFloatRect_top, __pyx_setprop_9pysfml261_11sfFloatRect_top, 0, 0},
  {"width", __pyx_getprop_9pysfml261_11sfFloatRect_width, __pyx_setprop_9pysfml261_11sfFloatRect_width, 0, 0},
  {"height", __pyx_getprop_9pysfml261_11sfFloatRect_height, __pyx_setprop_9pysfml261_11sfFloatRect_height, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfFloatRect_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfFloatRect},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfFloatRect},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_sfFloatRect},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfFloatRect},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfFloatRect_spec = {
  "pysfml261.sfFloatRect",
  sizeof(struct __pyx_obj_9pysfml261_sfFloatRect),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfFloatRect_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfFloatRect = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfFloatRect", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfFloatRect), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfFloatRect, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfFloatRect, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_sfFloatRect, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfFloatRect, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfFont(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_6sfFont_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfFont(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfFont) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_6sfFont_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfFont[] = {
  {"set_smooth", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfFont_5set_smooth, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_smooth", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfFont_7is_smooth, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfFont_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfFont_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfFont_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfFont},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfFont},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfFont},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfFont_spec = {
  "pysfml261.sfFont",
  sizeof(struct __pyx_obj_9pysfml261_sfFont),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfFont_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfFont = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfFont", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfFont), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfFont, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfFont, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfFont, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfString(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_8sfString_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfString(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfString) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_8sfString_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_tp_richcompare_9pysfml261_sfString(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_9pysfml261_8sfString_17__eq__(o1, o2);
    }
    case Py_NE: {
      PyObject *ret;
      ret = __pyx_pw_9pysfml261_8sfString_17__eq__(o1, o2);
      if (likely(ret && ret != Py_NotImplemented)) {
        int b = __Pyx_PyObject_IsTrue(ret);
        Py_DECREF(ret);
        if (unlikely(b < 0)) return NULL;
        ret = (b) ? Py_False : Py_True;
        Py_INCREF(ret);
      }
      return ret;
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyMethodDef __pyx_methods_9pysfml261_sfString[] = {
  {"clear", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_5clear, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_empty", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_7is_empty, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"as_pystring", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_9as_pystring, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"from_pystring", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_11from_pystring, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"drop_cache", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_13drop_cache, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_cache_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_15set_cache_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_19__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfString_21__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfString_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfString},
  {Py_tp_richcompare, (void *)__pyx_tp_richcompare_9pysfml261_sfString},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfString},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfString},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfString_spec = {
  "pysfml261.sfString",
  sizeof(struct __pyx_obj_9pysfml261_sfString),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfString_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfString = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfString", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfString), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfString, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_tp_richcompare_9pysfml261_sfString, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfString, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfString, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfText(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_6sfText_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfText(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfText) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_6sfText_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfText[] = {
  {"get_pystring", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_5get_pystring, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_7get_scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_9set_scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_11get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_13set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_15get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_17set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_19move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_21rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_23contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_25intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_string", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_27set_string, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_font", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_29set_font, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_character_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_31set_character_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_style", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_33set_style, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_35set_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_local_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_37get_local_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_global_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_39get_global_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_41__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfText_43__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfText_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfText},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfText},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfText},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfText_spec = {
  "pysfml261.sfText",
  sizeof(struct __pyx_obj_9pysfml261_sfText),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfText_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfText = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfText", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfText), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfText, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfText, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfText, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfTexture(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_9sfTexture_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfTexture(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfTexture) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_9sfTexture_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfTexture[] = {
  {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_5get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_smooth", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_7set_smooth, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_smooth", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_9is_smooth, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_srgb", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_11set_srgb, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_srgb", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_13is_srgb, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_15__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_9sfTexture_17__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfTexture_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfTexture},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfTexture},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfTexture},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfTexture_spec = {
  "pysfml261.sfTexture",
  sizeof(struct __pyx_obj_9pysfml261_sfTexture),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfTexture_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfTexture = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfTexture", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfTexture), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfTexture, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfTexture, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfTexture, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfSprite(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_8sfSprite_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfSprite(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfSprite) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_8sfSprite_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfSprite[] = {
  {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_5intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"intersects_rect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_7intersects_rect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_9contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_11move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_13rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"collide_shift_h", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_15collide_shift_h, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"collide_shift_v", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_17collide_shift_v, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_local_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_19get_local_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_global_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_21get_global_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_23get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_25set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_27get_scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_29set_scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_31get_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_33set_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_35get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_37set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_39get_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_41set_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_43set_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_45get_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"in_area", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_47in_area, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"clone", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_49clone, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_51__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfSprite_53__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfSprite_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfSprite},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfSprite},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfSprite},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfSprite_spec = {
  "pysfml261.sfSprite",
  sizeof(struct __pyx_obj_9pysfml261_sfSprite),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfSprite_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfSprite = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfSprite", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfSprite), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfSprite, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfSprite, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfSprite, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_TransformSfSprite(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_9pysfml261_TransformSfSprite(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_TransformSfSprite) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_TransformSfSprite[] = {
  {"keep_their_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_1keep_their_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"similar", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_3similar, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"put_like", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_5put_like, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"swap", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_7swap, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_distance", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_9get_distance, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"scale", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_11scale, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"resize", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_13resize, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"flip", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_15flip, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_rotation_around_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_17set_rotation_around_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"rotate_around_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_19rotate_around_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"move_with_angle", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_21move_with_angle, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_23__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_17TransformSfSprite_25__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_TransformSfSprite_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_TransformSfSprite},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_TransformSfSprite},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_TransformSfSprite},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_TransformSfSprite_spec = {
  "pysfml261.TransformSfSprite",
  sizeof(struct __pyx_obj_9pysfml261_TransformSfSprite),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_TransformSfSprite_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_TransformSfSprite = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""TransformSfSprite", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_TransformSfSprite), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_TransformSfSprite, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_TransformSfSprite, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_TransformSfSprite, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfRectangleShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_16sfRectangleShape_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfRectangleShape(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfRectangleShape) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_16sfRectangleShape_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfRectangleShape[] = {
  {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_5move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_7rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_9contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_11intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_13set_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_15get_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_17set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_19get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_21set_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_23get_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_25set_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_27get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_29set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_31get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_global_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_33get_global_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_local_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_35get_local_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"clone", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_37clone, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_39__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_16sfRectangleShape_41__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfRectangleShape_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfRectangleShape},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfRectangleShape},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfRectangleShape},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfRectangleShape_spec = {
  "pysfml261.sfRectangleShape",
  sizeof(struct __pyx_obj_9pysfml261_sfRectangleShape),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfRectangleShape_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfRectangleShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfRectangleShape", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfRectangleShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfRectangleShape, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfRectangleShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfRectangleShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfCircleShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_13sfCircleShape_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfCircleShape(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfCircleShape) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_13sfCircleShape_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfCircleShape[] = {
  {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_5move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_7rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"contains", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_9contains, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"intersects", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_11intersects, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_13set_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_alpha", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_15get_alpha, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_17set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_19get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_21set_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_fill_color", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_23get_fill_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_25set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_27get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_radius", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_29set_radius, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_radius", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_31get_radius, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_local_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_33get_local_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_global_bounds", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_35get_global_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"clone", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_37clone, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_39__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_13sfCircleShape_41__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfCircleShape_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfCircleShape},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfCircleShape},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfCircleShape},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfCircleShape_spec = {
  "pysfml261.sfCircleShape",
  sizeof(struct __pyx_obj_9pysfml261_sfCircleShape),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfCircleShape_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfCircleShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfCircleShape", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfCircleShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfCircleShape, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfCircleShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfCircleShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfView(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_6sfView_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfView(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfView) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_6sfView_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfView[] = {
  {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_5move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"rotate", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_7rotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"zoom", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_9zoom, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"rotate_around_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_11rotate_around_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_rotation_around_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_13set_rotation_around_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_rect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_15get_rect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_left_top", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_17get_left_top, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_left_top", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_19set_left_top, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_21get_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_center", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_23set_center, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_25get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_27set_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_29get_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_rotation", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_31set_rotation, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_33__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_6sfView_35__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfView_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfView},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfView},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfView},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfView_spec = {
  "pysfml261.sfView",
  sizeof(struct __pyx_obj_9pysfml261_sfView),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfView_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfView = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfView", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfView), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfView, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfView, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfView, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfShader(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_8sfShader_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfShader(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfShader) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_8sfShader_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfShader[] = {
  {"set_uniform", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfShader_5set_uniform, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_available", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfShader_7is_available, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfShader_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8sfShader_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfShader_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfShader},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfShader},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfShader},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfShader_spec = {
  "pysfml261.sfShader",
  sizeof(struct __pyx_obj_9pysfml261_sfShader),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfShader_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfShader = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfShader", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfShader), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfShader, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfShader, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfShader, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfRenderStates(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_14sfRenderStates_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfRenderStates(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfRenderStates) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_14sfRenderStates_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfRenderStates[] = {
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderStates_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderStates_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfRenderStates_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfRenderStates},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfRenderStates},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfRenderStates},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfRenderStates_spec = {
  "pysfml261.sfRenderStates",
  sizeof(struct __pyx_obj_9pysfml261_sfRenderStates),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfRenderStates_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfRenderStates = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfRenderStates", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfRenderStates), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfRenderStates, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfRenderStates, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfRenderStates, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfRenderWindow(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_14sfRenderWindow_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_sfRenderWindow(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfRenderWindow) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9pysfml261_14sfRenderWindow_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfRenderWindow[] = {
  {"map_coords_to_pixel", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_5map_coords_to_pixel, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"map_pixel_to_coords", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_7map_pixel_to_coords, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_desktop_rect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_9get_desktop_rect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_view", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_11set_view, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_view", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_13get_view, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_15get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_17set_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"move", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_19move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"draw_sprite", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_21draw_sprite, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"draw_sprite_use_state", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_23draw_sprite_use_state, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"draw_text", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_25draw_text, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"draw_rect_shape", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_27draw_rect_shape, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"draw_circle_shape", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_29draw_circle_shape, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_icon", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_31set_icon, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"clear", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_33clear, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"poll_event", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_35poll_event, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_visible", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_37set_visible, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_open", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_39is_open, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"close", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_41close, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"display", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_43display, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_mouse_cursor_visible", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_45set_mouse_cursor_visible, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_framerate_limit", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_47set_framerate_limit, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"set_active", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_49set_active, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_size", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_51get_size, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_53__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_14sfRenderWindow_55__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfRenderWindow_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfRenderWindow},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfRenderWindow},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfRenderWindow},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfRenderWindow_spec = {
  "pysfml261.sfRenderWindow",
  sizeof(struct __pyx_obj_9pysfml261_sfRenderWindow),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfRenderWindow_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfRenderWindow = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfRenderWindow", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfRenderWindow), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfRenderWindow, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfRenderWindow, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfRenderWindow, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_sfMouse(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_9pysfml261_sfMouse(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_sfMouse) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_9pysfml261_sfMouse[] = {
  {"world_pos", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_1world_pos, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"relative_pos", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_3relative_pos, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"relative_to_rect", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_5relative_to_rect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"get_position", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_7get_position, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"is_button_pressed", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_9is_button_pressed, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_11__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_7sfMouse_13__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_sfMouse_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_sfMouse},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_sfMouse},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_sfMouse},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_sfMouse_spec = {
  "pysfml261.sfMouse",
  sizeof(struct __pyx_obj_9pysfml261_sfMouse),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_sfMouse_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_sfMouse = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""sfMouse", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_sfMouse), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_sfMouse, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_sfMouse, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_sfMouse, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9pysfml261_Camera2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_mstate_global->__pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  if (unlikely(__pyx_pw_9pysfml261_8Camera2D_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9pysfml261_Camera2D(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9pysfml261_Camera2D) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_9pysfml261_8Camera2D_pleft(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_8Camera2D_5pleft_1__get__(o);
}

static int __pyx_setprop_9pysfml261_8Camera2D_pleft(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_8Camera2D_5pleft_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_8Camera2D_ptop(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_8Camera2D_4ptop_1__get__(o);
}

static int __pyx_setprop_9pysfml261_8Camera2D_ptop(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_8Camera2D_4ptop_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_8Camera2D_dist_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_8Camera2D_6dist_x_1__get__(o);
}

static int __pyx_setprop_9pysfml261_8Camera2D_dist_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_8Camera2D_6dist_x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9pysfml261_8Camera2D_dist_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9pysfml261_8Camera2D_6dist_y_1__get__(o);
}

static int __pyx_setprop_9pysfml261_8Camera2D_dist_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9pysfml261_8Camera2D_6dist_y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9pysfml261_Camera2D[] = {
  {"shift", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Camera2D_3shift, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Camera2D_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void(*)(void))(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9pysfml261_8Camera2D_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9pysfml261_Camera2D[] = {
  {"pleft", __pyx_getprop_9pysfml261_8Camera2D_pleft, __pyx_setprop_9pysfml261_8Camera2D_pleft, 0, 0},
  {"ptop", __pyx_getprop_9pysfml261_8Camera2D_ptop, __pyx_setprop_9pysfml261_8Camera2D_ptop, 0, 0},
  {"dist_x", __pyx_getprop_9pysfml261_8Camera2D_dist_x, __pyx_setprop_9pysfml261_8Camera2D_dist_x, 0, 0},
  {"dist_y", __pyx_getprop_9pysfml261_8Camera2D_dist_y, __pyx_setprop_9pysfml261_8Camera2D_dist_y, 0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9pysfml261_Camera2D_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9pysfml261_Camera2D},
  {Py_tp_methods, (void *)__pyx_methods_9pysfml261_Camera2D},
  {Py_tp_getset, (void *)__pyx_getsets_9pysfml261_Camera2D},
  {Py_tp_new, (void *)__pyx_tp_new_9pysfml261_Camera2D},
  {0, 0},
};
static PyType_Spec __pyx_type_9pysfml261_Camera2D_spec = {
  "pysfml261.Camera2D",
  sizeof(struct __pyx_obj_9pysfml261_Camera2D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_9pysfml261_Camera2D_slots,
};
#else

static PyTypeObject __pyx_type_9pysfml261_Camera2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "pysfml261.""Camera2D", /*tp_name*/
  sizeof(struct __pyx_obj_9pysfml261_Camera2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9pysfml261_Camera2D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_as_async*/
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9pysfml261_Camera2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9pysfml261_Camera2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9pysfml261_Camera2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
/* #### Code section: initfunc_declarations ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitConstants(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_CreateCodeObjects(__pyx_mstatetype *__pyx_mstate); /*proto*/
/* #### Code section: init_module ### */

static int __Pyx_modinit_global_init_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_MathPoint2f_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f)) __PYX_ERR(0, 58, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_MathPoint2f_spec, __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f = &__pyx_type_9pysfml261_MathPoint2f;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_MathPoint2f, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint2f) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_MathVector2f_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f)) __PYX_ERR(0, 92, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_MathVector2f_spec, __pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f) < 0) __PYX_ERR(0, 92, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f = &__pyx_type_9pysfml261_MathVector2f;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f) < 0) __PYX_ERR(0, 92, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_MathVector2f, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f) < 0) __PYX_ERR(0, 92, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_MathVector2f) < 0) __PYX_ERR(0, 92, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_MathPoint3f_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f)) __PYX_ERR(0, 191, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_MathPoint3f_spec, __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f = &__pyx_type_9pysfml261_MathPoint3f;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_MathPoint3f, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_MathPoint3f) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_MathVector3f_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f)) __PYX_ERR(0, 236, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_MathVector3f_spec, __pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f) < 0) __PYX_ERR(0, 236, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f = &__pyx_type_9pysfml261_MathVector3f;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f) < 0) __PYX_ERR(0, 236, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_MathVector3f, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f) < 0) __PYX_ERR(0, 236, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_MathVector3f) < 0) __PYX_ERR(0, 236, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfSoundBuffer_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer)) __PYX_ERR(0, 358, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfSoundBuffer_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer) < 0) __PYX_ERR(0, 358, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer = &__pyx_type_9pysfml261_sfSoundBuffer;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer) < 0) __PYX_ERR(0, 358, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfSoundBuffer, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer) < 0) __PYX_ERR(0, 358, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfSoundBuffer) < 0) __PYX_ERR(0, 358, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfSound = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfSound_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfSound)) __PYX_ERR(0, 376, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfSound_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfSound) < 0) __PYX_ERR(0, 376, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfSound = &__pyx_type_9pysfml261_sfSound;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfSound) < 0) __PYX_ERR(0, 376, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfSound->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfSound->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfSound->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfSound, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfSound) < 0) __PYX_ERR(0, 376, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfSound) < 0) __PYX_ERR(0, 376, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfMusic = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfMusic_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfMusic)) __PYX_ERR(0, 464, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfMusic_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfMusic) < 0) __PYX_ERR(0, 464, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfMusic = &__pyx_type_9pysfml261_sfMusic;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfMusic) < 0) __PYX_ERR(0, 464, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfMusic->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfMusic->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfMusic->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfMusic, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfMusic) < 0) __PYX_ERR(0, 464, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfMusic) < 0) __PYX_ERR(0, 464, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfTime = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfTime_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfTime)) __PYX_ERR(0, 553, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfTime_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfTime) < 0) __PYX_ERR(0, 553, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfTime = &__pyx_type_9pysfml261_sfTime;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfTime) < 0) __PYX_ERR(0, 553, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfTime->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfTime->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfTime->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfTime, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfTime) < 0) __PYX_ERR(0, 553, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfTime) < 0) __PYX_ERR(0, 553, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfClock = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfClock_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfClock)) __PYX_ERR(0, 573, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfClock_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfClock) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfClock = &__pyx_type_9pysfml261_sfClock;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfClock) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfClock->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfClock->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfClock->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfClock, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfClock) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfClock) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_TimeCollector_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector)) __PYX_ERR(0, 602, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_TimeCollector_spec, __pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector = &__pyx_type_9pysfml261_TimeCollector;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_TimeCollector, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_TimeCollector) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_TimedFloat_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat)) __PYX_ERR(0, 635, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_TimedFloat_spec, __pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat = &__pyx_type_9pysfml261_TimedFloat;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_TimedFloat, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_TimedFloat) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_Animator = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_Animator_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_Animator)) __PYX_ERR(0, 658, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_Animator_spec, __pyx_mstate->__pyx_ptype_9pysfml261_Animator) < 0) __PYX_ERR(0, 658, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_Animator = &__pyx_type_9pysfml261_Animator;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_Animator) < 0) __PYX_ERR(0, 658, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_Animator->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_Animator->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_Animator->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_Animator, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_Animator) < 0) __PYX_ERR(0, 658, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_Animator) < 0) __PYX_ERR(0, 658, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfImage = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfImage_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfImage)) __PYX_ERR(0, 720, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfImage_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfImage) < 0) __PYX_ERR(0, 720, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfImage = &__pyx_type_9pysfml261_sfImage;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfImage) < 0) __PYX_ERR(0, 720, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfImage->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfImage->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfImage->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfImage, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfImage) < 0) __PYX_ERR(0, 720, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfImage) < 0) __PYX_ERR(0, 720, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfVideoMode_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode)) __PYX_ERR(0, 738, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfVideoMode_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode) < 0) __PYX_ERR(0, 738, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode = &__pyx_type_9pysfml261_sfVideoMode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode) < 0) __PYX_ERR(0, 738, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfVideoMode, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode) < 0) __PYX_ERR(0, 738, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfVideoMode) < 0) __PYX_ERR(0, 738, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfColor = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfColor_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfColor)) __PYX_ERR(0, 784, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfColor_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfColor) < 0) __PYX_ERR(0, 784, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfColor = &__pyx_type_9pysfml261_sfColor;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfColor) < 0) __PYX_ERR(0, 784, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfColor->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfColor->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfColor->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfColor, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfColor) < 0) __PYX_ERR(0, 784, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfColor) < 0) __PYX_ERR(0, 784, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfEvent = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfEvent_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfEvent)) __PYX_ERR(0, 831, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfEvent_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfEvent) < 0) __PYX_ERR(0, 831, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfEvent = &__pyx_type_9pysfml261_sfEvent;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfEvent) < 0) __PYX_ERR(0, 831, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfEvent->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfEvent->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfEvent->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfEvent, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfEvent) < 0) __PYX_ERR(0, 831, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfEvent) < 0) __PYX_ERR(0, 831, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfKeyboard_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard)) __PYX_ERR(0, 854, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfKeyboard_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard) < 0) __PYX_ERR(0, 854, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard = &__pyx_type_9pysfml261_sfKeyboard;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard) < 0) __PYX_ERR(0, 854, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfKeyboard, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard) < 0) __PYX_ERR(0, 854, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfKeyboard) < 0) __PYX_ERR(0, 854, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfFloatRect_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect)) __PYX_ERR(0, 911, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfFloatRect_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect) < 0) __PYX_ERR(0, 911, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect = &__pyx_type_9pysfml261_sfFloatRect;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect) < 0) __PYX_ERR(0, 911, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfFloatRect, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect) < 0) __PYX_ERR(0, 911, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfFloatRect) < 0) __PYX_ERR(0, 911, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfFont = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfFont_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfFont)) __PYX_ERR(0, 998, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfFont_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfFont) < 0) __PYX_ERR(0, 998, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfFont = &__pyx_type_9pysfml261_sfFont;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfFont) < 0) __PYX_ERR(0, 998, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfFont->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfFont->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfFont->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfFont, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfFont) < 0) __PYX_ERR(0, 998, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfFont) < 0) __PYX_ERR(0, 998, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfString = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfString_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfString)) __PYX_ERR(0, 1022, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfString_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfString) < 0) __PYX_ERR(0, 1022, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfString = &__pyx_type_9pysfml261_sfString;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfString) < 0) __PYX_ERR(0, 1022, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfString->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfString->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfString->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfString, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfString) < 0) __PYX_ERR(0, 1022, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfString) < 0) __PYX_ERR(0, 1022, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfText = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfText_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfText)) __PYX_ERR(0, 1070, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfText_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfText) < 0) __PYX_ERR(0, 1070, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfText = &__pyx_type_9pysfml261_sfText;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfText) < 0) __PYX_ERR(0, 1070, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfText->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfText->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfText->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfText, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfText) < 0) __PYX_ERR(0, 1070, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfText) < 0) __PYX_ERR(0, 1070, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfTexture = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfTexture_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfTexture)) __PYX_ERR(0, 1162, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfTexture_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfTexture) < 0) __PYX_ERR(0, 1162, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfTexture = &__pyx_type_9pysfml261_sfTexture;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfTexture) < 0) __PYX_ERR(0, 1162, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfTexture->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfTexture->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfTexture->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfTexture, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfTexture) < 0) __PYX_ERR(0, 1162, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfTexture) < 0) __PYX_ERR(0, 1162, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfSprite = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfSprite_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfSprite)) __PYX_ERR(0, 1263, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfSprite_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfSprite) < 0) __PYX_ERR(0, 1263, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfSprite = &__pyx_type_9pysfml261_sfSprite;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfSprite) < 0) __PYX_ERR(0, 1263, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfSprite->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfSprite->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfSprite->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfSprite, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfSprite) < 0) __PYX_ERR(0, 1263, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfSprite) < 0) __PYX_ERR(0, 1263, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_TransformSfSprite_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite)) __PYX_ERR(0, 1488, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_TransformSfSprite_spec, __pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite) < 0) __PYX_ERR(0, 1488, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite = &__pyx_type_9pysfml261_TransformSfSprite;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite) < 0) __PYX_ERR(0, 1488, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_TransformSfSprite, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite) < 0) __PYX_ERR(0, 1488, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_TransformSfSprite) < 0) __PYX_ERR(0, 1488, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfRectangleShape_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape)) __PYX_ERR(0, 1797, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfRectangleShape_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape) < 0) __PYX_ERR(0, 1797, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape = &__pyx_type_9pysfml261_sfRectangleShape;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape) < 0) __PYX_ERR(0, 1797, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfRectangleShape, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape) < 0) __PYX_ERR(0, 1797, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfRectangleShape) < 0) __PYX_ERR(0, 1797, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfCircleShape_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape)) __PYX_ERR(0, 1911, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfCircleShape_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape) < 0) __PYX_ERR(0, 1911, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape = &__pyx_type_9pysfml261_sfCircleShape;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape) < 0) __PYX_ERR(0, 1911, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfCircleShape, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape) < 0) __PYX_ERR(0, 1911, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfCircleShape) < 0) __PYX_ERR(0, 1911, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfView = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfView_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfView)) __PYX_ERR(0, 2013, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfView_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfView) < 0) __PYX_ERR(0, 2013, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfView = &__pyx_type_9pysfml261_sfView;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfView) < 0) __PYX_ERR(0, 2013, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfView->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfView->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfView->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfView, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfView) < 0) __PYX_ERR(0, 2013, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfView) < 0) __PYX_ERR(0, 2013, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfShader = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfShader_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfShader)) __PYX_ERR(0, 2094, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfShader_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfShader) < 0) __PYX_ERR(0, 2094, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfShader = &__pyx_type_9pysfml261_sfShader;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfShader) < 0) __PYX_ERR(0, 2094, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfShader->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfShader->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfShader->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfShader, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfShader) < 0) __PYX_ERR(0, 2094, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfShader) < 0) __PYX_ERR(0, 2094, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfRenderStates_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates)) __PYX_ERR(0, 2126, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfRenderStates_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates) < 0) __PYX_ERR(0, 2126, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates = &__pyx_type_9pysfml261_sfRenderStates;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates) < 0) __PYX_ERR(0, 2126, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfRenderStates, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates) < 0) __PYX_ERR(0, 2126, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderStates) < 0) __PYX_ERR(0, 2126, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfRenderWindow_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow)) __PYX_ERR(0, 2138, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfRenderWindow_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow) < 0) __PYX_ERR(0, 2138, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow = &__pyx_type_9pysfml261_sfRenderWindow;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow) < 0) __PYX_ERR(0, 2138, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfRenderWindow, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow) < 0) __PYX_ERR(0, 2138, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfRenderWindow) < 0) __PYX_ERR(0, 2138, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_sfMouse = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_sfMouse_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfMouse)) __PYX_ERR(0, 2268, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_sfMouse_spec, __pyx_mstate->__pyx_ptype_9pysfml261_sfMouse) < 0) __PYX_ERR(0, 2268, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_sfMouse = &__pyx_type_9pysfml261_sfMouse;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_sfMouse) < 0) __PYX_ERR(0, 2268, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_sfMouse->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_sfMouse->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_sfMouse->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_sfMouse, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfMouse) < 0) __PYX_ERR(0, 2268, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_sfMouse) < 0) __PYX_ERR(0, 2268, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_mstate->__pyx_ptype_9pysfml261_Camera2D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9pysfml261_Camera2D_spec, NULL); if (unlikely(!__pyx_mstate->__pyx_ptype_9pysfml261_Camera2D)) __PYX_ERR(0, 2308, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9pysfml261_Camera2D_spec, __pyx_mstate->__pyx_ptype_9pysfml261_Camera2D) < 0) __PYX_ERR(0, 2308, __pyx_L1_error)
  #else
  __pyx_mstate->__pyx_ptype_9pysfml261_Camera2D = &__pyx_type_9pysfml261_Camera2D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_mstate->__pyx_ptype_9pysfml261_Camera2D) < 0) __PYX_ERR(0, 2308, __pyx_L1_error)
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_mstate->__pyx_ptype_9pysfml261_Camera2D->tp_dictoffset && __pyx_mstate->__pyx_ptype_9pysfml261_Camera2D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_mstate->__pyx_ptype_9pysfml261_Camera2D->tp_getattro = PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_Camera2D, (PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_Camera2D) < 0) __PYX_ERR(0, 2308, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject *) __pyx_mstate->__pyx_ptype_9pysfml261_Camera2D) < 0) __PYX_ERR(0, 2308, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_pysfml261(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_pysfml261},
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
  {Py_mod_gil, Py_MOD_GIL_USED},
  #endif
  #if PY_VERSION_HEX >= 0x030C0000 && CYTHON_USE_MODULE_STATE
  {Py_mod_multiple_interpreters, Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED},
  #endif
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "pysfml261",
      0, /* m_doc */
    #if CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstatetype), /* m_size */
    #else
      (CYTHON_PEP489_MULTI_PHASE_INIT) ? 0 : -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif

/* PyModInitFuncType */
#ifndef CYTHON_NO_PYINIT_EXPORT
  #define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#else
  #ifdef __cplusplus
  #define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
  #else
  #define __Pyx_PyMODINIT_FUNC PyObject *
  #endif
#endif

__Pyx_PyMODINIT_FUNC PyInit_pysfml261(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_pysfml261(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
/* ModuleCreationPEP489 */
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x03090000
static PY_INT64_T __Pyx_GetCurrentInterpreterId(void) {
    {
        PyObject *module = PyImport_ImportModule("_interpreters"); // 3.13+ I think
        if (!module) {
            PyErr_Clear(); // just try the 3.8-3.12 version
            module = PyImport_ImportModule("_xxsubinterpreters");
            if (!module) goto bad;
        }
        PyObject *current = PyObject_CallMethod(module, "get_current", NULL);
        Py_DECREF(module);
        if (!current) goto bad;
        if (PyTuple_Check(current)) {
            PyObject *new_current = PySequence_GetItem(current, 0);
            Py_DECREF(current);
            current = new_current;
            if (!new_current) goto bad;
        }
        long long as_c_int = PyLong_AsLongLong(current);
        Py_DECREF(current);
        return as_c_int;
    }
  bad:
    PySys_WriteStderr("__Pyx_GetCurrentInterpreterId failed. Try setting the C define CYTHON_PEP489_MULTI_PHASE_INIT=0\n");
    return -1;
}
#endif
#if !CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    static PY_INT64_T main_interpreter_id = -1;
#if CYTHON_COMPILING_IN_GRAAL
    PY_INT64_T current_id = PyInterpreterState_GetIDFromThreadState(PyThreadState_Get());
#elif CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX >= 0x03090000
    PY_INT64_T current_id = PyInterpreterState_GetID(PyInterpreterState_Get());
#elif CYTHON_COMPILING_IN_LIMITED_API
    PY_INT64_T current_id = __Pyx_GetCurrentInterpreterId();
#else
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
#endif
    if (unlikely(current_id == -1)) {
        return -1;
    }
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return 0;
    } else if (unlikely(main_interpreter_id != current_id)) {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#endif
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    #if !CYTHON_USE_MODULE_STATE
    if (__Pyx_check_single_interpreter())
        return NULL;
    #endif
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_pysfml261(PyObject *__pyx_pyinit_module)
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  __pyx_mstatetype *__pyx_mstate = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'pysfml261' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #else
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_t_1 = __pyx_pyinit_module;
  Py_INCREF(__pyx_t_1);
  #else
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #if CYTHON_USE_MODULE_STATE
  {
    int add_module_result = __Pyx_State_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "pysfml261" pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = __pyx_t_1;
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
  PyUnstable_Module_SetGIL(__pyx_m, Py_MOD_GIL_USED);
  #endif
  __pyx_mstate = __pyx_mstate_global;
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_mstate->__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_mstate->__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_mstate->__pyx_d);
  __pyx_mstate->__pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_mstate->__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_cython_runtime = __Pyx_PyImport_AddModuleRef("cython_runtime"); if (unlikely(!__pyx_mstate->__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_mstate->__pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /* ImportRefnannyAPI */
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif

__Pyx_RefNannySetupContext("PyInit_pysfml261", 0);
  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_mstate->__pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_mstate->__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_mstate->__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_mstate->__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__pyx_module_is_main_pysfml261) {
    if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_name_2, __pyx_mstate_global->__pyx_n_u_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "pysfml261")) {
      if (unlikely((PyDict_SetItemString(modules, "pysfml261", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_CreateCodeObjects(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code(__pyx_mstate);
  (void)__Pyx_modinit_variable_export_code(__pyx_mstate);
  (void)__Pyx_modinit_function_export_code(__pyx_mstate);
  if (unlikely((__Pyx_modinit_type_init_code(__pyx_mstate) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_type_import_code(__pyx_mstate);
  (void)__Pyx_modinit_variable_import_code(__pyx_mstate);
  (void)__Pyx_modinit_function_import_code(__pyx_mstate);
  /*--- Execution code ---*/

  /* "pysfml261.pyx":37
 * 
 * 
 * def to_radians(float degrees) -> float:             # <<<<<<<<<<<<<<
 * 	cdef float pi = <float>M_PI
 * 	return pi * degrees / 180
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_1to_radians, 0, __pyx_mstate_global->__pyx_n_u_to_radians, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_to_radians, __pyx_t_3) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":42
 * 
 * 
 * def to_degrees(float radians) -> float:             # <<<<<<<<<<<<<<
 * 	cdef float pi = <float>M_PI
 * 	return radians  * 180 / pi
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_3to_degrees, 0, __pyx_mstate_global->__pyx_n_u_to_degrees, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[1])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_to_degrees, __pyx_t_2) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":70
 * 		self.y = y
 * 
 * 	def distance(self, MathPoint2f p) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11MathPoint2f_3distance, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathPoint2f_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[2])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathPoint2f, __pyx_mstate_global->__pyx_n_u_distance, __pyx_t_3) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11MathPoint2f_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathPoint2f___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[3])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11MathPoint2f_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathPoint2f___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[4])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":103
 * 		self.y = y
 * 
 * 	def sum(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x + v.x, self.y + v.y
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector2f) < 0) __PYX_ERR(0, 103, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_3sum, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_sum, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[5])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_sum, __pyx_t_2) < 0) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":108
 * 			)
 * 
 * 	def sub(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x - v.x, self.y - v.y
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector2f) < 0) __PYX_ERR(0, 108, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_5sub, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_sub, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[6])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_sub, __pyx_t_3) < 0) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":113
 * 			)
 * 
 * 	def scalar_product(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		return self.x * v.x + self.y * v.y
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 113, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_7scalar_product, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_scalar_product, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[7])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_scalar_product, __pyx_t_2) < 0) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":116
 * 		return self.x * v.x + self.y * v.y
 * 
 * 	def cosin(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_9cosin, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_cosin, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[8])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_cosin, __pyx_t_3) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":121
 * 		return sc / (m1 * m2)
 * 
 * 	def vector_product(self, MathVector2f v) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		return MathVector2f(
 * 			self.x * v.y, -self.y * v.x
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector2f) < 0) __PYX_ERR(0, 121, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_11vector_product, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_vector_product, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[9])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_vector_product, __pyx_t_2) < 0) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":126
 * 			)
 * 
 * 	def sinus(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef MathVector2f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 126, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_13sinus, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_sinus, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[10])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_sinus, __pyx_t_3) < 0) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":131
 * 		return vp.modul / (m1 * m2)
 * 
 * 	def distance(self, MathVector2f v) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 131, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_15distance, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[11])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_distance, __pyx_t_2) < 0) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":136
 * 			)
 * 
 * 	def multiply_num(self, float num) -> None:             # <<<<<<<<<<<<<<
 * 		self.x *= num
 * 		self.y *= num
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 136, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_17multiply_num, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_multiply_num, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[12])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_multiply_num, __pyx_t_3) < 0) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":140
 * 		self.y *= num
 * 
 * 	def basis(self) -> MathVector2f:             # <<<<<<<<<<<<<<
 * 		cdef float mod = self.modul
 * 		return MathVector2f(
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector2f) < 0) __PYX_ERR(0, 140, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_19basis, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_basis, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[13])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_basis, __pyx_t_2) < 0) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":146
 * 			)
 * 
 * 	def is_parallel(self, MathVector2f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.x / v.x == self.y / v.y
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 146, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_21is_parallel, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_is_parallel, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[14])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_is_parallel, __pyx_t_3) < 0) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":149
 * 		return self.x / v.x == self.y / v.y
 * 
 * 	def is_perpendicular(self, MathVector2f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.scalar_product(v) == 0
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 149, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_23is_perpendicular, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_is_perpendicular, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[15])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_is_perpendicular, __pyx_t_2) < 0) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":152
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector2f v,
 * 		bint degrees = True) -> float:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 152, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_25angle_between, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_angle_between, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[16])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_angle_between, __pyx_t_3) < 0) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":168
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_points(MathPoint2f p1, MathPoint2f p2) -> MathVector2f:
 * 		return MathVector2f(
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector2f) < 0) __PYX_ERR(0, 168, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_27from_points, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f_from_points, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[17])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_from_points, __pyx_t_2) < 0) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_4 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_5, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_from_points); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector2f, __pyx_mstate_global->__pyx_n_u_from_points, __pyx_t_2) < 0) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_29__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[18])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector2f_31__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector2f___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[19])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":206
 * 		self.z = z
 * 
 * 	def distance(self, MathPoint3f p) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - p.x, 2) + powf(self.y - p.y, 2) + powf(self.z - p.z, 2)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 206, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11MathPoint3f_3distance, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathPoint3f_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[20])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathPoint3f, __pyx_mstate_global->__pyx_n_u_distance, __pyx_t_4) < 0) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11MathPoint3f_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathPoint3f___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[21])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11MathPoint3f_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathPoint3f___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[22])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_4) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":250
 * 		self.z = z
 * 
 * 	def sum(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		return MathVector3f(
 * 			self.x + v.x, self.y + v.y, self.z + v.z
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector3f) < 0) __PYX_ERR(0, 250, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_3sum, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_sum, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[23])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_sum, __pyx_t_2) < 0) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":255
 * 			)
 * 
 * 	def sub(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		return MathVector3f(
 * 			self.x - v.x, self.y - v.y, self.z - v.z
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector3f) < 0) __PYX_ERR(0, 255, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_5sub, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_sub, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[24])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_sub, __pyx_t_4) < 0) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":260
 * 			)
 * 
 * 	def scalar_product(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		return self.x * v.x + self.y * v.y + self.z * v.z
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_7scalar_product, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_scalar_product, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[25])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_scalar_product, __pyx_t_2) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":263
 * 		return self.x * v.x + self.y * v.y + self.z * v.z
 * 
 * 	def cosin(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float sc = self.scalar_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 263, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_9cosin, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_cosin, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[26])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_cosin, __pyx_t_4) < 0) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":268
 * 		return sc / (m1 * m2)
 * 
 * 	def vector_product(self, MathVector3f v) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		cdef float x = self.y * v.z - self.z * v.y
 * 		cdef float y = -(self.x * v.z - self.z * v.x)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector3f) < 0) __PYX_ERR(0, 268, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_11vector_product, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_vector_product, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[27])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_vector_product, __pyx_t_2) < 0) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":274
 * 		return MathVector3f(x, y, z)
 * 
 * 	def sinus(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		cdef MathVector3f vp = self.vector_product(v)
 * 		cdef float m1 = self.modul, m2 = v.modul
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 274, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_13sinus, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_sinus, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[28])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_sinus, __pyx_t_4) < 0) __PYX_ERR(0, 274, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":279
 * 		return vp.modul / (m1 * m2)
 * 
 * 	def distance(self, MathVector3f v) -> float:             # <<<<<<<<<<<<<<
 * 		return sqrtf(
 * 			powf(self.x - v.x, 2) + powf(self.y - v.y, 2) + powf(self.z - v.z, 2)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 279, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_15distance, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[29])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_distance, __pyx_t_2) < 0) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":284
 * 			)
 * 
 * 	def multiply_num(self, float num) -> None:             # <<<<<<<<<<<<<<
 * 		self.x *= num
 * 		self.y *= num
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 284, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_17multiply_num, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_multiply_num, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[30])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_multiply_num, __pyx_t_4) < 0) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":289
 * 		self.z *= num
 * 
 * 	def basis(self) -> MathVector3f:             # <<<<<<<<<<<<<<
 * 		cdef float mod = self.modul
 * 		return MathVector3f(
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector3f) < 0) __PYX_ERR(0, 289, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_19basis, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_basis, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[31])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_basis, __pyx_t_2) < 0) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":295
 * 			)
 * 
 * 	def is_parallel(self, MathVector3f v) -> bool:             # <<<<<<<<<<<<<<
 * 		cdef float k = self.x / v.x
 * 		return k == self.y / v.y and k == self.z / v.z
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 295, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_21is_parallel, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_is_parallel, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[32])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_is_parallel, __pyx_t_4) < 0) __PYX_ERR(0, 295, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":299
 * 		return k == self.y / v.y and k == self.z / v.z
 * 
 * 	def is_perpendicular(self, MathVector3f v) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.scalar_product(v) == 0
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 299, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_23is_perpendicular, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_is_perpendicular, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[33])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_is_perpendicular, __pyx_t_2) < 0) __PYX_ERR(0, 299, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":302
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector3f v,
 * 		bint degrees = True) -> float:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 302, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_25angle_between, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_angle_between, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[34])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_angle_between, __pyx_t_4) < 0) __PYX_ERR(0, 302, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":318
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_points(MathPoint3f p1, MathPoint3f p2) -> MathVector3f:
 * 		return MathVector3f(
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_MathVector3f) < 0) __PYX_ERR(0, 318, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_27from_points, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f_from_points, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[35])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_from_points, __pyx_t_2) < 0) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_5 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_from_points); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_MathVector3f, __pyx_mstate_global->__pyx_n_u_from_points, __pyx_t_2) < 0) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_29__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[36])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_12MathVector3f_31__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_MathVector3f___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[37])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfSoundBuffer_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSoundBuffer___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[38])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfSoundBuffer_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSoundBuffer___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[39])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":386
 * 		del self.sound
 * 
 * 	def play(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.play()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 386, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_5play, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_play, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[40])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_play, __pyx_t_5) < 0) __PYX_ERR(0, 386, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":389
 * 		self.sound.play()
 * 
 * 	def pause(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.pause()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 389, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_7pause, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_pause, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[41])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_pause, __pyx_t_2) < 0) __PYX_ERR(0, 389, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":392
 * 		self.sound.pause()
 * 
 * 	def stop(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.stop()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_9stop, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_stop, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[42])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_stop, __pyx_t_5) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":395
 * 		self.sound.stop()
 * 
 * 	def get_status(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.sound.getStatus()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 395, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_11get_status, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_get_status, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[43])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_get_status, __pyx_t_2) < 0) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":398
 * 		return self.sound.getStatus()
 * 
 * 	def set_buffer(self, sfSoundBuffer buffer) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setBuffer(buffer.buffer[0])
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 398, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_13set_buffer, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_set_buffer, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[44])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_set_buffer, __pyx_t_5) < 0) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":401
 * 		self.sound.setBuffer(buffer.buffer[0])
 * 
 * 	def reset_buffer(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.resetBuffer()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 401, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_15reset_buffer, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_reset_buffer, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[45])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_reset_buffer, __pyx_t_2) < 0) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":404
 * 		self.sound.resetBuffer()
 * 
 * 	def set_relative_to(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 404, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_17set_relative_to, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_set_relative_to, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[46])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_mstate_global->__pyx_tuple[3]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_set_relative_to, __pyx_t_5) < 0) __PYX_ERR(0, 404, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":423
 * 		return volumeFactor
 * 
 * 	def get_position(self) -> tuple[float, float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector3f pos = self.sound.getPosition()
 * 		return (pos.x, pos.y, pos.z)
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float_float) < 0) __PYX_ERR(0, 423, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_19get_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[47])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_2) < 0) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":427
 * 		return (pos.x, pos.y, pos.z)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 427, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_21set_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_set_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[48])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_mstate_global->__pyx_tuple[3]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_set_position, __pyx_t_5) < 0) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":433
 * 		self.sound.setPosition(x, y, z)
 * 
 * 	def get_min_distance(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getMinDistance()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 433, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_23get_min_distance, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_get_min_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[49])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_get_min_distance, __pyx_t_2) < 0) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":436
 * 		return self.sound.getMinDistance()
 * 
 * 	def set_min_distance(self, float distance) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setMinDistance(distance)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 436, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_25set_min_distance, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_set_min_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[50])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_set_min_distance, __pyx_t_5) < 0) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":439
 * 		self.sound.setMinDistance(distance)
 * 
 * 	def get_attenuation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getAttenuation()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 439, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_27get_attenuation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_get_attenuation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[51])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_get_attenuation, __pyx_t_2) < 0) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":442
 * 		return self.sound.getAttenuation()
 * 
 * 	def set_attenuation(self, float attenuation) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setAttenuation(attenuation)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 442, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_29set_attenuation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_set_attenuation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[52])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_set_attenuation, __pyx_t_5) < 0) __PYX_ERR(0, 442, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":445
 * 		self.sound.setAttenuation(attenuation)
 * 
 * 	def get_loop(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.sound.getLoop()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 445, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_31get_loop, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_get_loop, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[53])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_get_loop, __pyx_t_2) < 0) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":448
 * 		return self.sound.getLoop()
 * 
 * 	def set_loop(self, bint loop) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setLoop(loop)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 448, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_33set_loop, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_set_loop, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[54])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_set_loop, __pyx_t_5) < 0) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":451
 * 		self.sound.setLoop(loop)
 * 
 * 	def get_volume(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getVolume()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 451, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_35get_volume, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_get_volume, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[55])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_get_volume, __pyx_t_2) < 0) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":454
 * 		return self.sound.getVolume()
 * 
 * 	def set_volume(self, float volume) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setVolume(volume)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 454, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_37set_volume, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_set_volume, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[56])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_set_volume, __pyx_t_5) < 0) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":457
 * 		self.sound.setVolume(volume)
 * 
 * 	def get_pitch(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sound.getPitch()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 457, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_39get_pitch, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_get_pitch, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[57])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_get_pitch, __pyx_t_2) < 0) __PYX_ERR(0, 457, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":460
 * 		return self.sound.getPitch()
 * 
 * 	def set_pitch(self, float pitch) -> None:             # <<<<<<<<<<<<<<
 * 		self.sound.setPitch(pitch)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_41set_pitch, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound_set_pitch, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[58])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSound, __pyx_mstate_global->__pyx_n_u_set_pitch, __pyx_t_5) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_43__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[59])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfSound_45__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSound___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[60])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_5) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":481
 * 			del self.music
 * 
 * 	def play(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.play()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 481, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_5play, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_play, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[61])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_play, __pyx_t_2) < 0) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":484
 * 		self.music.play()
 * 
 * 	def pause(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.pause()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 484, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_7pause, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_pause, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[62])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_pause, __pyx_t_5) < 0) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":487
 * 		self.music.pause()
 * 
 * 	def stop(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.stop()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 487, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_9stop, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_stop, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[63])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_stop, __pyx_t_2) < 0) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":490
 * 		self.music.stop()
 * 
 * 	def get_status(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.music.getStatus()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 490, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_11get_status, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_get_status, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[64])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_get_status, __pyx_t_5) < 0) __PYX_ERR(0, 490, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":493
 * 		return self.music.getStatus()
 * 
 * 	def set_relative_to(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 493, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_13set_relative_to, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_set_relative_to, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[65])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[3]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_set_relative_to, __pyx_t_2) < 0) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":512
 * 		return volumeFactor
 * 
 * 	def get_position(self) -> tuple[float, float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector3f pos = self.music.getPosition()
 * 		return (pos.x, pos.y, pos.z)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float_float) < 0) __PYX_ERR(0, 512, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_15get_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[66])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_5) < 0) __PYX_ERR(0, 512, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":516
 * 		return (pos.x, pos.y, pos.z)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_17set_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_set_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[67])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[3]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_set_position, __pyx_t_2) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":522
 * 		self.music.setPosition(x, y, z)
 * 
 * 	def get_min_distance(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getMinDistance()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 522, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_19get_min_distance, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_get_min_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[68])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_get_min_distance, __pyx_t_5) < 0) __PYX_ERR(0, 522, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":525
 * 		return self.music.getMinDistance()
 * 
 * 	def set_min_distance(self, float distance) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setMinDistance(distance)
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 525, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_21set_min_distance, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_set_min_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[69])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_set_min_distance, __pyx_t_2) < 0) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":528
 * 		self.music.setMinDistance(distance)
 * 
 * 	def get_attenuation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getAttenuation()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 528, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_23get_attenuation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_get_attenuation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[70])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_get_attenuation, __pyx_t_5) < 0) __PYX_ERR(0, 528, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":531
 * 		return self.music.getAttenuation()
 * 
 * 	def set_attenuation(self, float attenuation) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setAttenuation(attenuation)
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 531, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_25set_attenuation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_set_attenuation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[71])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_set_attenuation, __pyx_t_2) < 0) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":534
 * 		self.music.setAttenuation(attenuation)
 * 
 * 	def get_loop(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.music.getLoop()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 534, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_27get_loop, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_get_loop, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[72])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_get_loop, __pyx_t_5) < 0) __PYX_ERR(0, 534, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":537
 * 		return self.music.getLoop()
 * 
 * 	def set_loop(self, bint loop) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setLoop(loop)
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 537, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_29set_loop, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_set_loop, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[73])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_set_loop, __pyx_t_2) < 0) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":540
 * 		self.music.setLoop(loop)
 * 
 * 	def get_volume(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getVolume()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 540, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 540, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_31get_volume, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_get_volume, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[74])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 540, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_get_volume, __pyx_t_5) < 0) __PYX_ERR(0, 540, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":543
 * 		return self.music.getVolume()
 * 
 * 	def set_volume(self, float volume) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setVolume(volume)
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 543, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_33set_volume, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_set_volume, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[75])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 543, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_set_volume, __pyx_t_2) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":546
 * 		self.music.setVolume(volume)
 * 
 * 	def get_pitch(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.music.getPitch()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 546, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_35get_pitch, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_get_pitch, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[76])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_get_pitch, __pyx_t_5) < 0) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":549
 * 		return self.music.getPitch()
 * 
 * 	def set_pitch(self, float pitch) -> None:             # <<<<<<<<<<<<<<
 * 		self.music.setPitch(pitch)
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 549, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_37set_pitch, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic_set_pitch, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[77])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMusic, __pyx_mstate_global->__pyx_n_u_set_pitch, __pyx_t_2) < 0) __PYX_ERR(0, 549, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_39__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[78])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMusic_41__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMusic___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[79])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":563
 * 		del self.time
 * 
 * 	def asSeconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.time.asSeconds()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 563, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfTime_5asSeconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTime_asSeconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[80])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfTime, __pyx_mstate_global->__pyx_n_u_asSeconds, __pyx_t_5) < 0) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":566
 * 		return self.time.asSeconds()
 * 
 * 	def asMilliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.time.asMilliseconds()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 566, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfTime_7asMilliseconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTime_asMilliseconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[81])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfTime, __pyx_mstate_global->__pyx_n_u_asMilliseconds, __pyx_t_2) < 0) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":569
 * 		return self.time.asMilliseconds()
 * 
 * 	def asMicroseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.time.asMicroseconds()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 569, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfTime_9asMicroseconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTime_asMicroseconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[82])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfTime, __pyx_mstate_global->__pyx_n_u_asMicroseconds, __pyx_t_5) < 0) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfTime_11__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTime___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[83])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfTime_13__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTime___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[84])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_5) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":583
 * 		del self.clock
 * 
 * 	def get_elapsed_seconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asSeconds()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 583, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 583, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfClock_5get_elapsed_seconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfClock_get_elapsed_seconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[85])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 583, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfClock, __pyx_mstate_global->__pyx_n_u_get_elapsed_seconds, __pyx_t_2) < 0) __PYX_ERR(0, 583, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":586
 * 		return self.clock.getElapsedTime().asSeconds()
 * 
 * 	def get_elapsed_milliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asMilliseconds()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 586, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfClock_7get_elapsed_milliseconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfClock_get_elapsed_milliseconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[86])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfClock, __pyx_mstate_global->__pyx_n_u_get_elapsed_milliseconds, __pyx_t_5) < 0) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":589
 * 		return self.clock.getElapsedTime().asMilliseconds()
 * 
 * 	def get_elapsed_microseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.getElapsedTime().asMicroseconds()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 589, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfClock_9get_elapsed_microseconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfClock_get_elapsed_microseconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[87])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfClock, __pyx_mstate_global->__pyx_n_u_get_elapsed_microseconds, __pyx_t_2) < 0) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":592
 * 		return self.clock.getElapsedTime().asMicroseconds()
 * 
 * 	def restart_asseconds(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asSeconds()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 592, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfClock_11restart_asseconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfClock_restart_asseconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[88])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfClock, __pyx_mstate_global->__pyx_n_u_restart_asseconds, __pyx_t_5) < 0) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":595
 * 		return self.clock.restart().asSeconds()
 * 
 * 	def restart_asmilliseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asMilliseconds()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 595, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfClock_13restart_asmilliseconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfClock_restart_asmilliseconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[89])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfClock, __pyx_mstate_global->__pyx_n_u_restart_asmilliseconds, __pyx_t_2) < 0) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":598
 * 		return self.clock.restart().asMilliseconds()
 * 
 * 	def restart_asmicroseconds(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.clock.restart().asMicroseconds()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 598, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 598, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfClock_15restart_asmicroseconds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfClock_restart_asmicroseconds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[90])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 598, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfClock, __pyx_mstate_global->__pyx_n_u_restart_asmicroseconds, __pyx_t_5) < 0) __PYX_ERR(0, 598, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfClock_17__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfClock___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[91])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfClock_19__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfClock___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[92])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_5) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":614
 * 		del self.clock
 * 
 * 	def collect(self) -> None:             # <<<<<<<<<<<<<<
 * 		cdef float elapsed = self.clock.restart().asMilliseconds()
 * 		self.__buffer += elapsed
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 614, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13TimeCollector_5collect, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimeCollector_collect, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[93])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TimeCollector, __pyx_mstate_global->__pyx_n_u_collect, __pyx_t_2) < 0) __PYX_ERR(0, 614, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":618
 * 		self.__buffer += elapsed
 * 
 * 	def reset(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.__buffer = <float>0.0
 * 		self.clock.restart()
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 618, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13TimeCollector_7reset, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimeCollector_reset, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[94])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TimeCollector, __pyx_mstate_global->__pyx_n_u_reset, __pyx_t_5) < 0) __PYX_ERR(0, 618, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13TimeCollector_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimeCollector___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[95])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13TimeCollector_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimeCollector___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[96])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_5) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":647
 * 		del self.clock
 * 
 * 	def get_timed(self) -> float:             # <<<<<<<<<<<<<<
 * 		cdef float seconds = self.clock.restart().asSeconds()
 * 		return self.__value * seconds
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 647, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10TimedFloat_5get_timed, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimedFloat_get_timed, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[97])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TimedFloat, __pyx_mstate_global->__pyx_n_u_get_timed, __pyx_t_2) < 0) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":651
 * 		return self.__value * seconds
 * 
 * 	def get_value(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.__value
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 651, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10TimedFloat_7get_value, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimedFloat_get_value, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[98])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TimedFloat, __pyx_mstate_global->__pyx_n_u_get_value, __pyx_t_5) < 0) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":654
 * 		return self.__value
 * 
 * 	def set_value(self, float value) -> None:             # <<<<<<<<<<<<<<
 * 		self.__value = value
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 654, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10TimedFloat_9set_value, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimedFloat_set_value, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[99])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TimedFloat, __pyx_mstate_global->__pyx_n_u_set_value, __pyx_t_2) < 0) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10TimedFloat_11__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimedFloat___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[100])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10TimedFloat_13__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TimedFloat___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[101])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":677
 * 		self.__buffer = <float>0.0
 * 
 * 	def get_current_index(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef int index = <int>self.__buffer
 * 		cdef int maxIndex = self.length - 1
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 677, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 677, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8Animator_3get_current_index, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_Animator_get_current_index, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[102])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 677, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_Animator, __pyx_mstate_global->__pyx_n_u_get_current_index, __pyx_t_5) < 0) __PYX_ERR(0, 677, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8Animator_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_Animator___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[103])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8Animator_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_Animator___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[104])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_5) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfImage_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfImage___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[105])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfImage_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfImage___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[106])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_5) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":751
 * 		del self.__mode
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_desktop_mode() -> tuple[int, int, int]:
 * 		cdef VideoMode current = VideoMode.getDesktopMode()
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int_int) < 0) __PYX_ERR(0, 751, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfVideoMode_5get_desktop_mode, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfVideoMode_get_desktop_mode, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[107])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfVideoMode, __pyx_mstate_global->__pyx_n_u_get_desktop_mode, __pyx_t_2) < 0) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_3 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_4, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfVideoMode, __pyx_mstate_global->__pyx_n_u_get_desktop_mode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_4};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 751, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfVideoMode, __pyx_mstate_global->__pyx_n_u_get_desktop_mode, __pyx_t_2) < 0) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":756
 * 		return (current.width, current.height, current.bitsPerPixel)
 * 
 * 	def is_valid(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.__mode.isValid()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 756, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfVideoMode_7is_valid, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfVideoMode_is_valid, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[108])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfVideoMode, __pyx_mstate_global->__pyx_n_u_is_valid, __pyx_t_3) < 0) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfVideoMode_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfVideoMode___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[109])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfVideoMode_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfVideoMode___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[110])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfColor_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfColor___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[111])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfColor_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfColor___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[112])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":841
 * 		del self.event
 * 
 * 	def get_type(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.type
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 841, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 841, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfEvent_5get_type, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfEvent_get_type, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[113])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 841, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfEvent, __pyx_mstate_global->__pyx_n_u_get_type, __pyx_t_2) < 0) __PYX_ERR(0, 841, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":844
 * 		return self.event.type
 * 
 * 	def get_key_code(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.key.code
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 844, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 844, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfEvent_7get_key_code, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfEvent_get_key_code, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[114])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 844, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfEvent, __pyx_mstate_global->__pyx_n_u_get_key_code, __pyx_t_3) < 0) __PYX_ERR(0, 844, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":847
 * 		return self.event.key.code
 * 
 * 	def get_text_unicode(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.text.unicode
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 847, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfEvent_9get_text_unicode, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfEvent_get_text_unicode, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[115])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfEvent, __pyx_mstate_global->__pyx_n_u_get_text_unicode, __pyx_t_2) < 0) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":850
 * 		return self.event.text.unicode
 * 
 * 	def get_mouse_button(self) -> int:             # <<<<<<<<<<<<<<
 * 		return self.event.mouseButton.button
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 850, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfEvent_11get_mouse_button, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfEvent_get_mouse_button, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[116])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfEvent, __pyx_mstate_global->__pyx_n_u_get_mouse_button, __pyx_t_3) < 0) __PYX_ERR(0, 850, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfEvent_13__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfEvent___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[117])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfEvent_15__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfEvent___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[118])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":856
 * cdef class sfKeyboard:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_key_pressed(int key) -> bool:
 * 		return isKeyPressed(<Key>key)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 856, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10sfKeyboard_1is_key_pressed, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfKeyboard_is_key_pressed, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[119])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard, __pyx_mstate_global->__pyx_n_u_is_key_pressed, __pyx_t_2) < 0) __PYX_ERR(0, 856, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_4 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_5, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard, __pyx_mstate_global->__pyx_n_u_is_key_pressed); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 856, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard, __pyx_mstate_global->__pyx_n_u_is_key_pressed, __pyx_t_2) < 0) __PYX_ERR(0, 856, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":860
 * 		return isKeyPressed(<Key>key)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def localize(int scancode) -> int:
 * 		return localize(<Scancode>scancode)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 860, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10sfKeyboard_3localize, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfKeyboard_localize, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[120])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard, __pyx_mstate_global->__pyx_n_u_localize, __pyx_t_4) < 0) __PYX_ERR(0, 860, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_2 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_5 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard, __pyx_mstate_global->__pyx_n_u_localize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 860, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard, __pyx_mstate_global->__pyx_n_u_localize, __pyx_t_4) < 0) __PYX_ERR(0, 860, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10sfKeyboard_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfKeyboard___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[121])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_sfKeyboard, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_sfKeyboard__set_state(self, __pyx_state)
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_10sfKeyboard_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfKeyboard___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[122])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfKeyboard, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_4) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":926
 * 		del self.rect
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> bool:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 926, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_5contains, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect_contains, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[123])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, __pyx_mstate_global->__pyx_n_u_contains, __pyx_t_5) < 0) __PYX_ERR(0, 926, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":931
 * 		return self.rect.contains(x, y)
 * 
 * 	def intersects(self, sfFloatRect rect) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.rect.intersects(rect.rect[0])
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 931, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_7intersects, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect_intersects, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[124])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, __pyx_mstate_global->__pyx_n_u_intersects, __pyx_t_4) < 0) __PYX_ERR(0, 931, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":934
 * 		return self.rect.intersects(rect.rect[0])
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		return (pos.x, pos.y)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 934, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_9get_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[125])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_5) < 0) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":938
 * 		return (pos.x, pos.y)
 * 
 * 	def get_center(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = self.rect.getPosition()
 * 		cdef Vector2f size = self.rect.getSize()
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 938, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_11get_center, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect_get_center, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[126])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, __pyx_mstate_global->__pyx_n_u_get_center, __pyx_t_4) < 0) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":946
 * 		return (x, y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float x,
 * 		float y) -> None:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 946, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 946, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_13set_center, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect_set_center, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[127])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 946, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, __pyx_mstate_global->__pyx_n_u_set_center, __pyx_t_5) < 0) __PYX_ERR(0, 946, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":954
 * 		self.rect.left = x - size.x * k
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = self.rect.getSize()
 * 		return (size.x, size.y)
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 954, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 954, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_15get_size, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect_get_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[128])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 954, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, __pyx_mstate_global->__pyx_n_u_get_size, __pyx_t_4) < 0) __PYX_ERR(0, 954, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":958
 * 		return (size.x, size.y)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 958, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_17move, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect_move, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[129])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFloatRect, __pyx_mstate_global->__pyx_n_u_move, __pyx_t_5) < 0) __PYX_ERR(0, 958, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_19__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[130])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_11sfFloatRect_21__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFloatRect___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[131])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_5) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":1015
 * 			del self.font
 * 
 * 	def set_smooth(self, bint smooth) -> None:             # <<<<<<<<<<<<<<
 * 		self.font.setSmooth(smooth)
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1015, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfFont_5set_smooth, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFont_set_smooth, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[132])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFont, __pyx_mstate_global->__pyx_n_u_set_smooth, __pyx_t_4) < 0) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1018
 * 		self.font.setSmooth(smooth)
 * 
 * 	def is_smooth(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.font.isSmooth()
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1018, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1018, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfFont_7is_smooth, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFont_is_smooth, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[133])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1018, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfFont, __pyx_mstate_global->__pyx_n_u_is_smooth, __pyx_t_5) < 0) __PYX_ERR(0, 1018, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfFont_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFont___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[134])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfFont_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfFont___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[135])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_5) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":1024
 * cdef class sfString:
 * 
 * 	CACHE_SIZE = 128             # <<<<<<<<<<<<<<
 * 	RESULTS = {}
 * 
*/
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_CACHE_SIZE, __pyx_mstate_global->__pyx_int_128) < 0) __PYX_ERR(0, 1024, __pyx_L1_error)

  /* "pysfml261.pyx":1025
 * 
 * 	CACHE_SIZE = 128
 * 	RESULTS = {}             # <<<<<<<<<<<<<<
 * 
 * 	cdef String* txt
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_RESULTS, __pyx_t_5) < 0) __PYX_ERR(0, 1025, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":1035
 * 		del self.txt
 * 
 * 	def clear(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.txt.clear()
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1035, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1035, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfString_5clear, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfString_clear, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[136])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1035, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_clear, __pyx_t_4) < 0) __PYX_ERR(0, 1035, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1038
 * 		self.txt.clear()
 * 
 * 	def is_empty(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.txt.isEmpty()
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1038, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1038, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfString_7is_empty, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfString_is_empty, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[137])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1038, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_is_empty, __pyx_t_5) < 0) __PYX_ERR(0, 1038, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":1041
 * 		return self.txt.isEmpty()
 * 
 * 	def as_pystring(self) -> str:             # <<<<<<<<<<<<<<
 * 		return self.txt.toAnsiString().c_str().decode('utf-8')
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_str) < 0) __PYX_ERR(0, 1041, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfString_9as_pystring, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfString_as_pystring, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[138])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_as_pystring, __pyx_t_4) < 0) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1044
 * 		return self.txt.toAnsiString().c_str().decode('utf-8')
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def from_pystring(str pystring) -> sfString:
 * 		if pystring in sfString.RESULTS:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1044, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfString) < 0) __PYX_ERR(0, 1044, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfString_11from_pystring, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfString_from_pystring, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[139])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1044, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_from_pystring, __pyx_t_5) < 0) __PYX_ERR(0, 1044, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_4 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_3 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_from_pystring); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1044, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1044, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_from_pystring, __pyx_t_5) < 0) __PYX_ERR(0, 1044, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":1058
 * 			return sfString.RESULTS[pystring]
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def drop_cache() -> None:
 * 		sfString.RESULTS.clear()
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1058, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfString_13drop_cache, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfString_drop_cache, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[140])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_drop_cache, __pyx_t_3) < 0) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_2 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_4, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_drop_cache); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_4};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1058, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_drop_cache, __pyx_t_3) < 0) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1062
 * 		sfString.RESULTS.clear()
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def set_cache_size(int size) -> None:
 * 		sfString.CACHE_SIZE = size
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1062, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1062, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfString_15set_cache_size, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfString_set_cache_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[141])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1062, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_set_cache_size, __pyx_t_2) < 0) __PYX_ERR(0, 1062, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_4 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_5, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_set_cache_size); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1062, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfString, __pyx_mstate_global->__pyx_n_u_set_cache_size, __pyx_t_2) < 0) __PYX_ERR(0, 1062, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfString_19__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfString___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[142])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfString_21__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfString___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[143])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1081
 * 		del self.text
 * 
 * 	def get_pystring(self) -> str:             # <<<<<<<<<<<<<<
 * 		cdef String text = <const String>self.text.getString()
 * 		return text.toAnsiString().c_str().decode('utf-8')
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_str) < 0) __PYX_ERR(0, 1081, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_5get_pystring, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_get_pystring, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[144])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_get_pystring, __pyx_t_4) < 0) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1085
 * 		return text.toAnsiString().c_str().decode('utf-8')
 * 
 * 	def get_scale(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f scale = <const Vector2f>self.text.getScale()
 * 		return (scale.x, scale.y)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 1085, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_7get_scale, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_get_scale, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[145])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_get_scale, __pyx_t_2) < 0) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1089
 * 		return (scale.x, scale.y)
 * 
 * 	def set_scale(self,             # <<<<<<<<<<<<<<
 * 		float kx = 1,
 * 		float ky = 1) -> None:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1089, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_9set_scale, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_set_scale, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[146])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[5]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_set_scale, __pyx_t_4) < 0) __PYX_ERR(0, 1089, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1094
 * 		self.text.setScale(kx, ky)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.text.getRotation()
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1094, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 1094, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_11get_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_get_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[147])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1094, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_get_rotation, __pyx_t_2) < 0) __PYX_ERR(0, 1094, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1097
 * 		return self.text.getRotation()
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setRotation(degrees)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1097, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1097, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_13set_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_set_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[148])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1097, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_set_rotation, __pyx_t_4) < 0) __PYX_ERR(0, 1097, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1100
 * 		self.text.setRotation(degrees)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.text.getPosition()
 * 		return (pos.x, pos.y)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 1100, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_15get_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[149])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_2) < 0) __PYX_ERR(0, 1100, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1104
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_17set_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_set_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[150])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_set_position, __pyx_t_4) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1109
 * 		self.text.setPosition(left, top)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1109, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_19move, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_move, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[151])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_move, __pyx_t_2) < 0) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1114
 * 		self.text.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.rotate(degrees)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1114, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_21rotate, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_rotate, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[152])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_rotate, __pyx_t_4) < 0) __PYX_ERR(0, 1114, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1117
 * 		self.text.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1117, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_23contains, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_contains, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[153])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[6]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_contains, __pyx_t_2) < 0) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1128
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1128, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_25intersects, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_intersects, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[154])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_intersects, __pyx_t_4) < 0) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1138
 * 		return bounds.intersects(rect.rect[0])
 * 
 * 	def set_string(self, sfString txt) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setString(txt.txt[0])
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1138, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_27set_string, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_set_string, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[155])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_set_string, __pyx_t_2) < 0) __PYX_ERR(0, 1138, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1141
 * 		self.text.setString(txt.txt[0])
 * 
 * 	def set_font(self, sfFont font) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setFont(font.font[0])
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1141, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_29set_font, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_set_font, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[156])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_set_font, __pyx_t_4) < 0) __PYX_ERR(0, 1141, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1144
 * 		self.text.setFont(font.font[0])
 * 
 * 	def set_character_size(self, unsigned int size) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setCharacterSize(size)
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1144, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_31set_character_size, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_set_character_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[157])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_set_character_size, __pyx_t_2) < 0) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1147
 * 		self.text.setCharacterSize(size)
 * 
 * 	def set_style(self, unsigned int style) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setStyle(style)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1147, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_33set_style, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_set_style, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[158])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_set_style, __pyx_t_4) < 0) __PYX_ERR(0, 1147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1150
 * 		self.text.setStyle(style)
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		self.text.setFillColor(color.color[0])
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1150, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_35set_fill_color, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_set_fill_color, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[159])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_set_fill_color, __pyx_t_2) < 0) __PYX_ERR(0, 1150, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1153
 * 		self.text.setFillColor(color.color[0])
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.text.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 1153, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_37get_local_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_get_local_bounds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[160])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_get_local_bounds, __pyx_t_4) < 0) __PYX_ERR(0, 1153, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1157
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.text.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 1157, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_39get_global_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText_get_global_bounds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[161])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfText, __pyx_mstate_global->__pyx_n_u_get_global_bounds, __pyx_t_2) < 0) __PYX_ERR(0, 1157, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_41__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[162])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfText_43__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfText___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[163])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1180
 * 			del self.texture
 * 
 * 	def get_size(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2u size = self.texture.getSize()
 * 		return (size.x, size.y)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int) < 0) __PYX_ERR(0, 1180, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_9sfTexture_5get_size, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTexture_get_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[164])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfTexture, __pyx_mstate_global->__pyx_n_u_get_size, __pyx_t_4) < 0) __PYX_ERR(0, 1180, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1184
 * 		return (size.x, size.y)
 * 
 * 	def set_smooth(self, bint smooth) -> None:             # <<<<<<<<<<<<<<
 * 		self.texture.setSmooth(smooth)
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1184, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_9sfTexture_7set_smooth, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTexture_set_smooth, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[165])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfTexture, __pyx_mstate_global->__pyx_n_u_set_smooth, __pyx_t_2) < 0) __PYX_ERR(0, 1184, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1187
 * 		self.texture.setSmooth(smooth)
 * 
 * 	def is_smooth(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.texture.isSmooth()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1187, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_9sfTexture_9is_smooth, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTexture_is_smooth, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[166])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfTexture, __pyx_mstate_global->__pyx_n_u_is_smooth, __pyx_t_4) < 0) __PYX_ERR(0, 1187, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1190
 * 		return self.texture.isSmooth()
 * 
 * 	def set_srgb(self, bint srgb) -> None:             # <<<<<<<<<<<<<<
 * 		self.texture.setSrgb(srgb)
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1190, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_9sfTexture_11set_srgb, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTexture_set_srgb, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[167])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfTexture, __pyx_mstate_global->__pyx_n_u_set_srgb, __pyx_t_2) < 0) __PYX_ERR(0, 1190, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1193
 * 		self.texture.setSrgb(srgb)
 * 
 * 	def is_srgb(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.texture.isSrgb()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1193, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_9sfTexture_13is_srgb, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTexture_is_srgb, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[168])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfTexture, __pyx_mstate_global->__pyx_n_u_is_srgb, __pyx_t_4) < 0) __PYX_ERR(0, 1193, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_9sfTexture_15__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTexture___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[169])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_9sfTexture_17__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfTexture___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[170])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_4) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1290
 * 			del self.sprite
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local_bounds = True) -> bool:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1290, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_5intersects, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_intersects, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[171])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_intersects, __pyx_t_2) < 0) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1302
 * 		return myRect.intersects(theyRect)
 * 
 * 	def intersects_rect(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local_bounds = True) -> bool:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1302, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_7intersects_rect, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_intersects_rect, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[172])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_intersects_rect, __pyx_t_4) < 0) __PYX_ERR(0, 1302, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1312
 * 		return myRect.intersects(rect.rect[0])
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1312, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_9contains, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_contains, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[173])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[6]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_contains, __pyx_t_2) < 0) __PYX_ERR(0, 1312, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1323
 * 		return rect.contains(x, y)
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1323, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_11move, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_move, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[174])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_move, __pyx_t_4) < 0) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1328
 * 		self.sprite.move(dx, dy)
 * 
 * 	def rotate(self, float degrees = 0) -> None:             # <<<<<<<<<<<<<<
 * 		self.sprite.rotate(degrees)
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1328, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_13rotate, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_rotate, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[175])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[7]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_rotate, __pyx_t_2) < 0) __PYX_ERR(0, 1328, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1331
 * 		self.sprite.rotate(degrees)
 * 
 * 	def collide_shift_h(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1331, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_15collide_shift_h, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_collide_shift_h, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[176])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_collide_shift_h, __pyx_t_4) < 0) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1357
 * 		return True
 * 
 * 	def collide_shift_v(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		bint local = True) -> bool:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1357, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_17collide_shift_v, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_collide_shift_v, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[177])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_collide_shift_v, __pyx_t_2) < 0) __PYX_ERR(0, 1357, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1383
 * 		return True
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = self.sprite.getLocalBounds()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 1383, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_19get_local_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_get_local_bounds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[178])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_get_local_bounds, __pyx_t_4) < 0) __PYX_ERR(0, 1383, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1387
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = self.sprite.getGlobalBounds()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 1387, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_21get_global_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_get_global_bounds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[179])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_get_global_bounds, __pyx_t_2) < 0) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1391
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.sprite.getRotation()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 1391, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_23get_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_get_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[180])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_get_rotation, __pyx_t_4) < 0) __PYX_ERR(0, 1391, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1394
 * 		return self.sprite.getRotation()
 * 
 * 	def set_rotation(self, float degrees = 0) -> None:             # <<<<<<<<<<<<<<
 * 		self.sprite.setRotation(degrees)
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1394, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_25set_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_set_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[181])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[7]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_set_rotation, __pyx_t_2) < 0) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1397
 * 		self.sprite.setRotation(degrees)
 * 
 * 	def get_scale(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
 * 		return (scale.x, scale.y)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 1397, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_27get_scale, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_get_scale, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[182])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_get_scale, __pyx_t_4) < 0) __PYX_ERR(0, 1397, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1401
 * 		return (scale.x, scale.y)
 * 
 * 	def set_scale(self,             # <<<<<<<<<<<<<<
 * 		float kx = 1,
 * 		float ky = 1) -> None:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1401, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_29set_scale, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_set_scale, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[183])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[5]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_set_scale, __pyx_t_2) < 0) __PYX_ERR(0, 1401, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1406
 * 		self.sprite.setScale(kx, ky)
 * 
 * 	def get_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.sprite.getColor()
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfColor) < 0) __PYX_ERR(0, 1406, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_31get_color, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_get_color, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[184])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_get_color, __pyx_t_4) < 0) __PYX_ERR(0, 1406, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1410
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
 * 
 * 	def set_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr
 * 		clr.r = color.r
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1410, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_33set_color, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_set_color, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[185])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_set_color, __pyx_t_2) < 0) __PYX_ERR(0, 1410, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1418
 * 		self.sprite.setColor(clr)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		return (pos.x, pos.y)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1418, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 1418, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_35get_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[186])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1418, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_4) < 0) __PYX_ERR(0, 1418, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1422
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1422, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_37set_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_set_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[187])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_set_position, __pyx_t_2) < 0) __PYX_ERR(0, 1422, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1427
 * 		self.sprite.setPosition(left, top)
 * 
 * 	def get_center(self, bint local=True) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect
 * 		cdef float k = <float>.5
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 1427, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_39get_center, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_get_center, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[188])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_get_center, __pyx_t_4) < 0) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1438
 * 		return (center_x, center_y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0,
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1438, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_41set_center, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_set_center, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[189])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[6]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_set_center, __pyx_t_2) < 0) __PYX_ERR(0, 1438, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1452
 * 		self.sprite.setPosition(left, top)
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		color.a = a
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1452, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_43set_alpha, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_set_alpha, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[190])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_set_alpha, __pyx_t_4) < 0) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1457
 * 		self.sprite.setColor(color)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.sprite.getColor()
 * 		return color.a
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 1457, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_45get_alpha, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_get_alpha, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[191])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_get_alpha, __pyx_t_2) < 0) __PYX_ERR(0, 1457, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1461
 * 		return color.a
 * 
 * 	def in_area(self,             # <<<<<<<<<<<<<<
 * 		float x1 = 0,
 * 		float x2 = 0,
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1461, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_47in_area, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_in_area, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[192])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[8]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_in_area, __pyx_t_4) < 0) __PYX_ERR(0, 1461, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1480
 * 		return rect.intersects(area)
 * 
 * 	def clone(self, sfTexture texture) -> sfSprite:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.sprite.getPosition()
 * 		cdef Vector2f scale = <const Vector2f>self.sprite.getScale()
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfSprite) < 0) __PYX_ERR(0, 1480, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_49clone, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite_clone, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[193])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfSprite, __pyx_mstate_global->__pyx_n_u_clone, __pyx_t_2) < 0) __PYX_ERR(0, 1480, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_51__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[194])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfSprite_53__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfSprite___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[195])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1490
 * cdef class TransformSfSprite:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def keep_their_distance(
 * 		sfSprite sprite1,
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1490, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_1keep_their_distance, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_keep_their_dis, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[196])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[9]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_keep_their_distance, __pyx_t_4) < 0) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_2 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_5 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_keep_their_distance); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1490, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_keep_their_distance, __pyx_t_4) < 0) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1545
 * 		return True
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def similar(
 * 		sfSprite sprite1,
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1545, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_3similar, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_similar, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[197])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_mstate_global->__pyx_tuple[10]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_similar, __pyx_t_5) < 0) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_4 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_3 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_similar); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1545, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_similar, __pyx_t_5) < 0) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":1572
 * 				resizeSprite(sprite1.sprite, rect2.width, rect2.height)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def put_like(
 * 		sfSprite sprite1,
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1572, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_5put_like, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_put_like, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[198])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[10]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_put_like, __pyx_t_3) < 0) __PYX_ERR(0, 1572, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_2 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_4, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_put_like); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_4};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1572, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_put_like, __pyx_t_3) < 0) __PYX_ERR(0, 1572, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1612
 * 			sprite1.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def swap(
 * 		sfSprite sprite1,
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1612, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_7swap, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_swap, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[199])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[11]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_swap, __pyx_t_2) < 0) __PYX_ERR(0, 1612, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_4 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_5, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_swap); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1612, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_swap, __pyx_t_2) < 0) __PYX_ERR(0, 1612, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1634
 * 			resizeSprite(sprite2.sprite, rect1.width, rect1.height)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_distance(
 * 		sfSprite sprite1,
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 1634, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_9get_distance, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_get_distance, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[200])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_get_distance, __pyx_t_4) < 0) __PYX_ERR(0, 1634, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_2 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_5 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_get_distance); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_get_distance, __pyx_t_4) < 0) __PYX_ERR(0, 1634, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1656
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def scale(
 * 		sfSprite sprite,
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1656, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1656, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_11scale, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_scale, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[201])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1656, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_mstate_global->__pyx_tuple[12]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_scale, __pyx_t_5) < 0) __PYX_ERR(0, 1656, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_4 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_3 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_scale); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1656, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_scale, __pyx_t_5) < 0) __PYX_ERR(0, 1656, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":1669
 * 			scaleSpriteKeepCenter(sprite.sprite, kx, ky, local)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def resize(
 * 		sfSprite sprite,
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1669, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_13resize, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_resize, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[202])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[13]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_resize, __pyx_t_3) < 0) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_2 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_4, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_resize); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_4};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_resize, __pyx_t_3) < 0) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1705
 * 			sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def flip(
 * 		sfSprite sprite,
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1705, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_15flip, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_flip, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[203])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[11]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_flip, __pyx_t_2) < 0) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_4 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_5, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_flip); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_flip, __pyx_t_2) < 0) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1732
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def set_rotation_around_center(
 * 		sfSprite sprite,
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1732, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_17set_rotation_around_center, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_set_rotation_a, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[204])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[14]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_set_rotation_around_center, __pyx_t_4) < 0) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_2 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_5 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_set_rotation_around_center); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_set_rotation_around_center, __pyx_t_4) < 0) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1758
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def rotate_around_center(
 * 		sfSprite sprite,
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1758, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_19rotate_around_center, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_rotate_around, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[205])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_mstate_global->__pyx_tuple[14]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_rotate_around_center, __pyx_t_5) < 0) __PYX_ERR(0, 1758, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_4 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_3 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_rotate_around_center); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_rotate_around_center, __pyx_t_5) < 0) __PYX_ERR(0, 1758, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":1784
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def move_with_angle(
 * 		sfSprite sprite,
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1784, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_21move_with_angle, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite_move_with_angl, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[206])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_move_with_angle, __pyx_t_3) < 0) __PYX_ERR(0, 1784, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_2 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_4, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_move_with_angle); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_4};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_move_with_angle, __pyx_t_3) < 0) __PYX_ERR(0, 1784, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_23__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite___reduce_cytho, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[207])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_TransformSfSprite, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_TransformSfSprite__set_state(self, __pyx_state)
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_17TransformSfSprite_25__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_TransformSfSprite___setstate_cyt, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[208])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_TransformSfSprite, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1822
 * 		del self.shape
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1822, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_5move, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_move, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[209])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_move, __pyx_t_2) < 0) __PYX_ERR(0, 1822, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1827
 * 		self.shape.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.rotate(degrees)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1827, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_7rotate, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_rotate, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[210])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_rotate, __pyx_t_3) < 0) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1830
 * 		self.shape.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1830, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_9contains, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_contains, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[211])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[6]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_contains, __pyx_t_2) < 0) __PYX_ERR(0, 1830, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1841
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1841, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1841, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_11intersects, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_intersects, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[212])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1841, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_intersects, __pyx_t_3) < 0) __PYX_ERR(0, 1841, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1851
 * 		return r.intersects(rect.rect[0])
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1851, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_13set_alpha, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_set_alpha, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[213])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_set_alpha, __pyx_t_2) < 0) __PYX_ERR(0, 1851, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1856
 * 		self.shape.setFillColor(clr)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return clr.a
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 1856, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_15get_alpha, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_get_alpha, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[214])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_get_alpha, __pyx_t_3) < 0) __PYX_ERR(0, 1856, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1860
 * 		return clr.a
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1860, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_17set_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_set_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[215])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_set_position, __pyx_t_2) < 0) __PYX_ERR(0, 1860, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1865
 * 		self.shape.setPosition(left, top)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return (pos.x, pos.y)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 1865, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_19get_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[216])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_3) < 0) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1869
 * 		return (pos.x, pos.y)
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1869, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_21set_fill_color, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_set_fill_color, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[217])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_set_fill_color, __pyx_t_2) < 0) __PYX_ERR(0, 1869, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1873
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def get_fill_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfColor) < 0) __PYX_ERR(0, 1873, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_23get_fill_color, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_get_fill_color, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[218])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_get_fill_color, __pyx_t_3) < 0) __PYX_ERR(0, 1873, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1877
 * 		return sfColor(clr.r, clr.g, clr.b, clr.a)
 * 
 * 	def set_size(self,             # <<<<<<<<<<<<<<
 * 		float width,
 * 		float height) -> None:
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1877, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_25set_size, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_set_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[219])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_set_size, __pyx_t_2) < 0) __PYX_ERR(0, 1877, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1886
 * 		self.shape.setSize(size[0])
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
 * 		return (size.x, size.y)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 1886, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_27get_size, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_get_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[220])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_get_size, __pyx_t_3) < 0) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1890
 * 		return (size.x, size.y)
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRotation(degrees)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1890, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_29set_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_set_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[221])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_set_rotation, __pyx_t_2) < 0) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1893
 * 		self.shape.setRotation(degrees)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRotation()
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 1893, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_31get_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_get_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[222])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_get_rotation, __pyx_t_3) < 0) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1896
 * 		return self.shape.getRotation()
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1896, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 1896, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_33get_global_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_get_global_boun, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[223])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1896, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_get_global_bounds, __pyx_t_2) < 0) __PYX_ERR(0, 1896, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1900
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1900, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 1900, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_35get_local_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_get_local_bound, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[224])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1900, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_get_local_bounds, __pyx_t_3) < 0) __PYX_ERR(0, 1900, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1904
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def clone(self) -> sfRectangleShape:             # <<<<<<<<<<<<<<
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f size = <const Vector2f>self.shape.getSize()
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1904, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfRectangleShape) < 0) __PYX_ERR(0, 1904, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_37clone, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape_clone, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[225])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1904, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRectangleShape, __pyx_mstate_global->__pyx_n_u_clone, __pyx_t_2) < 0) __PYX_ERR(0, 1904, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_39__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[226])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_16sfRectangleShape_41__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRectangleShape___setstate_cyth, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[227])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1931
 * 		del self.shape
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1931, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_5move, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_move, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[228])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_move, __pyx_t_3) < 0) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1936
 * 		self.shape.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.rotate(degrees)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1936, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_7rotate, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_rotate, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[229])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_rotate, __pyx_t_2) < 0) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1939
 * 		self.shape.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1939, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_9contains, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_contains, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[230])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[6]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_contains, __pyx_t_3) < 0) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1950
 * 		return rect.contains(x, y)
 * 
 * 	def intersects(self,             # <<<<<<<<<<<<<<
 * 		sfFloatRect rect,
 * 		bint local = True) -> bool:
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 1950, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_11intersects, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_intersects, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[231])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_intersects, __pyx_t_2) < 0) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1960
 * 		return r.intersects(rect.rect[0])
 * 
 * 	def set_alpha(self, int a) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		clr.a = a
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1960, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_13set_alpha, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_set_alpha, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[232])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_set_alpha, __pyx_t_3) < 0) __PYX_ERR(0, 1960, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1965
 * 		self.shape.setFillColor(clr)
 * 
 * 	def get_alpha(self) -> int:             # <<<<<<<<<<<<<<
 * 		cdef Color clr = <const Color>self.shape.getFillColor()
 * 		return clr.a
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1965, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_int) < 0) __PYX_ERR(0, 1965, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_15get_alpha, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_get_alpha, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[233])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1965, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_get_alpha, __pyx_t_2) < 0) __PYX_ERR(0, 1965, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1969
 * 		return clr.a
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRotation(degrees)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1969, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1969, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_17set_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_set_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[234])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1969, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_set_rotation, __pyx_t_3) < 0) __PYX_ERR(0, 1969, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1972
 * 		self.shape.setRotation(degrees)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRotation()
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 1972, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_19get_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_get_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[235])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_get_rotation, __pyx_t_2) < 0) __PYX_ERR(0, 1972, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1975
 * 		return self.shape.getRotation()
 * 
 * 	def set_fill_color(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const Color* clr = &color.color[0]
 * 		self.shape.setFillColor(clr[0])
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1975, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1975, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_21set_fill_color, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_set_fill_color, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[236])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1975, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_set_fill_color, __pyx_t_3) < 0) __PYX_ERR(0, 1975, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1979
 * 		self.shape.setFillColor(clr[0])
 * 
 * 	def get_fill_color(self) -> sfColor:             # <<<<<<<<<<<<<<
 * 		cdef Color color = <const Color>self.shape.getFillColor()
 * 		return sfColor(color.r, color.g, color.b, color.a)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1979, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfColor) < 0) __PYX_ERR(0, 1979, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_23get_fill_color, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_get_fill_color, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[237])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1979, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_get_fill_color, __pyx_t_2) < 0) __PYX_ERR(0, 1979, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1983
 * 		return sfColor(color.r, color.g, color.b, color.a)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1983, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_25set_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_set_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[238])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_set_position, __pyx_t_3) < 0) __PYX_ERR(0, 1983, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1988
 * 		self.shape.setPosition(left, top)
 * 
 * 	def get_position(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
 * 		return (pos.x, pos.y)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1988, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 1988, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_27get_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[239])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1988, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_2) < 0) __PYX_ERR(0, 1988, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1992
 * 		return (pos.x, pos.y)
 * 
 * 	def set_radius(self, float radius) -> None:             # <<<<<<<<<<<<<<
 * 		self.shape.setRadius(radius)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 1992, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_29set_radius, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_set_radius, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[240])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_set_radius, __pyx_t_3) < 0) __PYX_ERR(0, 1992, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":1995
 * 		self.shape.setRadius(radius)
 * 
 * 	def get_radius(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.shape.getRadius()
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1995, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 1995, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_31get_radius, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_get_radius, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[241])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1995, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_get_radius, __pyx_t_2) < 0) __PYX_ERR(0, 1995, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":1998
 * 		return self.shape.getRadius()
 * 
 * 	def get_local_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getLocalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1998, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 1998, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_33get_local_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_get_local_bounds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[242])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1998, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_get_local_bounds, __pyx_t_3) < 0) __PYX_ERR(0, 1998, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2002
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def get_global_bounds(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect bounds = self.shape.getGlobalBounds()
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 2002, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_35get_global_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_get_global_bounds, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[243])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_get_global_bounds, __pyx_t_2) < 0) __PYX_ERR(0, 2002, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2006
 * 		return sfFloatRect(bounds.left, bounds.top, bounds.width, bounds.height)
 * 
 * 	def clone(self) -> sfCircleShape:             # <<<<<<<<<<<<<<
 * 		cdef sfColor clr = self.get_fill_color()
 * 		cdef Vector2f pos = <const Vector2f>self.shape.getPosition()
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2006, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfCircleShape) < 0) __PYX_ERR(0, 2006, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_37clone, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape_clone, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[244])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2006, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfCircleShape, __pyx_mstate_global->__pyx_n_u_clone, __pyx_t_3) < 0) __PYX_ERR(0, 2006, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_39__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[245])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_13sfCircleShape_41__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfCircleShape___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[246])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2029
 * 		del self.view
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		float dx = 0,
 * 		float dy = 0) -> None:
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2029, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_5move, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_move, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[247])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_move, __pyx_t_2) < 0) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2034
 * 		self.view.move(dx, dy)
 * 
 * 	def rotate(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.rotate(degrees)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2034, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2034, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_7rotate, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_rotate, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[248])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2034, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_rotate, __pyx_t_3) < 0) __PYX_ERR(0, 2034, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2037
 * 		self.view.rotate(degrees)
 * 
 * 	def zoom(self, float factor) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.zoom(factor)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2037, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_9zoom, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_zoom, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[249])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_zoom, __pyx_t_2) < 0) __PYX_ERR(0, 2037, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2040
 * 		self.view.zoom(factor)
 * 
 * 	def rotate_around_center(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.rotate(degrees)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2040, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_11rotate_around_center, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_rotate_around_center, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[250])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_rotate_around_center, __pyx_t_3) < 0) __PYX_ERR(0, 2040, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2045
 * 		self.view.setCenter(center.x, center.y)
 * 
 * 	def set_rotation_around_center(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		self.view.setRotation(degrees)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2045, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_13set_rotation_around_center, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_set_rotation_around_cente, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[251])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_set_rotation_around_center, __pyx_t_2) < 0) __PYX_ERR(0, 2045, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2050
 * 		self.view.setCenter(center.x, center.y)
 * 
 * 	def get_rect(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef FloatRect rect = <const FloatRect>self.view.getViewport()
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 2050, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_15get_rect, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_get_rect, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[252])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_get_rect, __pyx_t_3) < 0) __PYX_ERR(0, 2050, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2054
 * 		return sfFloatRect(rect.left, rect.top, rect.width, rect.height)
 * 
 * 	def get_left_top(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 2054, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_17get_left_top, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_get_left_top, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[253])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_get_left_top, __pyx_t_2) < 0) __PYX_ERR(0, 2054, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2061
 * 		return (left, top)
 * 
 * 	def set_left_top(self,             # <<<<<<<<<<<<<<
 * 		float left = 0,
 * 		float top = 0) -> None:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2061, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2061, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_19set_left_top, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_set_left_top, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[254])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2061, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_set_left_top, __pyx_t_3) < 0) __PYX_ERR(0, 2061, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2069
 * 		self.view.setCenter(centerX, centerY)
 * 
 * 	def get_center(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f center = <const Vector2f>self.view.getCenter()
 * 		return (center.x, center.y)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 2069, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_21get_center, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_get_center, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[255])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_get_center, __pyx_t_2) < 0) __PYX_ERR(0, 2069, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2073
 * 		return (center.x, center.y)
 * 
 * 	def set_center(self,             # <<<<<<<<<<<<<<
 * 		float center_x = 0,
 * 		float center_y = 0) -> None:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2073, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_23set_center, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_set_center, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[256])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_set_center, __pyx_t_3) < 0) __PYX_ERR(0, 2073, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2078
 * 		self.view.setCenter(center_x, center_y)
 * 
 * 	def get_size(self) -> tuple[float, float]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2f size = <const Vector2f>self.view.getSize()
 * 		return (size.x, size.y)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 2078, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_25get_size, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_get_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[257])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_get_size, __pyx_t_2) < 0) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2082
 * 		return (size.x, size.y)
 * 
 * 	def set_size(self,             # <<<<<<<<<<<<<<
 * 		float width = 0,
 * 		float height = 0) -> None:
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2082, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_27set_size, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_set_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[258])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_set_size, __pyx_t_3) < 0) __PYX_ERR(0, 2082, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2087
 * 		self.view.setSize(width, height)
 * 
 * 	def get_rotation(self) -> float:             # <<<<<<<<<<<<<<
 * 		return self.view.getRotation()
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_float) < 0) __PYX_ERR(0, 2087, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_29get_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_get_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[259])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_get_rotation, __pyx_t_2) < 0) __PYX_ERR(0, 2087, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2090
 * 		return self.view.getRotation()
 * 
 * 	def set_rotation(self, float degrees) -> None:             # <<<<<<<<<<<<<<
 * 		self.view.setRotation(degrees)
 * 
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2090, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_31set_rotation, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView_set_rotation, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[260])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfView, __pyx_mstate_global->__pyx_n_u_set_rotation, __pyx_t_3) < 0) __PYX_ERR(0, 2090, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_33__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[261])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_6sfView_35__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfView___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[262])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2115
 * 			del self.shader
 * 
 * 	def set_uniform(self,             # <<<<<<<<<<<<<<
 * 		str name_,
 * 		float x) -> None:
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2115, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfShader_5set_uniform, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfShader_set_uniform, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[263])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfShader, __pyx_mstate_global->__pyx_n_u_set_uniform, __pyx_t_2) < 0) __PYX_ERR(0, 2115, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2121
 * 		self.shader.setUniform(name, x)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_available() -> bool:
 * 		return Shader.isAvailable()
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 2121, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfShader_7is_available, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfShader_is_available, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[264])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfShader, __pyx_mstate_global->__pyx_n_u_is_available, __pyx_t_3) < 0) __PYX_ERR(0, 2121, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_2 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_4 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_5, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfShader, __pyx_mstate_global->__pyx_n_u_is_available); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_5};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2121, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfShader, __pyx_mstate_global->__pyx_n_u_is_available, __pyx_t_3) < 0) __PYX_ERR(0, 2121, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfShader_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfShader___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[265])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8sfShader_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfShader___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[266])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderStates_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderStates___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[267])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderStates_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderStates___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[268])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2147
 * 		unsigned int bitsPerPixel = 32,
 * 		str title = '',
 * 		unsigned int style = Style.Default):             # <<<<<<<<<<<<<<
 * 
 * 		cdef VideoMode mode = VideoMode(width, height, bitsPerPixel)
*/
  __pyx_mstate_global->__pyx_k__3 = __pyx_e_6window_5style_Default;

  /* "pysfml261.pyx":2156
 * 		del self.render_window
 * 
 * 	def map_coords_to_pixel(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> tuple[int, int]:
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int) < 0) __PYX_ERR(0, 2156, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_5map_coords_to_pixel, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_map_coords_to_pix, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[269])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_map_coords_to_pixel, __pyx_t_4) < 0) __PYX_ERR(0, 2156, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2166
 * 		return (pixel.x, pixel.y)
 * 
 * 	def map_pixel_to_coords(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> tuple[float, float]:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_float_float) < 0) __PYX_ERR(0, 2166, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_7map_pixel_to_coords, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_map_pixel_to_coor, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[270])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_map_pixel_to_coords, __pyx_t_3) < 0) __PYX_ERR(0, 2166, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2176
 * 		return (coord.x, coord.y)
 * 
 * 	def get_desktop_rect(self) -> sfFloatRect:             # <<<<<<<<<<<<<<
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		cdef Vector2u size = self.render_window.getSize()
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfFloatRect) < 0) __PYX_ERR(0, 2176, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_9get_desktop_rect, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_get_desktop_rect, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[271])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_get_desktop_rect, __pyx_t_4) < 0) __PYX_ERR(0, 2176, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2181
 * 		return sfFloatRect(pos.x, pos.y, size.x, size.y)
 * 
 * 	def set_view(self, sfView view_) -> None:             # <<<<<<<<<<<<<<
 * 		cdef const View* view = &view_.view[0]
 * 		self.render_window.setView(view[0])
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2181, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_11set_view, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_set_view, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[272])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_set_view, __pyx_t_3) < 0) __PYX_ERR(0, 2181, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2185
 * 		self.render_window.setView(view[0])
 * 
 * 	def get_view(self) -> sfView:             # <<<<<<<<<<<<<<
 * 		cdef View view = <const View>self.render_window.getView()
 * 		cdef Vector2f center = <const Vector2f>view.getCenter()
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_sfView) < 0) __PYX_ERR(0, 2185, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_13get_view, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_get_view, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[273])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_get_view, __pyx_t_4) < 0) __PYX_ERR(0, 2185, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2191
 * 		return sfView(center.x, center.y, size.x, size.y)
 * 
 * 	def get_position(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2i pos = self.render_window.getPosition()
 * 		return (pos.x, pos.y)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int) < 0) __PYX_ERR(0, 2191, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_15get_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[274])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_3) < 0) __PYX_ERR(0, 2191, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2195
 * 		return (pos.x, pos.y)
 * 
 * 	def set_position(self,             # <<<<<<<<<<<<<<
 * 		int x = 0,
 * 		int y = 0) -> None:
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2195, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_17set_position, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_set_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[275])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[0]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_set_position, __pyx_t_4) < 0) __PYX_ERR(0, 2195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2204
 * 		self.render_window.setPosition(const_pos[0])
 * 
 * 	def move(self,             # <<<<<<<<<<<<<<
 * 		int dx = 0,
 * 		int dy = 0) -> None:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2204, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_19move, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_move, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[276])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[0]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_move, __pyx_t_3) < 0) __PYX_ERR(0, 2204, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2213
 * 		self.render_window.setPosition(const_pos[0])
 * 
 * 	def draw_sprite(self, sfSprite sprite) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(sprite.sprite[0], Default)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2213, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_21draw_sprite, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_draw_sprite, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[277])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_draw_sprite, __pyx_t_4) < 0) __PYX_ERR(0, 2213, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2216
 * 		self.render_window.draw(sprite.sprite[0], Default)
 * 
 * 	def draw_sprite_use_state(self,             # <<<<<<<<<<<<<<
 * 		sfSprite sprite,
 * 		sfRenderStates states) -> None:
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2216, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_23draw_sprite_use_state, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_draw_sprite_use_s, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[278])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_draw_sprite_use_state, __pyx_t_3) < 0) __PYX_ERR(0, 2216, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2221
 * 		self.render_window.draw(sprite.sprite[0], states.states[0])
 * 
 * 	def draw_text(self, sfText text) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(text.text[0], Default)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2221, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_25draw_text, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_draw_text, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[279])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_draw_text, __pyx_t_4) < 0) __PYX_ERR(0, 2221, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2224
 * 		self.render_window.draw(text.text[0], Default)
 * 
 * 	def draw_rect_shape(self, sfRectangleShape shape) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2224, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_27draw_rect_shape, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_draw_rect_shape, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[280])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_draw_rect_shape, __pyx_t_3) < 0) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2227
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
 * 	def draw_circle_shape(self, sfCircleShape shape) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2227, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_29draw_circle_shape, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_draw_circle_shape, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[281])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_draw_circle_shape, __pyx_t_4) < 0) __PYX_ERR(0, 2227, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2230
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
 * 	def set_icon(self,             # <<<<<<<<<<<<<<
 * 		sfImage icon,
 * 		unsigned int width = 32,
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2230, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_31set_icon, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_set_icon, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[282])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_mstate_global->__pyx_tuple[15]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_set_icon, __pyx_t_3) < 0) __PYX_ERR(0, 2230, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2236
 * 		self.render_window.setIcon(width, height, icon.image.getPixelsPtr())
 * 
 * 	def clear(self, sfColor color) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.clear(color.color[0])
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2236, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_33clear, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_clear, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[283])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_clear, __pyx_t_4) < 0) __PYX_ERR(0, 2236, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2239
 * 		self.render_window.clear(color.color[0])
 * 
 * 	def poll_event(self, sfEvent event) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.pollEvent(event.event[0])
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 2239, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_35poll_event, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_poll_event, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[284])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_poll_event, __pyx_t_3) < 0) __PYX_ERR(0, 2239, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2242
 * 		return self.render_window.pollEvent(event.event[0])
 * 
 * 	def set_visible(self, bint visible = True) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setVisible(visible)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2242, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_37set_visible, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_set_visible, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[285])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_set_visible, __pyx_t_4) < 0) __PYX_ERR(0, 2242, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2245
 * 		self.render_window.setVisible(visible)
 * 
 * 	def is_open(self) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.isOpen()
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 2245, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_39is_open, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_is_open, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[286])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_is_open, __pyx_t_3) < 0) __PYX_ERR(0, 2245, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2248
 * 		return self.render_window.isOpen()
 * 
 * 	def close(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.close()
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2248, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_41close, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_close, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[287])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_close, __pyx_t_4) < 0) __PYX_ERR(0, 2248, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2251
 * 		self.render_window.close()
 * 
 * 	def display(self) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.display()
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2251, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_43display, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_display, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[288])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_display, __pyx_t_3) < 0) __PYX_ERR(0, 2251, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2254
 * 		self.render_window.display()
 * 
 * 	def set_mouse_cursor_visible(self, bint visible) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setMouseCursorVisible(visible)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2254, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_45set_mouse_cursor_visible, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_set_mouse_cursor, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[289])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_set_mouse_cursor_visible, __pyx_t_4) < 0) __PYX_ERR(0, 2254, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2257
 * 		self.render_window.setMouseCursorVisible(visible)
 * 
 * 	def set_framerate_limit(self, unsigned int limit) -> None:             # <<<<<<<<<<<<<<
 * 		self.render_window.setFramerateLimit(limit)
 * 
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_None) < 0) __PYX_ERR(0, 2257, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_47set_framerate_limit, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_set_framerate_lim, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[290])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_set_framerate_limit, __pyx_t_3) < 0) __PYX_ERR(0, 2257, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2260
 * 		self.render_window.setFramerateLimit(limit)
 * 
 * 	def set_active(self, bint active = True) -> bool:             # <<<<<<<<<<<<<<
 * 		return self.render_window.setActive(active)
 * 
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 2260, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_49set_active, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_set_active, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[291])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_set_active, __pyx_t_4) < 0) __PYX_ERR(0, 2260, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2263
 * 		return self.render_window.setActive(active)
 * 
 * 	def get_size(self) -> tuple[int, int]:             # <<<<<<<<<<<<<<
 * 		cdef Vector2u size = self.render_window.getSize()
 * 		return (size.x, size.y)
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int) < 0) __PYX_ERR(0, 2263, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_51get_size, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow_get_size, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[292])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfRenderWindow, __pyx_mstate_global->__pyx_n_u_get_size, __pyx_t_3) < 0) __PYX_ERR(0, 2263, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_53__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[293])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_14sfRenderWindow_55__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfRenderWindow___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[294])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2270
 * cdef class sfMouse:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def world_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i mouse_pos_ = sf_Mouse.getPosition()
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int) < 0) __PYX_ERR(0, 2270, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMouse_1world_pos, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMouse_world_pos, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[295])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_world_pos, __pyx_t_4) < 0) __PYX_ERR(0, 2270, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_5 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_world_pos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_2};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_world_pos, __pyx_t_4) < 0) __PYX_ERR(0, 2270, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2277
 * 		return (<int>pos.x, <int>pos.y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def relative_pos(sfRenderWindow wnd) -> tuple[int, int]:
 * 		cdef Vector2i wnd_pos = wnd.render_window.getPosition()
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int) < 0) __PYX_ERR(0, 2277, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMouse_3relative_pos, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMouse_relative_pos, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[296])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_relative_pos, __pyx_t_5) < 0) __PYX_ERR(0, 2277, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_4 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_2 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_relative_pos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_relative_pos, __pyx_t_5) < 0) __PYX_ERR(0, 2277, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pysfml261.pyx":2289
 * 		return (x, y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def relative_to_rect(sfFloatRect rect) -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int) < 0) __PYX_ERR(0, 2289, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMouse_5relative_to_rect, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMouse_relative_to_rect, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[297])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_relative_to_rect, __pyx_t_2) < 0) __PYX_ERR(0, 2289, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_3 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_4, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_relative_to_rect); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_4};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_relative_to_rect, __pyx_t_2) < 0) __PYX_ERR(0, 2289, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pysfml261.pyx":2298
 * 		return (x, y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def get_position() -> tuple[int, int]:
 * 		cdef Vector2i pos = sf_Mouse.getPosition()
*/
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_kp_u_tuple_int_int) < 0) __PYX_ERR(0, 2298, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMouse_7get_position, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMouse_get_position, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[298])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_3) < 0) __PYX_ERR(0, 2298, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_2 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_4 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_5, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_get_position); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_5};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_get_position, __pyx_t_3) < 0) __PYX_ERR(0, 2298, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pysfml261.pyx":2303
 * 		return (pos.x, pos.y)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def is_button_pressed(int button) -> bool:
 * 		return sf_Mouse.isButtonPressed(<Button>button)
*/
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_mstate_global->__pyx_n_u_return, __pyx_mstate_global->__pyx_n_u_bool) < 0) __PYX_ERR(0, 2303, __pyx_L1_error)
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMouse_9is_button_pressed, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMouse_is_button_pressed, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[299])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_4, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_is_button_pressed, __pyx_t_4) < 0) __PYX_ERR(0, 2303, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = NULL;
  __Pyx_INCREF(__pyx_builtin_staticmethod);
  __pyx_t_5 = __pyx_builtin_staticmethod; 
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject*)__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_is_button_pressed); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_2};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  }
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_is_button_pressed, __pyx_t_4) < 0) __PYX_ERR(0, 2303, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMouse_11__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMouse___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[300])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_sfMouse, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_sfMouse__set_state(self, __pyx_state)
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7sfMouse_13__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_sfMouse___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[301])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_sfMouse, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_4) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":2325
 * 		self.distance_y = distance_y_
 * 
 * 	def shift(self,             # <<<<<<<<<<<<<<
 * 		list[sfSprite] sprites,
 * 		float pivot_x = 0,
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8Camera2D_3shift, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_Camera2D_shift, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[302])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_mstate_global->__pyx_tuple[16]);
  if (__Pyx_SetItemOnTypeDict(__pyx_mstate_global->__pyx_ptype_9pysfml261_Camera2D, __pyx_mstate_global->__pyx_n_u_shift, __pyx_t_4) < 0) __PYX_ERR(0, 2325, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8Camera2D_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_Camera2D___reduce_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[303])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_reduce_cython, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_8Camera2D_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_mstate_global->__pyx_n_u_Camera2D___setstate_cython, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[304])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_setstate_cython, __pyx_t_4) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_sfKeyboard(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_5__pyx_unpickle_sfKeyboard, 0, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_sfKeyboard, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[305])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_sfKeyboard, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_sfKeyboard__set_state(<sfKeyboard> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_sfKeyboard__set_state(sfKeyboard __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_7__pyx_unpickle_TransformSfSprite, 0, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_TransformSfSprite, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[306])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_TransformSfSprite, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_sfMouse(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
*/
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9pysfml261_9__pyx_unpickle_sfMouse, 0, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_sfMouse, NULL, __pyx_mstate_global->__pyx_n_u_pysfml261, __pyx_mstate_global->__pyx_d, ((PyObject *)__pyx_mstate_global->__pyx_codeobj_tab[307])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_pyx_unpickle_sfMouse, __pyx_t_4) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pysfml261.pyx":1
 * from libcpp.string cimport string             # <<<<<<<<<<<<<<
 * 
 * from libc.math cimport M_PI, fabs, sin, cos, acos, sqrtf, powf, atan2
*/
  __pyx_t_4 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_test, __pyx_t_4) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  if (__pyx_m) {
    if (__pyx_mstate->__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init pysfml261", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pysfml261");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #else
  return __pyx_m;
  #endif
}
/* #### Code section: pystring_table ### */

typedef struct {
    const char *s;
#if 179 <= 65535
    const unsigned short n;
#elif 179 / 2 < INT_MAX
    const unsigned int n;
#elif 179 / 2 < LONG_MAX
    const unsigned long n;
#else
    const Py_ssize_t n;
#endif
#if 1 <= 31
    const unsigned int encoding : 5;
#elif 1 <= 255
    const unsigned char encoding;
#elif 1 <= 65535
    const unsigned short encoding;
#else
    const Py_ssize_t encoding;
#endif
    const unsigned int is_unicode : 1;
    const unsigned int intern : 1;
} __Pyx_StringTabEntry;
static const char * const __pyx_string_tab_encodings[] = { 0 };
static const __Pyx_StringTabEntry __pyx_string_tab[] = {
  {__pyx_k_, sizeof(__pyx_k_), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_ */
  {__pyx_k_Animator, sizeof(__pyx_k_Animator), 0, 1, 1}, /* PyObject cname: __pyx_n_u_Animator */
  {__pyx_k_Animator___reduce_cython, sizeof(__pyx_k_Animator___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_Animator___reduce_cython */
  {__pyx_k_Animator___setstate_cython, sizeof(__pyx_k_Animator___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_Animator___setstate_cython */
  {__pyx_k_Animator_get_current_index, sizeof(__pyx_k_Animator_get_current_index), 0, 1, 1}, /* PyObject cname: __pyx_n_u_Animator_get_current_index */
  {__pyx_k_CACHE_SIZE, sizeof(__pyx_k_CACHE_SIZE), 0, 1, 1}, /* PyObject cname: __pyx_n_u_CACHE_SIZE */
  {__pyx_k_Camera2D, sizeof(__pyx_k_Camera2D), 0, 1, 1}, /* PyObject cname: __pyx_n_u_Camera2D */
  {__pyx_k_Camera2D___reduce_cython, sizeof(__pyx_k_Camera2D___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_Camera2D___reduce_cython */
  {__pyx_k_Camera2D___setstate_cython, sizeof(__pyx_k_Camera2D___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_Camera2D___setstate_cython */
  {__pyx_k_Camera2D_shift, sizeof(__pyx_k_Camera2D_shift), 0, 1, 1}, /* PyObject cname: __pyx_n_u_Camera2D_shift */
  {__pyx_k_Could_not_convert_to_unicode, sizeof(__pyx_k_Could_not_convert_to_unicode), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Could_not_convert_to_unicode */
  {__pyx_k_Failed_to_load_font, sizeof(__pyx_k_Failed_to_load_font), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_font */
  {__pyx_k_Failed_to_load_font_from_0, sizeof(__pyx_k_Failed_to_load_font_from_0), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_font_from_0 */
  {__pyx_k_Failed_to_load_image, sizeof(__pyx_k_Failed_to_load_image), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_image */
  {__pyx_k_Failed_to_load_image_from_0, sizeof(__pyx_k_Failed_to_load_image_from_0), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_image_from_0 */
  {__pyx_k_Failed_to_load_music_from, sizeof(__pyx_k_Failed_to_load_music_from), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_music_from */
  {__pyx_k_Failed_to_load_music_from_0, sizeof(__pyx_k_Failed_to_load_music_from_0), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_music_from_0 */
  {__pyx_k_Failed_to_load_shader, sizeof(__pyx_k_Failed_to_load_shader), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_shader */
  {__pyx_k_Failed_to_load_shader_from_0, sizeof(__pyx_k_Failed_to_load_shader_from_0), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_shader_from_0 */
  {__pyx_k_Failed_to_load_sound_from, sizeof(__pyx_k_Failed_to_load_sound_from), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_sound_from */
  {__pyx_k_Failed_to_load_sound_from_0, sizeof(__pyx_k_Failed_to_load_sound_from_0), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_sound_from_0 */
  {__pyx_k_Failed_to_load_texture_from_0, sizeof(__pyx_k_Failed_to_load_texture_from_0), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Failed_to_load_texture_from_0 */
  {__pyx_k_Incompatible_checksums_0x_x_vs_0, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Incompatible_checksums_0x_x_vs_0 */
  {__pyx_k_MathPoint2f, sizeof(__pyx_k_MathPoint2f), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathPoint2f */
  {__pyx_k_MathPoint2f___reduce_cython, sizeof(__pyx_k_MathPoint2f___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathPoint2f___reduce_cython */
  {__pyx_k_MathPoint2f___setstate_cython, sizeof(__pyx_k_MathPoint2f___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathPoint2f___setstate_cython */
  {__pyx_k_MathPoint2f_distance, sizeof(__pyx_k_MathPoint2f_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathPoint2f_distance */
  {__pyx_k_MathPoint3f, sizeof(__pyx_k_MathPoint3f), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathPoint3f */
  {__pyx_k_MathPoint3f___reduce_cython, sizeof(__pyx_k_MathPoint3f___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathPoint3f___reduce_cython */
  {__pyx_k_MathPoint3f___setstate_cython, sizeof(__pyx_k_MathPoint3f___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathPoint3f___setstate_cython */
  {__pyx_k_MathPoint3f_distance, sizeof(__pyx_k_MathPoint3f_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathPoint3f_distance */
  {__pyx_k_MathVector2f, sizeof(__pyx_k_MathVector2f), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f */
  {__pyx_k_MathVector2f___reduce_cython, sizeof(__pyx_k_MathVector2f___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f___reduce_cython */
  {__pyx_k_MathVector2f___setstate_cython, sizeof(__pyx_k_MathVector2f___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f___setstate_cython */
  {__pyx_k_MathVector2f_angle_between, sizeof(__pyx_k_MathVector2f_angle_between), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_angle_between */
  {__pyx_k_MathVector2f_basis, sizeof(__pyx_k_MathVector2f_basis), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_basis */
  {__pyx_k_MathVector2f_cosin, sizeof(__pyx_k_MathVector2f_cosin), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_cosin */
  {__pyx_k_MathVector2f_distance, sizeof(__pyx_k_MathVector2f_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_distance */
  {__pyx_k_MathVector2f_from_points, sizeof(__pyx_k_MathVector2f_from_points), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_from_points */
  {__pyx_k_MathVector2f_is_parallel, sizeof(__pyx_k_MathVector2f_is_parallel), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_is_parallel */
  {__pyx_k_MathVector2f_is_perpendicular, sizeof(__pyx_k_MathVector2f_is_perpendicular), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_is_perpendicular */
  {__pyx_k_MathVector2f_multiply_num, sizeof(__pyx_k_MathVector2f_multiply_num), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_multiply_num */
  {__pyx_k_MathVector2f_scalar_product, sizeof(__pyx_k_MathVector2f_scalar_product), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_scalar_product */
  {__pyx_k_MathVector2f_sinus, sizeof(__pyx_k_MathVector2f_sinus), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_sinus */
  {__pyx_k_MathVector2f_sub, sizeof(__pyx_k_MathVector2f_sub), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_sub */
  {__pyx_k_MathVector2f_sum, sizeof(__pyx_k_MathVector2f_sum), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_sum */
  {__pyx_k_MathVector2f_vector_product, sizeof(__pyx_k_MathVector2f_vector_product), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector2f_vector_product */
  {__pyx_k_MathVector3f, sizeof(__pyx_k_MathVector3f), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f */
  {__pyx_k_MathVector3f___reduce_cython, sizeof(__pyx_k_MathVector3f___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f___reduce_cython */
  {__pyx_k_MathVector3f___setstate_cython, sizeof(__pyx_k_MathVector3f___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f___setstate_cython */
  {__pyx_k_MathVector3f_angle_between, sizeof(__pyx_k_MathVector3f_angle_between), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_angle_between */
  {__pyx_k_MathVector3f_basis, sizeof(__pyx_k_MathVector3f_basis), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_basis */
  {__pyx_k_MathVector3f_cosin, sizeof(__pyx_k_MathVector3f_cosin), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_cosin */
  {__pyx_k_MathVector3f_distance, sizeof(__pyx_k_MathVector3f_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_distance */
  {__pyx_k_MathVector3f_from_points, sizeof(__pyx_k_MathVector3f_from_points), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_from_points */
  {__pyx_k_MathVector3f_is_parallel, sizeof(__pyx_k_MathVector3f_is_parallel), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_is_parallel */
  {__pyx_k_MathVector3f_is_perpendicular, sizeof(__pyx_k_MathVector3f_is_perpendicular), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_is_perpendicular */
  {__pyx_k_MathVector3f_multiply_num, sizeof(__pyx_k_MathVector3f_multiply_num), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_multiply_num */
  {__pyx_k_MathVector3f_scalar_product, sizeof(__pyx_k_MathVector3f_scalar_product), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_scalar_product */
  {__pyx_k_MathVector3f_sinus, sizeof(__pyx_k_MathVector3f_sinus), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_sinus */
  {__pyx_k_MathVector3f_sub, sizeof(__pyx_k_MathVector3f_sub), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_sub */
  {__pyx_k_MathVector3f_sum, sizeof(__pyx_k_MathVector3f_sum), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_sum */
  {__pyx_k_MathVector3f_vector_product, sizeof(__pyx_k_MathVector3f_vector_product), 0, 1, 1}, /* PyObject cname: __pyx_n_u_MathVector3f_vector_product */
  {__pyx_k_None, sizeof(__pyx_k_None), 0, 1, 1}, /* PyObject cname: __pyx_n_u_None */
  {__pyx_k_None, sizeof(__pyx_k_None), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_None */
  {__pyx_k_Note_that_Cython_is_deliberately, sizeof(__pyx_k_Note_that_Cython_is_deliberately), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Note_that_Cython_is_deliberately */
  {__pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 1, 1}, /* PyObject cname: __pyx_n_u_PickleError */
  {__pyx_k_RESULTS, sizeof(__pyx_k_RESULTS), 0, 1, 1}, /* PyObject cname: __pyx_n_u_RESULTS */
  {__pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 1, 1}, /* PyObject cname: __pyx_n_u_RuntimeError */
  {__pyx_k_TimeCollector, sizeof(__pyx_k_TimeCollector), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimeCollector */
  {__pyx_k_TimeCollector___reduce_cython, sizeof(__pyx_k_TimeCollector___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimeCollector___reduce_cython */
  {__pyx_k_TimeCollector___setstate_cython, sizeof(__pyx_k_TimeCollector___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimeCollector___setstate_cython */
  {__pyx_k_TimeCollector_collect, sizeof(__pyx_k_TimeCollector_collect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimeCollector_collect */
  {__pyx_k_TimeCollector_reset, sizeof(__pyx_k_TimeCollector_reset), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimeCollector_reset */
  {__pyx_k_TimedFloat, sizeof(__pyx_k_TimedFloat), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimedFloat */
  {__pyx_k_TimedFloat___reduce_cython, sizeof(__pyx_k_TimedFloat___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimedFloat___reduce_cython */
  {__pyx_k_TimedFloat___setstate_cython, sizeof(__pyx_k_TimedFloat___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimedFloat___setstate_cython */
  {__pyx_k_TimedFloat_get_timed, sizeof(__pyx_k_TimedFloat_get_timed), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimedFloat_get_timed */
  {__pyx_k_TimedFloat_get_value, sizeof(__pyx_k_TimedFloat_get_value), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimedFloat_get_value */
  {__pyx_k_TimedFloat_set_value, sizeof(__pyx_k_TimedFloat_set_value), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TimedFloat_set_value */
  {__pyx_k_TransformSfSprite, sizeof(__pyx_k_TransformSfSprite), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite */
  {__pyx_k_TransformSfSprite___reduce_cytho, sizeof(__pyx_k_TransformSfSprite___reduce_cytho), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite___reduce_cytho */
  {__pyx_k_TransformSfSprite___setstate_cyt, sizeof(__pyx_k_TransformSfSprite___setstate_cyt), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite___setstate_cyt */
  {__pyx_k_TransformSfSprite_flip, sizeof(__pyx_k_TransformSfSprite_flip), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_flip */
  {__pyx_k_TransformSfSprite_get_distance, sizeof(__pyx_k_TransformSfSprite_get_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_get_distance */
  {__pyx_k_TransformSfSprite_keep_their_dis, sizeof(__pyx_k_TransformSfSprite_keep_their_dis), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_keep_their_dis */
  {__pyx_k_TransformSfSprite_move_with_angl, sizeof(__pyx_k_TransformSfSprite_move_with_angl), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_move_with_angl */
  {__pyx_k_TransformSfSprite_put_like, sizeof(__pyx_k_TransformSfSprite_put_like), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_put_like */
  {__pyx_k_TransformSfSprite_resize, sizeof(__pyx_k_TransformSfSprite_resize), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_resize */
  {__pyx_k_TransformSfSprite_rotate_around, sizeof(__pyx_k_TransformSfSprite_rotate_around), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_rotate_around */
  {__pyx_k_TransformSfSprite_scale, sizeof(__pyx_k_TransformSfSprite_scale), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_scale */
  {__pyx_k_TransformSfSprite_set_rotation_a, sizeof(__pyx_k_TransformSfSprite_set_rotation_a), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_set_rotation_a */
  {__pyx_k_TransformSfSprite_similar, sizeof(__pyx_k_TransformSfSprite_similar), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_similar */
  {__pyx_k_TransformSfSprite_swap, sizeof(__pyx_k_TransformSfSprite_swap), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TransformSfSprite_swap */
  {__pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 1, 1}, /* PyObject cname: __pyx_n_u_TypeError */
  {__pyx_k_Unable_to_load_texture, sizeof(__pyx_k_Unable_to_load_texture), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_Unable_to_load_texture */
  {__pyx_k__2, sizeof(__pyx_k__2), 0, 1, 0}, /* PyObject cname: __pyx_kp_u__2 */
  {__pyx_k__4, sizeof(__pyx_k__4), 0, 1, 0}, /* PyObject cname: __pyx_kp_u__4 */
  {__pyx_k__5, sizeof(__pyx_k__5), 0, 1, 0}, /* PyObject cname: __pyx_kp_u__5 */
  {__pyx_k_a, sizeof(__pyx_k_a), 0, 1, 1}, /* PyObject cname: __pyx_n_u_a */
  {__pyx_k_active, sizeof(__pyx_k_active), 0, 1, 1}, /* PyObject cname: __pyx_n_u_active */
  {__pyx_k_add_note, sizeof(__pyx_k_add_note), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_add_note */
  {__pyx_k_after, sizeof(__pyx_k_after), 0, 1, 1}, /* PyObject cname: __pyx_n_u_after */
  {__pyx_k_angle_between, sizeof(__pyx_k_angle_between), 0, 1, 1}, /* PyObject cname: __pyx_n_u_angle_between */
  {__pyx_k_area, sizeof(__pyx_k_area), 0, 1, 1}, /* PyObject cname: __pyx_n_u_area */
  {__pyx_k_asMicroseconds, sizeof(__pyx_k_asMicroseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_asMicroseconds */
  {__pyx_k_asMilliseconds, sizeof(__pyx_k_asMilliseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_asMilliseconds */
  {__pyx_k_asSeconds, sizeof(__pyx_k_asSeconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_asSeconds */
  {__pyx_k_as_pystring, sizeof(__pyx_k_as_pystring), 0, 1, 1}, /* PyObject cname: __pyx_n_u_as_pystring */
  {__pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 1, 1}, /* PyObject cname: __pyx_n_u_asyncio_coroutines */
  {__pyx_k_attenuation, sizeof(__pyx_k_attenuation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_attenuation */
  {__pyx_k_b, sizeof(__pyx_k_b), 0, 1, 1}, /* PyObject cname: __pyx_n_u_b */
  {__pyx_k_basis, sizeof(__pyx_k_basis), 0, 1, 1}, /* PyObject cname: __pyx_n_u_basis */
  {__pyx_k_before, sizeof(__pyx_k_before), 0, 1, 1}, /* PyObject cname: __pyx_n_u_before */
  {__pyx_k_bitsPerPixel, sizeof(__pyx_k_bitsPerPixel), 0, 1, 1}, /* PyObject cname: __pyx_n_u_bitsPerPixel */
  {__pyx_k_bool, sizeof(__pyx_k_bool), 0, 1, 1}, /* PyObject cname: __pyx_n_u_bool */
  {__pyx_k_bounds, sizeof(__pyx_k_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_bounds */
  {__pyx_k_buffer, sizeof(__pyx_k_buffer), 0, 1, 1}, /* PyObject cname: __pyx_n_u_buffer */
  {__pyx_k_button, sizeof(__pyx_k_button), 0, 1, 1}, /* PyObject cname: __pyx_n_u_button */
  {__pyx_k_center, sizeof(__pyx_k_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center */
  {__pyx_k_centerX, sizeof(__pyx_k_centerX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_centerX */
  {__pyx_k_centerX1, sizeof(__pyx_k_centerX1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_centerX1 */
  {__pyx_k_centerX2, sizeof(__pyx_k_centerX2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_centerX2 */
  {__pyx_k_centerY, sizeof(__pyx_k_centerY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_centerY */
  {__pyx_k_centerY1, sizeof(__pyx_k_centerY1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_centerY1 */
  {__pyx_k_centerY2, sizeof(__pyx_k_centerY2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_centerY2 */
  {__pyx_k_center_t_x, sizeof(__pyx_k_center_t_x), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center_t_x */
  {__pyx_k_center_t_y, sizeof(__pyx_k_center_t_y), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center_t_y */
  {__pyx_k_center_x, sizeof(__pyx_k_center_x), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center_x */
  {__pyx_k_center_x1, sizeof(__pyx_k_center_x1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center_x1 */
  {__pyx_k_center_x2, sizeof(__pyx_k_center_x2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center_x2 */
  {__pyx_k_center_y, sizeof(__pyx_k_center_y), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center_y */
  {__pyx_k_center_y1, sizeof(__pyx_k_center_y1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center_y1 */
  {__pyx_k_center_y2, sizeof(__pyx_k_center_y2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_center_y2 */
  {__pyx_k_clear, sizeof(__pyx_k_clear), 0, 1, 1}, /* PyObject cname: __pyx_n_u_clear */
  {__pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 1, 1}, /* PyObject cname: __pyx_n_u_cline_in_traceback */
  {__pyx_k_clone, sizeof(__pyx_k_clone), 0, 1, 1}, /* PyObject cname: __pyx_n_u_clone */
  {__pyx_k_close, sizeof(__pyx_k_close), 0, 1, 1}, /* PyObject cname: __pyx_n_u_close */
  {__pyx_k_clr, sizeof(__pyx_k_clr), 0, 1, 1}, /* PyObject cname: __pyx_n_u_clr */
  {__pyx_k_collect, sizeof(__pyx_k_collect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_collect */
  {__pyx_k_collide_shift_h, sizeof(__pyx_k_collide_shift_h), 0, 1, 1}, /* PyObject cname: __pyx_n_u_collide_shift_h */
  {__pyx_k_collide_shift_v, sizeof(__pyx_k_collide_shift_v), 0, 1, 1}, /* PyObject cname: __pyx_n_u_collide_shift_v */
  {__pyx_k_color, sizeof(__pyx_k_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_color */
  {__pyx_k_const_pos, sizeof(__pyx_k_const_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_const_pos */
  {__pyx_k_contains, sizeof(__pyx_k_contains), 0, 1, 1}, /* PyObject cname: __pyx_n_u_contains */
  {__pyx_k_coord, sizeof(__pyx_k_coord), 0, 1, 1}, /* PyObject cname: __pyx_n_u_coord */
  {__pyx_k_cosin, sizeof(__pyx_k_cosin), 0, 1, 1}, /* PyObject cname: __pyx_n_u_cosin */
  {__pyx_k_current, sizeof(__pyx_k_current), 0, 1, 1}, /* PyObject cname: __pyx_n_u_current */
  {__pyx_k_degrees, sizeof(__pyx_k_degrees), 0, 1, 1}, /* PyObject cname: __pyx_n_u_degrees */
  {__pyx_k_dict, sizeof(__pyx_k_dict), 0, 1, 1}, /* PyObject cname: __pyx_n_u_dict */
  {__pyx_k_dict_2, sizeof(__pyx_k_dict_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_dict_2 */
  {__pyx_k_difX, sizeof(__pyx_k_difX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_difX */
  {__pyx_k_difY, sizeof(__pyx_k_difY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_difY */
  {__pyx_k_dif_x, sizeof(__pyx_k_dif_x), 0, 1, 1}, /* PyObject cname: __pyx_n_u_dif_x */
  {__pyx_k_dif_y, sizeof(__pyx_k_dif_y), 0, 1, 1}, /* PyObject cname: __pyx_n_u_dif_y */
  {__pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_disable */
  {__pyx_k_display, sizeof(__pyx_k_display), 0, 1, 1}, /* PyObject cname: __pyx_n_u_display */
  {__pyx_k_distance, sizeof(__pyx_k_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_distance */
  {__pyx_k_distance_x, sizeof(__pyx_k_distance_x), 0, 1, 1}, /* PyObject cname: __pyx_n_u_distance_x */
  {__pyx_k_distance_x_2, sizeof(__pyx_k_distance_x_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_distance_x_2 */
  {__pyx_k_distance_y, sizeof(__pyx_k_distance_y), 0, 1, 1}, /* PyObject cname: __pyx_n_u_distance_y */
  {__pyx_k_distance_y_2, sizeof(__pyx_k_distance_y_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_distance_y_2 */
  {__pyx_k_draw_circle_shape, sizeof(__pyx_k_draw_circle_shape), 0, 1, 1}, /* PyObject cname: __pyx_n_u_draw_circle_shape */
  {__pyx_k_draw_rect_shape, sizeof(__pyx_k_draw_rect_shape), 0, 1, 1}, /* PyObject cname: __pyx_n_u_draw_rect_shape */
  {__pyx_k_draw_sprite, sizeof(__pyx_k_draw_sprite), 0, 1, 1}, /* PyObject cname: __pyx_n_u_draw_sprite */
  {__pyx_k_draw_sprite_use_state, sizeof(__pyx_k_draw_sprite_use_state), 0, 1, 1}, /* PyObject cname: __pyx_n_u_draw_sprite_use_state */
  {__pyx_k_draw_text, sizeof(__pyx_k_draw_text), 0, 1, 1}, /* PyObject cname: __pyx_n_u_draw_text */
  {__pyx_k_drop_cache, sizeof(__pyx_k_drop_cache), 0, 1, 1}, /* PyObject cname: __pyx_n_u_drop_cache */
  {__pyx_k_dx, sizeof(__pyx_k_dx), 0, 1, 1}, /* PyObject cname: __pyx_n_u_dx */
  {__pyx_k_dy, sizeof(__pyx_k_dy), 0, 1, 1}, /* PyObject cname: __pyx_n_u_dy */
  {__pyx_k_elapsed, sizeof(__pyx_k_elapsed), 0, 1, 1}, /* PyObject cname: __pyx_n_u_elapsed */
  {__pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_enable */
  {__pyx_k_event, sizeof(__pyx_k_event), 0, 1, 1}, /* PyObject cname: __pyx_n_u_event */
  {__pyx_k_factor, sizeof(__pyx_k_factor), 0, 1, 1}, /* PyObject cname: __pyx_n_u_factor */
  {__pyx_k_filename, sizeof(__pyx_k_filename), 0, 1, 1}, /* PyObject cname: __pyx_n_u_filename */
  {__pyx_k_flip, sizeof(__pyx_k_flip), 0, 1, 1}, /* PyObject cname: __pyx_n_u_flip */
  {__pyx_k_flipX, sizeof(__pyx_k_flipX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_flipX */
  {__pyx_k_flipY, sizeof(__pyx_k_flipY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_flipY */
  {__pyx_k_float, sizeof(__pyx_k_float), 0, 1, 1}, /* PyObject cname: __pyx_n_u_float */
  {__pyx_k_font, sizeof(__pyx_k_font), 0, 1, 1}, /* PyObject cname: __pyx_n_u_font */
  {__pyx_k_format, sizeof(__pyx_k_format), 0, 1, 1}, /* PyObject cname: __pyx_n_u_format */
  {__pyx_k_from_points, sizeof(__pyx_k_from_points), 0, 1, 1}, /* PyObject cname: __pyx_n_u_from_points */
  {__pyx_k_from_pystring, sizeof(__pyx_k_from_pystring), 0, 1, 1}, /* PyObject cname: __pyx_n_u_from_pystring */
  {__pyx_k_func, sizeof(__pyx_k_func), 0, 1, 1}, /* PyObject cname: __pyx_n_u_func */
  {__pyx_k_g, sizeof(__pyx_k_g), 0, 1, 1}, /* PyObject cname: __pyx_n_u_g */
  {__pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_gc */
  {__pyx_k_get_alpha, sizeof(__pyx_k_get_alpha), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_alpha */
  {__pyx_k_get_attenuation, sizeof(__pyx_k_get_attenuation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_attenuation */
  {__pyx_k_get_center, sizeof(__pyx_k_get_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_center */
  {__pyx_k_get_color, sizeof(__pyx_k_get_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_color */
  {__pyx_k_get_current_index, sizeof(__pyx_k_get_current_index), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_current_index */
  {__pyx_k_get_desktop_mode, sizeof(__pyx_k_get_desktop_mode), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_desktop_mode */
  {__pyx_k_get_desktop_rect, sizeof(__pyx_k_get_desktop_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_desktop_rect */
  {__pyx_k_get_distance, sizeof(__pyx_k_get_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_distance */
  {__pyx_k_get_elapsed_microseconds, sizeof(__pyx_k_get_elapsed_microseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_elapsed_microseconds */
  {__pyx_k_get_elapsed_milliseconds, sizeof(__pyx_k_get_elapsed_milliseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_elapsed_milliseconds */
  {__pyx_k_get_elapsed_seconds, sizeof(__pyx_k_get_elapsed_seconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_elapsed_seconds */
  {__pyx_k_get_fill_color, sizeof(__pyx_k_get_fill_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_fill_color */
  {__pyx_k_get_global_bounds, sizeof(__pyx_k_get_global_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_global_bounds */
  {__pyx_k_get_key_code, sizeof(__pyx_k_get_key_code), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_key_code */
  {__pyx_k_get_left_top, sizeof(__pyx_k_get_left_top), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_left_top */
  {__pyx_k_get_local_bounds, sizeof(__pyx_k_get_local_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_local_bounds */
  {__pyx_k_get_loop, sizeof(__pyx_k_get_loop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_loop */
  {__pyx_k_get_min_distance, sizeof(__pyx_k_get_min_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_min_distance */
  {__pyx_k_get_mouse_button, sizeof(__pyx_k_get_mouse_button), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_mouse_button */
  {__pyx_k_get_pitch, sizeof(__pyx_k_get_pitch), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_pitch */
  {__pyx_k_get_position, sizeof(__pyx_k_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_position */
  {__pyx_k_get_pystring, sizeof(__pyx_k_get_pystring), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_pystring */
  {__pyx_k_get_radius, sizeof(__pyx_k_get_radius), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_radius */
  {__pyx_k_get_rect, sizeof(__pyx_k_get_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_rect */
  {__pyx_k_get_rotation, sizeof(__pyx_k_get_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_rotation */
  {__pyx_k_get_scale, sizeof(__pyx_k_get_scale), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_scale */
  {__pyx_k_get_size, sizeof(__pyx_k_get_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_size */
  {__pyx_k_get_status, sizeof(__pyx_k_get_status), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_status */
  {__pyx_k_get_text_unicode, sizeof(__pyx_k_get_text_unicode), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_text_unicode */
  {__pyx_k_get_timed, sizeof(__pyx_k_get_timed), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_timed */
  {__pyx_k_get_type, sizeof(__pyx_k_get_type), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_type */
  {__pyx_k_get_value, sizeof(__pyx_k_get_value), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_value */
  {__pyx_k_get_view, sizeof(__pyx_k_get_view), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_view */
  {__pyx_k_get_volume, sizeof(__pyx_k_get_volume), 0, 1, 1}, /* PyObject cname: __pyx_n_u_get_volume */
  {__pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_getstate */
  {__pyx_k_height, sizeof(__pyx_k_height), 0, 1, 1}, /* PyObject cname: __pyx_n_u_height */
  {__pyx_k_icon, sizeof(__pyx_k_icon), 0, 1, 1}, /* PyObject cname: __pyx_n_u_icon */
  {__pyx_k_in_area, sizeof(__pyx_k_in_area), 0, 1, 1}, /* PyObject cname: __pyx_n_u_in_area */
  {__pyx_k_index, sizeof(__pyx_k_index), 0, 1, 1}, /* PyObject cname: __pyx_n_u_index */
  {__pyx_k_int, sizeof(__pyx_k_int), 0, 1, 1}, /* PyObject cname: __pyx_n_u_int */
  {__pyx_k_intersects, sizeof(__pyx_k_intersects), 0, 1, 1}, /* PyObject cname: __pyx_n_u_intersects */
  {__pyx_k_intersects_rect, sizeof(__pyx_k_intersects_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_intersects_rect */
  {__pyx_k_is_available, sizeof(__pyx_k_is_available), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_available */
  {__pyx_k_is_button_pressed, sizeof(__pyx_k_is_button_pressed), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_button_pressed */
  {__pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_coroutine */
  {__pyx_k_is_empty, sizeof(__pyx_k_is_empty), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_empty */
  {__pyx_k_is_key_pressed, sizeof(__pyx_k_is_key_pressed), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_key_pressed */
  {__pyx_k_is_open, sizeof(__pyx_k_is_open), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_open */
  {__pyx_k_is_parallel, sizeof(__pyx_k_is_parallel), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_parallel */
  {__pyx_k_is_perpendicular, sizeof(__pyx_k_is_perpendicular), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_perpendicular */
  {__pyx_k_is_smooth, sizeof(__pyx_k_is_smooth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_smooth */
  {__pyx_k_is_srgb, sizeof(__pyx_k_is_srgb), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_srgb */
  {__pyx_k_is_valid, sizeof(__pyx_k_is_valid), 0, 1, 1}, /* PyObject cname: __pyx_n_u_is_valid */
  {__pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_isenabled */
  {__pyx_k_items, sizeof(__pyx_k_items), 0, 1, 1}, /* PyObject cname: __pyx_n_u_items */
  {__pyx_k_k, sizeof(__pyx_k_k), 0, 1, 1}, /* PyObject cname: __pyx_n_u_k */
  {__pyx_k_keep_h, sizeof(__pyx_k_keep_h), 0, 1, 1}, /* PyObject cname: __pyx_n_u_keep_h */
  {__pyx_k_keep_left_top, sizeof(__pyx_k_keep_left_top), 0, 1, 1}, /* PyObject cname: __pyx_n_u_keep_left_top */
  {__pyx_k_keep_their_distance, sizeof(__pyx_k_keep_their_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_keep_their_distance */
  {__pyx_k_keep_w, sizeof(__pyx_k_keep_w), 0, 1, 1}, /* PyObject cname: __pyx_n_u_keep_w */
  {__pyx_k_keep_x, sizeof(__pyx_k_keep_x), 0, 1, 1}, /* PyObject cname: __pyx_n_u_keep_x */
  {__pyx_k_keep_y, sizeof(__pyx_k_keep_y), 0, 1, 1}, /* PyObject cname: __pyx_n_u_keep_y */
  {__pyx_k_key, sizeof(__pyx_k_key), 0, 1, 1}, /* PyObject cname: __pyx_n_u_key */
  {__pyx_k_kx, sizeof(__pyx_k_kx), 0, 1, 1}, /* PyObject cname: __pyx_n_u_kx */
  {__pyx_k_ky, sizeof(__pyx_k_ky), 0, 1, 1}, /* PyObject cname: __pyx_n_u_ky */
  {__pyx_k_left, sizeof(__pyx_k_left), 0, 1, 1}, /* PyObject cname: __pyx_n_u_left */
  {__pyx_k_left_2, sizeof(__pyx_k_left_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_left_2 */
  {__pyx_k_length, sizeof(__pyx_k_length), 0, 1, 1}, /* PyObject cname: __pyx_n_u_length */
  {__pyx_k_lengthX, sizeof(__pyx_k_lengthX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_lengthX */
  {__pyx_k_lengthY, sizeof(__pyx_k_lengthY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_lengthY */
  {__pyx_k_like_sprite1, sizeof(__pyx_k_like_sprite1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_like_sprite1 */
  {__pyx_k_limit, sizeof(__pyx_k_limit), 0, 1, 1}, /* PyObject cname: __pyx_n_u_limit */
  {__pyx_k_local, sizeof(__pyx_k_local), 0, 1, 1}, /* PyObject cname: __pyx_n_u_local */
  {__pyx_k_local_bounds, sizeof(__pyx_k_local_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_local_bounds */
  {__pyx_k_localize, sizeof(__pyx_k_localize), 0, 1, 1}, /* PyObject cname: __pyx_n_u_localize */
  {__pyx_k_loop, sizeof(__pyx_k_loop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_loop */
  {__pyx_k_m1, sizeof(__pyx_k_m1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_m1 */
  {__pyx_k_m2, sizeof(__pyx_k_m2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_m2 */
  {__pyx_k_main, sizeof(__pyx_k_main), 0, 1, 1}, /* PyObject cname: __pyx_n_u_main */
  {__pyx_k_map_coords_to_pixel, sizeof(__pyx_k_map_coords_to_pixel), 0, 1, 1}, /* PyObject cname: __pyx_n_u_map_coords_to_pixel */
  {__pyx_k_map_pixel_to_coords, sizeof(__pyx_k_map_pixel_to_coords), 0, 1, 1}, /* PyObject cname: __pyx_n_u_map_pixel_to_coords */
  {__pyx_k_maxD, sizeof(__pyx_k_maxD), 0, 1, 1}, /* PyObject cname: __pyx_n_u_maxD */
  {__pyx_k_maxIndex, sizeof(__pyx_k_maxIndex), 0, 1, 1}, /* PyObject cname: __pyx_n_u_maxIndex */
  {__pyx_k_minDistance, sizeof(__pyx_k_minDistance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_minDistance */
  {__pyx_k_mod, sizeof(__pyx_k_mod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_mod */
  {__pyx_k_modeHeight, sizeof(__pyx_k_modeHeight), 0, 1, 1}, /* PyObject cname: __pyx_n_u_modeHeight */
  {__pyx_k_modeWidth, sizeof(__pyx_k_modeWidth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_modeWidth */
  {__pyx_k_modul, sizeof(__pyx_k_modul), 0, 1, 1}, /* PyObject cname: __pyx_n_u_modul */
  {__pyx_k_module, sizeof(__pyx_k_module), 0, 1, 1}, /* PyObject cname: __pyx_n_u_module */
  {__pyx_k_mouse_pos, sizeof(__pyx_k_mouse_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_mouse_pos */
  {__pyx_k_mouse_pos_2, sizeof(__pyx_k_mouse_pos_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_mouse_pos_2 */
  {__pyx_k_move, sizeof(__pyx_k_move), 0, 1, 1}, /* PyObject cname: __pyx_n_u_move */
  {__pyx_k_move_with_angle, sizeof(__pyx_k_move_with_angle), 0, 1, 1}, /* PyObject cname: __pyx_n_u_move_with_angle */
  {__pyx_k_multiply_num, sizeof(__pyx_k_multiply_num), 0, 1, 1}, /* PyObject cname: __pyx_n_u_multiply_num */
  {__pyx_k_myRect, sizeof(__pyx_k_myRect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_myRect */
  {__pyx_k_name, sizeof(__pyx_k_name), 0, 1, 1}, /* PyObject cname: __pyx_n_u_name */
  {__pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_name_2 */
  {__pyx_k_name_3, sizeof(__pyx_k_name_3), 0, 1, 1}, /* PyObject cname: __pyx_n_u_name_3 */
  {__pyx_k_new, sizeof(__pyx_k_new), 0, 1, 1}, /* PyObject cname: __pyx_n_u_new */
  {__pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_no_default___reduce___due_to_non */
  {__pyx_k_num, sizeof(__pyx_k_num), 0, 1, 1}, /* PyObject cname: __pyx_n_u_num */
  {__pyx_k_offsetX, sizeof(__pyx_k_offsetX), 0, 1, 1}, /* PyObject cname: __pyx_n_u_offsetX */
  {__pyx_k_offsetY, sizeof(__pyx_k_offsetY), 0, 1, 1}, /* PyObject cname: __pyx_n_u_offsetY */
  {__pyx_k_p, sizeof(__pyx_k_p), 0, 1, 1}, /* PyObject cname: __pyx_n_u_p */
  {__pyx_k_p1, sizeof(__pyx_k_p1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_p1 */
  {__pyx_k_p2, sizeof(__pyx_k_p2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_p2 */
  {__pyx_k_pause, sizeof(__pyx_k_pause), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pause */
  {__pyx_k_pi, sizeof(__pyx_k_pi), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pi */
  {__pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pickle */
  {__pyx_k_pitch, sizeof(__pyx_k_pitch), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pitch */
  {__pyx_k_pivot_x, sizeof(__pyx_k_pivot_x), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pivot_x */
  {__pyx_k_pivot_y, sizeof(__pyx_k_pivot_y), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pivot_y */
  {__pyx_k_pixel, sizeof(__pyx_k_pixel), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pixel */
  {__pyx_k_play, sizeof(__pyx_k_play), 0, 1, 1}, /* PyObject cname: __pyx_n_u_play */
  {__pyx_k_poll_event, sizeof(__pyx_k_poll_event), 0, 1, 1}, /* PyObject cname: __pyx_n_u_poll_event */
  {__pyx_k_pop, sizeof(__pyx_k_pop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pop */
  {__pyx_k_pos, sizeof(__pyx_k_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pos */
  {__pyx_k_pos_2, sizeof(__pyx_k_pos_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pos_2 */
  {__pyx_k_put_like, sizeof(__pyx_k_put_like), 0, 1, 1}, /* PyObject cname: __pyx_n_u_put_like */
  {__pyx_k_pysfml261, sizeof(__pyx_k_pysfml261), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pysfml261 */
  {__pyx_k_pysfml261_pyx, sizeof(__pyx_k_pysfml261_pyx), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_pysfml261_pyx */
  {__pyx_k_pystring, sizeof(__pyx_k_pystring), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pystring */
  {__pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pyx_PickleError */
  {__pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pyx_checksum */
  {__pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pyx_result */
  {__pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pyx_state */
  {__pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pyx_type */
  {__pyx_k_pyx_unpickle_TransformSfSprite, sizeof(__pyx_k_pyx_unpickle_TransformSfSprite), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pyx_unpickle_TransformSfSprite */
  {__pyx_k_pyx_unpickle_sfKeyboard, sizeof(__pyx_k_pyx_unpickle_sfKeyboard), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pyx_unpickle_sfKeyboard */
  {__pyx_k_pyx_unpickle_sfMouse, sizeof(__pyx_k_pyx_unpickle_sfMouse), 0, 1, 1}, /* PyObject cname: __pyx_n_u_pyx_unpickle_sfMouse */
  {__pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 1, 1}, /* PyObject cname: __pyx_n_u_qualname */
  {__pyx_k_r, sizeof(__pyx_k_r), 0, 1, 1}, /* PyObject cname: __pyx_n_u_r */
  {__pyx_k_radians, sizeof(__pyx_k_radians), 0, 1, 1}, /* PyObject cname: __pyx_n_u_radians */
  {__pyx_k_radius, sizeof(__pyx_k_radius), 0, 1, 1}, /* PyObject cname: __pyx_n_u_radius */
  {__pyx_k_rect, sizeof(__pyx_k_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rect */
  {__pyx_k_rect1, sizeof(__pyx_k_rect1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rect1 */
  {__pyx_k_rect2, sizeof(__pyx_k_rect2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rect2 */
  {__pyx_k_rectHeight, sizeof(__pyx_k_rectHeight), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rectHeight */
  {__pyx_k_rectLeft, sizeof(__pyx_k_rectLeft), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rectLeft */
  {__pyx_k_rectTop, sizeof(__pyx_k_rectTop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rectTop */
  {__pyx_k_rectWidth, sizeof(__pyx_k_rectWidth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rectWidth */
  {__pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 1, 1}, /* PyObject cname: __pyx_n_u_reduce */
  {__pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_reduce_cython */
  {__pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 1, 1}, /* PyObject cname: __pyx_n_u_reduce_ex */
  {__pyx_k_relative_pos, sizeof(__pyx_k_relative_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_relative_pos */
  {__pyx_k_relative_to_rect, sizeof(__pyx_k_relative_to_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_relative_to_rect */
  {__pyx_k_reset, sizeof(__pyx_k_reset), 0, 1, 1}, /* PyObject cname: __pyx_n_u_reset */
  {__pyx_k_resetRect, sizeof(__pyx_k_resetRect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_resetRect */
  {__pyx_k_reset_buffer, sizeof(__pyx_k_reset_buffer), 0, 1, 1}, /* PyObject cname: __pyx_n_u_reset_buffer */
  {__pyx_k_resize, sizeof(__pyx_k_resize), 0, 1, 1}, /* PyObject cname: __pyx_n_u_resize */
  {__pyx_k_restart_asmicroseconds, sizeof(__pyx_k_restart_asmicroseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_restart_asmicroseconds */
  {__pyx_k_restart_asmilliseconds, sizeof(__pyx_k_restart_asmilliseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_restart_asmilliseconds */
  {__pyx_k_restart_asseconds, sizeof(__pyx_k_restart_asseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_restart_asseconds */
  {__pyx_k_return, sizeof(__pyx_k_return), 0, 1, 1}, /* PyObject cname: __pyx_n_u_return */
  {__pyx_k_rotate, sizeof(__pyx_k_rotate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rotate */
  {__pyx_k_rotate_around_center, sizeof(__pyx_k_rotate_around_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_rotate_around_center */
  {__pyx_k_sc, sizeof(__pyx_k_sc), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sc */
  {__pyx_k_scalar_product, sizeof(__pyx_k_scalar_product), 0, 1, 1}, /* PyObject cname: __pyx_n_u_scalar_product */
  {__pyx_k_scale, sizeof(__pyx_k_scale), 0, 1, 1}, /* PyObject cname: __pyx_n_u_scale */
  {__pyx_k_scancode, sizeof(__pyx_k_scancode), 0, 1, 1}, /* PyObject cname: __pyx_n_u_scancode */
  {__pyx_k_seconds, sizeof(__pyx_k_seconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_seconds */
  {__pyx_k_self, sizeof(__pyx_k_self), 0, 1, 1}, /* PyObject cname: __pyx_n_u_self */
  {__pyx_k_set_active, sizeof(__pyx_k_set_active), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_active */
  {__pyx_k_set_alpha, sizeof(__pyx_k_set_alpha), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_alpha */
  {__pyx_k_set_attenuation, sizeof(__pyx_k_set_attenuation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_attenuation */
  {__pyx_k_set_buffer, sizeof(__pyx_k_set_buffer), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_buffer */
  {__pyx_k_set_cache_size, sizeof(__pyx_k_set_cache_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_cache_size */
  {__pyx_k_set_center, sizeof(__pyx_k_set_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_center */
  {__pyx_k_set_character_size, sizeof(__pyx_k_set_character_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_character_size */
  {__pyx_k_set_color, sizeof(__pyx_k_set_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_color */
  {__pyx_k_set_fill_color, sizeof(__pyx_k_set_fill_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_fill_color */
  {__pyx_k_set_font, sizeof(__pyx_k_set_font), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_font */
  {__pyx_k_set_framerate_limit, sizeof(__pyx_k_set_framerate_limit), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_framerate_limit */
  {__pyx_k_set_icon, sizeof(__pyx_k_set_icon), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_icon */
  {__pyx_k_set_left_top, sizeof(__pyx_k_set_left_top), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_left_top */
  {__pyx_k_set_loop, sizeof(__pyx_k_set_loop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_loop */
  {__pyx_k_set_min_distance, sizeof(__pyx_k_set_min_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_min_distance */
  {__pyx_k_set_mouse_cursor_visible, sizeof(__pyx_k_set_mouse_cursor_visible), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_mouse_cursor_visible */
  {__pyx_k_set_name, sizeof(__pyx_k_set_name), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_name */
  {__pyx_k_set_pitch, sizeof(__pyx_k_set_pitch), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_pitch */
  {__pyx_k_set_position, sizeof(__pyx_k_set_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_position */
  {__pyx_k_set_radius, sizeof(__pyx_k_set_radius), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_radius */
  {__pyx_k_set_relative_to, sizeof(__pyx_k_set_relative_to), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_relative_to */
  {__pyx_k_set_rotation, sizeof(__pyx_k_set_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_rotation */
  {__pyx_k_set_rotation_around_center, sizeof(__pyx_k_set_rotation_around_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_rotation_around_center */
  {__pyx_k_set_scale, sizeof(__pyx_k_set_scale), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_scale */
  {__pyx_k_set_size, sizeof(__pyx_k_set_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_size */
  {__pyx_k_set_smooth, sizeof(__pyx_k_set_smooth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_smooth */
  {__pyx_k_set_srgb, sizeof(__pyx_k_set_srgb), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_srgb */
  {__pyx_k_set_string, sizeof(__pyx_k_set_string), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_string */
  {__pyx_k_set_style, sizeof(__pyx_k_set_style), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_style */
  {__pyx_k_set_uniform, sizeof(__pyx_k_set_uniform), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_uniform */
  {__pyx_k_set_value, sizeof(__pyx_k_set_value), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_value */
  {__pyx_k_set_view, sizeof(__pyx_k_set_view), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_view */
  {__pyx_k_set_visible, sizeof(__pyx_k_set_visible), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_visible */
  {__pyx_k_set_volume, sizeof(__pyx_k_set_volume), 0, 1, 1}, /* PyObject cname: __pyx_n_u_set_volume */
  {__pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_setstate */
  {__pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_setstate_cython */
  {__pyx_k_sfCircleShape, sizeof(__pyx_k_sfCircleShape), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape */
  {__pyx_k_sfCircleShape___reduce_cython, sizeof(__pyx_k_sfCircleShape___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape___reduce_cython */
  {__pyx_k_sfCircleShape___setstate_cython, sizeof(__pyx_k_sfCircleShape___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape___setstate_cython */
  {__pyx_k_sfCircleShape_clone, sizeof(__pyx_k_sfCircleShape_clone), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_clone */
  {__pyx_k_sfCircleShape_contains, sizeof(__pyx_k_sfCircleShape_contains), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_contains */
  {__pyx_k_sfCircleShape_get_alpha, sizeof(__pyx_k_sfCircleShape_get_alpha), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_get_alpha */
  {__pyx_k_sfCircleShape_get_fill_color, sizeof(__pyx_k_sfCircleShape_get_fill_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_get_fill_color */
  {__pyx_k_sfCircleShape_get_global_bounds, sizeof(__pyx_k_sfCircleShape_get_global_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_get_global_bounds */
  {__pyx_k_sfCircleShape_get_local_bounds, sizeof(__pyx_k_sfCircleShape_get_local_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_get_local_bounds */
  {__pyx_k_sfCircleShape_get_position, sizeof(__pyx_k_sfCircleShape_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_get_position */
  {__pyx_k_sfCircleShape_get_radius, sizeof(__pyx_k_sfCircleShape_get_radius), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_get_radius */
  {__pyx_k_sfCircleShape_get_rotation, sizeof(__pyx_k_sfCircleShape_get_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_get_rotation */
  {__pyx_k_sfCircleShape_intersects, sizeof(__pyx_k_sfCircleShape_intersects), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_intersects */
  {__pyx_k_sfCircleShape_move, sizeof(__pyx_k_sfCircleShape_move), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_move */
  {__pyx_k_sfCircleShape_rotate, sizeof(__pyx_k_sfCircleShape_rotate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_rotate */
  {__pyx_k_sfCircleShape_set_alpha, sizeof(__pyx_k_sfCircleShape_set_alpha), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_set_alpha */
  {__pyx_k_sfCircleShape_set_fill_color, sizeof(__pyx_k_sfCircleShape_set_fill_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_set_fill_color */
  {__pyx_k_sfCircleShape_set_position, sizeof(__pyx_k_sfCircleShape_set_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_set_position */
  {__pyx_k_sfCircleShape_set_radius, sizeof(__pyx_k_sfCircleShape_set_radius), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_set_radius */
  {__pyx_k_sfCircleShape_set_rotation, sizeof(__pyx_k_sfCircleShape_set_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfCircleShape_set_rotation */
  {__pyx_k_sfClock, sizeof(__pyx_k_sfClock), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock */
  {__pyx_k_sfClock___reduce_cython, sizeof(__pyx_k_sfClock___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock___reduce_cython */
  {__pyx_k_sfClock___setstate_cython, sizeof(__pyx_k_sfClock___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock___setstate_cython */
  {__pyx_k_sfClock_get_elapsed_microseconds, sizeof(__pyx_k_sfClock_get_elapsed_microseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock_get_elapsed_microseconds */
  {__pyx_k_sfClock_get_elapsed_milliseconds, sizeof(__pyx_k_sfClock_get_elapsed_milliseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock_get_elapsed_milliseconds */
  {__pyx_k_sfClock_get_elapsed_seconds, sizeof(__pyx_k_sfClock_get_elapsed_seconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock_get_elapsed_seconds */
  {__pyx_k_sfClock_restart_asmicroseconds, sizeof(__pyx_k_sfClock_restart_asmicroseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock_restart_asmicroseconds */
  {__pyx_k_sfClock_restart_asmilliseconds, sizeof(__pyx_k_sfClock_restart_asmilliseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock_restart_asmilliseconds */
  {__pyx_k_sfClock_restart_asseconds, sizeof(__pyx_k_sfClock_restart_asseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfClock_restart_asseconds */
  {__pyx_k_sfColor, sizeof(__pyx_k_sfColor), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfColor */
  {__pyx_k_sfColor___reduce_cython, sizeof(__pyx_k_sfColor___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfColor___reduce_cython */
  {__pyx_k_sfColor___setstate_cython, sizeof(__pyx_k_sfColor___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfColor___setstate_cython */
  {__pyx_k_sfEvent, sizeof(__pyx_k_sfEvent), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfEvent */
  {__pyx_k_sfEvent___reduce_cython, sizeof(__pyx_k_sfEvent___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfEvent___reduce_cython */
  {__pyx_k_sfEvent___setstate_cython, sizeof(__pyx_k_sfEvent___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfEvent___setstate_cython */
  {__pyx_k_sfEvent_get_key_code, sizeof(__pyx_k_sfEvent_get_key_code), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfEvent_get_key_code */
  {__pyx_k_sfEvent_get_mouse_button, sizeof(__pyx_k_sfEvent_get_mouse_button), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfEvent_get_mouse_button */
  {__pyx_k_sfEvent_get_text_unicode, sizeof(__pyx_k_sfEvent_get_text_unicode), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfEvent_get_text_unicode */
  {__pyx_k_sfEvent_get_type, sizeof(__pyx_k_sfEvent_get_type), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfEvent_get_type */
  {__pyx_k_sfFloatRect, sizeof(__pyx_k_sfFloatRect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect */
  {__pyx_k_sfFloatRect___reduce_cython, sizeof(__pyx_k_sfFloatRect___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect___reduce_cython */
  {__pyx_k_sfFloatRect___setstate_cython, sizeof(__pyx_k_sfFloatRect___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect___setstate_cython */
  {__pyx_k_sfFloatRect_contains, sizeof(__pyx_k_sfFloatRect_contains), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect_contains */
  {__pyx_k_sfFloatRect_get_center, sizeof(__pyx_k_sfFloatRect_get_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect_get_center */
  {__pyx_k_sfFloatRect_get_position, sizeof(__pyx_k_sfFloatRect_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect_get_position */
  {__pyx_k_sfFloatRect_get_size, sizeof(__pyx_k_sfFloatRect_get_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect_get_size */
  {__pyx_k_sfFloatRect_intersects, sizeof(__pyx_k_sfFloatRect_intersects), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect_intersects */
  {__pyx_k_sfFloatRect_move, sizeof(__pyx_k_sfFloatRect_move), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect_move */
  {__pyx_k_sfFloatRect_set_center, sizeof(__pyx_k_sfFloatRect_set_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFloatRect_set_center */
  {__pyx_k_sfFont, sizeof(__pyx_k_sfFont), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFont */
  {__pyx_k_sfFont___reduce_cython, sizeof(__pyx_k_sfFont___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFont___reduce_cython */
  {__pyx_k_sfFont___setstate_cython, sizeof(__pyx_k_sfFont___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFont___setstate_cython */
  {__pyx_k_sfFont_is_smooth, sizeof(__pyx_k_sfFont_is_smooth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFont_is_smooth */
  {__pyx_k_sfFont_set_smooth, sizeof(__pyx_k_sfFont_set_smooth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfFont_set_smooth */
  {__pyx_k_sfImage, sizeof(__pyx_k_sfImage), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfImage */
  {__pyx_k_sfImage___reduce_cython, sizeof(__pyx_k_sfImage___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfImage___reduce_cython */
  {__pyx_k_sfImage___setstate_cython, sizeof(__pyx_k_sfImage___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfImage___setstate_cython */
  {__pyx_k_sfKeyboard, sizeof(__pyx_k_sfKeyboard), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfKeyboard */
  {__pyx_k_sfKeyboard___reduce_cython, sizeof(__pyx_k_sfKeyboard___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfKeyboard___reduce_cython */
  {__pyx_k_sfKeyboard___setstate_cython, sizeof(__pyx_k_sfKeyboard___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfKeyboard___setstate_cython */
  {__pyx_k_sfKeyboard_is_key_pressed, sizeof(__pyx_k_sfKeyboard_is_key_pressed), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfKeyboard_is_key_pressed */
  {__pyx_k_sfKeyboard_localize, sizeof(__pyx_k_sfKeyboard_localize), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfKeyboard_localize */
  {__pyx_k_sfMouse, sizeof(__pyx_k_sfMouse), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMouse */
  {__pyx_k_sfMouse___reduce_cython, sizeof(__pyx_k_sfMouse___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMouse___reduce_cython */
  {__pyx_k_sfMouse___setstate_cython, sizeof(__pyx_k_sfMouse___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMouse___setstate_cython */
  {__pyx_k_sfMouse_get_position, sizeof(__pyx_k_sfMouse_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMouse_get_position */
  {__pyx_k_sfMouse_is_button_pressed, sizeof(__pyx_k_sfMouse_is_button_pressed), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMouse_is_button_pressed */
  {__pyx_k_sfMouse_relative_pos, sizeof(__pyx_k_sfMouse_relative_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMouse_relative_pos */
  {__pyx_k_sfMouse_relative_to_rect, sizeof(__pyx_k_sfMouse_relative_to_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMouse_relative_to_rect */
  {__pyx_k_sfMouse_world_pos, sizeof(__pyx_k_sfMouse_world_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMouse_world_pos */
  {__pyx_k_sfMusic, sizeof(__pyx_k_sfMusic), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic */
  {__pyx_k_sfMusic___reduce_cython, sizeof(__pyx_k_sfMusic___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic___reduce_cython */
  {__pyx_k_sfMusic___setstate_cython, sizeof(__pyx_k_sfMusic___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic___setstate_cython */
  {__pyx_k_sfMusic_get_attenuation, sizeof(__pyx_k_sfMusic_get_attenuation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_get_attenuation */
  {__pyx_k_sfMusic_get_loop, sizeof(__pyx_k_sfMusic_get_loop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_get_loop */
  {__pyx_k_sfMusic_get_min_distance, sizeof(__pyx_k_sfMusic_get_min_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_get_min_distance */
  {__pyx_k_sfMusic_get_pitch, sizeof(__pyx_k_sfMusic_get_pitch), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_get_pitch */
  {__pyx_k_sfMusic_get_position, sizeof(__pyx_k_sfMusic_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_get_position */
  {__pyx_k_sfMusic_get_status, sizeof(__pyx_k_sfMusic_get_status), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_get_status */
  {__pyx_k_sfMusic_get_volume, sizeof(__pyx_k_sfMusic_get_volume), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_get_volume */
  {__pyx_k_sfMusic_pause, sizeof(__pyx_k_sfMusic_pause), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_pause */
  {__pyx_k_sfMusic_play, sizeof(__pyx_k_sfMusic_play), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_play */
  {__pyx_k_sfMusic_set_attenuation, sizeof(__pyx_k_sfMusic_set_attenuation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_set_attenuation */
  {__pyx_k_sfMusic_set_loop, sizeof(__pyx_k_sfMusic_set_loop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_set_loop */
  {__pyx_k_sfMusic_set_min_distance, sizeof(__pyx_k_sfMusic_set_min_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_set_min_distance */
  {__pyx_k_sfMusic_set_pitch, sizeof(__pyx_k_sfMusic_set_pitch), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_set_pitch */
  {__pyx_k_sfMusic_set_position, sizeof(__pyx_k_sfMusic_set_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_set_position */
  {__pyx_k_sfMusic_set_relative_to, sizeof(__pyx_k_sfMusic_set_relative_to), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_set_relative_to */
  {__pyx_k_sfMusic_set_volume, sizeof(__pyx_k_sfMusic_set_volume), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_set_volume */
  {__pyx_k_sfMusic_stop, sizeof(__pyx_k_sfMusic_stop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfMusic_stop */
  {__pyx_k_sfRectangleShape, sizeof(__pyx_k_sfRectangleShape), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape */
  {__pyx_k_sfRectangleShape___reduce_cython, sizeof(__pyx_k_sfRectangleShape___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape___reduce_cython */
  {__pyx_k_sfRectangleShape___setstate_cyth, sizeof(__pyx_k_sfRectangleShape___setstate_cyth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape___setstate_cyth */
  {__pyx_k_sfRectangleShape_clone, sizeof(__pyx_k_sfRectangleShape_clone), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_clone */
  {__pyx_k_sfRectangleShape_contains, sizeof(__pyx_k_sfRectangleShape_contains), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_contains */
  {__pyx_k_sfRectangleShape_get_alpha, sizeof(__pyx_k_sfRectangleShape_get_alpha), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_get_alpha */
  {__pyx_k_sfRectangleShape_get_fill_color, sizeof(__pyx_k_sfRectangleShape_get_fill_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_get_fill_color */
  {__pyx_k_sfRectangleShape_get_global_boun, sizeof(__pyx_k_sfRectangleShape_get_global_boun), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_get_global_boun */
  {__pyx_k_sfRectangleShape_get_local_bound, sizeof(__pyx_k_sfRectangleShape_get_local_bound), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_get_local_bound */
  {__pyx_k_sfRectangleShape_get_position, sizeof(__pyx_k_sfRectangleShape_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_get_position */
  {__pyx_k_sfRectangleShape_get_rotation, sizeof(__pyx_k_sfRectangleShape_get_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_get_rotation */
  {__pyx_k_sfRectangleShape_get_size, sizeof(__pyx_k_sfRectangleShape_get_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_get_size */
  {__pyx_k_sfRectangleShape_intersects, sizeof(__pyx_k_sfRectangleShape_intersects), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_intersects */
  {__pyx_k_sfRectangleShape_move, sizeof(__pyx_k_sfRectangleShape_move), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_move */
  {__pyx_k_sfRectangleShape_rotate, sizeof(__pyx_k_sfRectangleShape_rotate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_rotate */
  {__pyx_k_sfRectangleShape_set_alpha, sizeof(__pyx_k_sfRectangleShape_set_alpha), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_set_alpha */
  {__pyx_k_sfRectangleShape_set_fill_color, sizeof(__pyx_k_sfRectangleShape_set_fill_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_set_fill_color */
  {__pyx_k_sfRectangleShape_set_position, sizeof(__pyx_k_sfRectangleShape_set_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_set_position */
  {__pyx_k_sfRectangleShape_set_rotation, sizeof(__pyx_k_sfRectangleShape_set_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_set_rotation */
  {__pyx_k_sfRectangleShape_set_size, sizeof(__pyx_k_sfRectangleShape_set_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRectangleShape_set_size */
  {__pyx_k_sfRenderStates, sizeof(__pyx_k_sfRenderStates), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderStates */
  {__pyx_k_sfRenderStates___reduce_cython, sizeof(__pyx_k_sfRenderStates___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderStates___reduce_cython */
  {__pyx_k_sfRenderStates___setstate_cython, sizeof(__pyx_k_sfRenderStates___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderStates___setstate_cython */
  {__pyx_k_sfRenderWindow, sizeof(__pyx_k_sfRenderWindow), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow */
  {__pyx_k_sfRenderWindow___reduce_cython, sizeof(__pyx_k_sfRenderWindow___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow___reduce_cython */
  {__pyx_k_sfRenderWindow___setstate_cython, sizeof(__pyx_k_sfRenderWindow___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow___setstate_cython */
  {__pyx_k_sfRenderWindow_clear, sizeof(__pyx_k_sfRenderWindow_clear), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_clear */
  {__pyx_k_sfRenderWindow_close, sizeof(__pyx_k_sfRenderWindow_close), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_close */
  {__pyx_k_sfRenderWindow_display, sizeof(__pyx_k_sfRenderWindow_display), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_display */
  {__pyx_k_sfRenderWindow_draw_circle_shape, sizeof(__pyx_k_sfRenderWindow_draw_circle_shape), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_draw_circle_shape */
  {__pyx_k_sfRenderWindow_draw_rect_shape, sizeof(__pyx_k_sfRenderWindow_draw_rect_shape), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_draw_rect_shape */
  {__pyx_k_sfRenderWindow_draw_sprite, sizeof(__pyx_k_sfRenderWindow_draw_sprite), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_draw_sprite */
  {__pyx_k_sfRenderWindow_draw_sprite_use_s, sizeof(__pyx_k_sfRenderWindow_draw_sprite_use_s), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_draw_sprite_use_s */
  {__pyx_k_sfRenderWindow_draw_text, sizeof(__pyx_k_sfRenderWindow_draw_text), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_draw_text */
  {__pyx_k_sfRenderWindow_get_desktop_rect, sizeof(__pyx_k_sfRenderWindow_get_desktop_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_get_desktop_rect */
  {__pyx_k_sfRenderWindow_get_position, sizeof(__pyx_k_sfRenderWindow_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_get_position */
  {__pyx_k_sfRenderWindow_get_size, sizeof(__pyx_k_sfRenderWindow_get_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_get_size */
  {__pyx_k_sfRenderWindow_get_view, sizeof(__pyx_k_sfRenderWindow_get_view), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_get_view */
  {__pyx_k_sfRenderWindow_is_open, sizeof(__pyx_k_sfRenderWindow_is_open), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_is_open */
  {__pyx_k_sfRenderWindow_map_coords_to_pix, sizeof(__pyx_k_sfRenderWindow_map_coords_to_pix), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_map_coords_to_pix */
  {__pyx_k_sfRenderWindow_map_pixel_to_coor, sizeof(__pyx_k_sfRenderWindow_map_pixel_to_coor), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_map_pixel_to_coor */
  {__pyx_k_sfRenderWindow_move, sizeof(__pyx_k_sfRenderWindow_move), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_move */
  {__pyx_k_sfRenderWindow_poll_event, sizeof(__pyx_k_sfRenderWindow_poll_event), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_poll_event */
  {__pyx_k_sfRenderWindow_set_active, sizeof(__pyx_k_sfRenderWindow_set_active), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_set_active */
  {__pyx_k_sfRenderWindow_set_framerate_lim, sizeof(__pyx_k_sfRenderWindow_set_framerate_lim), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_set_framerate_lim */
  {__pyx_k_sfRenderWindow_set_icon, sizeof(__pyx_k_sfRenderWindow_set_icon), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_set_icon */
  {__pyx_k_sfRenderWindow_set_mouse_cursor, sizeof(__pyx_k_sfRenderWindow_set_mouse_cursor), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_set_mouse_cursor */
  {__pyx_k_sfRenderWindow_set_position, sizeof(__pyx_k_sfRenderWindow_set_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_set_position */
  {__pyx_k_sfRenderWindow_set_view, sizeof(__pyx_k_sfRenderWindow_set_view), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_set_view */
  {__pyx_k_sfRenderWindow_set_visible, sizeof(__pyx_k_sfRenderWindow_set_visible), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfRenderWindow_set_visible */
  {__pyx_k_sfShader, sizeof(__pyx_k_sfShader), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfShader */
  {__pyx_k_sfShader___reduce_cython, sizeof(__pyx_k_sfShader___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfShader___reduce_cython */
  {__pyx_k_sfShader___setstate_cython, sizeof(__pyx_k_sfShader___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfShader___setstate_cython */
  {__pyx_k_sfShader_is_available, sizeof(__pyx_k_sfShader_is_available), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfShader_is_available */
  {__pyx_k_sfShader_set_uniform, sizeof(__pyx_k_sfShader_set_uniform), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfShader_set_uniform */
  {__pyx_k_sfSound, sizeof(__pyx_k_sfSound), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound */
  {__pyx_k_sfSoundBuffer, sizeof(__pyx_k_sfSoundBuffer), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSoundBuffer */
  {__pyx_k_sfSoundBuffer___reduce_cython, sizeof(__pyx_k_sfSoundBuffer___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSoundBuffer___reduce_cython */
  {__pyx_k_sfSoundBuffer___setstate_cython, sizeof(__pyx_k_sfSoundBuffer___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSoundBuffer___setstate_cython */
  {__pyx_k_sfSound___reduce_cython, sizeof(__pyx_k_sfSound___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound___reduce_cython */
  {__pyx_k_sfSound___setstate_cython, sizeof(__pyx_k_sfSound___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound___setstate_cython */
  {__pyx_k_sfSound_get_attenuation, sizeof(__pyx_k_sfSound_get_attenuation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_get_attenuation */
  {__pyx_k_sfSound_get_loop, sizeof(__pyx_k_sfSound_get_loop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_get_loop */
  {__pyx_k_sfSound_get_min_distance, sizeof(__pyx_k_sfSound_get_min_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_get_min_distance */
  {__pyx_k_sfSound_get_pitch, sizeof(__pyx_k_sfSound_get_pitch), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_get_pitch */
  {__pyx_k_sfSound_get_position, sizeof(__pyx_k_sfSound_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_get_position */
  {__pyx_k_sfSound_get_status, sizeof(__pyx_k_sfSound_get_status), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_get_status */
  {__pyx_k_sfSound_get_volume, sizeof(__pyx_k_sfSound_get_volume), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_get_volume */
  {__pyx_k_sfSound_pause, sizeof(__pyx_k_sfSound_pause), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_pause */
  {__pyx_k_sfSound_play, sizeof(__pyx_k_sfSound_play), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_play */
  {__pyx_k_sfSound_reset_buffer, sizeof(__pyx_k_sfSound_reset_buffer), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_reset_buffer */
  {__pyx_k_sfSound_set_attenuation, sizeof(__pyx_k_sfSound_set_attenuation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_set_attenuation */
  {__pyx_k_sfSound_set_buffer, sizeof(__pyx_k_sfSound_set_buffer), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_set_buffer */
  {__pyx_k_sfSound_set_loop, sizeof(__pyx_k_sfSound_set_loop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_set_loop */
  {__pyx_k_sfSound_set_min_distance, sizeof(__pyx_k_sfSound_set_min_distance), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_set_min_distance */
  {__pyx_k_sfSound_set_pitch, sizeof(__pyx_k_sfSound_set_pitch), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_set_pitch */
  {__pyx_k_sfSound_set_position, sizeof(__pyx_k_sfSound_set_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_set_position */
  {__pyx_k_sfSound_set_relative_to, sizeof(__pyx_k_sfSound_set_relative_to), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_set_relative_to */
  {__pyx_k_sfSound_set_volume, sizeof(__pyx_k_sfSound_set_volume), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_set_volume */
  {__pyx_k_sfSound_stop, sizeof(__pyx_k_sfSound_stop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSound_stop */
  {__pyx_k_sfSprite, sizeof(__pyx_k_sfSprite), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite */
  {__pyx_k_sfSprite___reduce_cython, sizeof(__pyx_k_sfSprite___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite___reduce_cython */
  {__pyx_k_sfSprite___setstate_cython, sizeof(__pyx_k_sfSprite___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite___setstate_cython */
  {__pyx_k_sfSprite_clone, sizeof(__pyx_k_sfSprite_clone), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_clone */
  {__pyx_k_sfSprite_collide_shift_h, sizeof(__pyx_k_sfSprite_collide_shift_h), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_collide_shift_h */
  {__pyx_k_sfSprite_collide_shift_v, sizeof(__pyx_k_sfSprite_collide_shift_v), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_collide_shift_v */
  {__pyx_k_sfSprite_contains, sizeof(__pyx_k_sfSprite_contains), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_contains */
  {__pyx_k_sfSprite_get_alpha, sizeof(__pyx_k_sfSprite_get_alpha), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_get_alpha */
  {__pyx_k_sfSprite_get_center, sizeof(__pyx_k_sfSprite_get_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_get_center */
  {__pyx_k_sfSprite_get_color, sizeof(__pyx_k_sfSprite_get_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_get_color */
  {__pyx_k_sfSprite_get_global_bounds, sizeof(__pyx_k_sfSprite_get_global_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_get_global_bounds */
  {__pyx_k_sfSprite_get_local_bounds, sizeof(__pyx_k_sfSprite_get_local_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_get_local_bounds */
  {__pyx_k_sfSprite_get_position, sizeof(__pyx_k_sfSprite_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_get_position */
  {__pyx_k_sfSprite_get_rotation, sizeof(__pyx_k_sfSprite_get_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_get_rotation */
  {__pyx_k_sfSprite_get_scale, sizeof(__pyx_k_sfSprite_get_scale), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_get_scale */
  {__pyx_k_sfSprite_in_area, sizeof(__pyx_k_sfSprite_in_area), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_in_area */
  {__pyx_k_sfSprite_intersects, sizeof(__pyx_k_sfSprite_intersects), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_intersects */
  {__pyx_k_sfSprite_intersects_rect, sizeof(__pyx_k_sfSprite_intersects_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_intersects_rect */
  {__pyx_k_sfSprite_move, sizeof(__pyx_k_sfSprite_move), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_move */
  {__pyx_k_sfSprite_rotate, sizeof(__pyx_k_sfSprite_rotate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_rotate */
  {__pyx_k_sfSprite_set_alpha, sizeof(__pyx_k_sfSprite_set_alpha), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_set_alpha */
  {__pyx_k_sfSprite_set_center, sizeof(__pyx_k_sfSprite_set_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_set_center */
  {__pyx_k_sfSprite_set_color, sizeof(__pyx_k_sfSprite_set_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_set_color */
  {__pyx_k_sfSprite_set_position, sizeof(__pyx_k_sfSprite_set_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_set_position */
  {__pyx_k_sfSprite_set_rotation, sizeof(__pyx_k_sfSprite_set_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_set_rotation */
  {__pyx_k_sfSprite_set_scale, sizeof(__pyx_k_sfSprite_set_scale), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfSprite_set_scale */
  {__pyx_k_sfString, sizeof(__pyx_k_sfString), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString */
  {__pyx_k_sfString___reduce_cython, sizeof(__pyx_k_sfString___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString___reduce_cython */
  {__pyx_k_sfString___setstate_cython, sizeof(__pyx_k_sfString___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString___setstate_cython */
  {__pyx_k_sfString_as_pystring, sizeof(__pyx_k_sfString_as_pystring), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString_as_pystring */
  {__pyx_k_sfString_clear, sizeof(__pyx_k_sfString_clear), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString_clear */
  {__pyx_k_sfString_drop_cache, sizeof(__pyx_k_sfString_drop_cache), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString_drop_cache */
  {__pyx_k_sfString_from_pystring, sizeof(__pyx_k_sfString_from_pystring), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString_from_pystring */
  {__pyx_k_sfString_is_empty, sizeof(__pyx_k_sfString_is_empty), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString_is_empty */
  {__pyx_k_sfString_set_cache_size, sizeof(__pyx_k_sfString_set_cache_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfString_set_cache_size */
  {__pyx_k_sfText, sizeof(__pyx_k_sfText), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText */
  {__pyx_k_sfText___reduce_cython, sizeof(__pyx_k_sfText___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText___reduce_cython */
  {__pyx_k_sfText___setstate_cython, sizeof(__pyx_k_sfText___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText___setstate_cython */
  {__pyx_k_sfText_contains, sizeof(__pyx_k_sfText_contains), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_contains */
  {__pyx_k_sfText_get_global_bounds, sizeof(__pyx_k_sfText_get_global_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_get_global_bounds */
  {__pyx_k_sfText_get_local_bounds, sizeof(__pyx_k_sfText_get_local_bounds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_get_local_bounds */
  {__pyx_k_sfText_get_position, sizeof(__pyx_k_sfText_get_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_get_position */
  {__pyx_k_sfText_get_pystring, sizeof(__pyx_k_sfText_get_pystring), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_get_pystring */
  {__pyx_k_sfText_get_rotation, sizeof(__pyx_k_sfText_get_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_get_rotation */
  {__pyx_k_sfText_get_scale, sizeof(__pyx_k_sfText_get_scale), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_get_scale */
  {__pyx_k_sfText_intersects, sizeof(__pyx_k_sfText_intersects), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_intersects */
  {__pyx_k_sfText_move, sizeof(__pyx_k_sfText_move), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_move */
  {__pyx_k_sfText_rotate, sizeof(__pyx_k_sfText_rotate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_rotate */
  {__pyx_k_sfText_set_character_size, sizeof(__pyx_k_sfText_set_character_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_set_character_size */
  {__pyx_k_sfText_set_fill_color, sizeof(__pyx_k_sfText_set_fill_color), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_set_fill_color */
  {__pyx_k_sfText_set_font, sizeof(__pyx_k_sfText_set_font), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_set_font */
  {__pyx_k_sfText_set_position, sizeof(__pyx_k_sfText_set_position), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_set_position */
  {__pyx_k_sfText_set_rotation, sizeof(__pyx_k_sfText_set_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_set_rotation */
  {__pyx_k_sfText_set_scale, sizeof(__pyx_k_sfText_set_scale), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_set_scale */
  {__pyx_k_sfText_set_string, sizeof(__pyx_k_sfText_set_string), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_set_string */
  {__pyx_k_sfText_set_style, sizeof(__pyx_k_sfText_set_style), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfText_set_style */
  {__pyx_k_sfTexture, sizeof(__pyx_k_sfTexture), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTexture */
  {__pyx_k_sfTexture___reduce_cython, sizeof(__pyx_k_sfTexture___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTexture___reduce_cython */
  {__pyx_k_sfTexture___setstate_cython, sizeof(__pyx_k_sfTexture___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTexture___setstate_cython */
  {__pyx_k_sfTexture_get_size, sizeof(__pyx_k_sfTexture_get_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTexture_get_size */
  {__pyx_k_sfTexture_is_smooth, sizeof(__pyx_k_sfTexture_is_smooth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTexture_is_smooth */
  {__pyx_k_sfTexture_is_srgb, sizeof(__pyx_k_sfTexture_is_srgb), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTexture_is_srgb */
  {__pyx_k_sfTexture_set_smooth, sizeof(__pyx_k_sfTexture_set_smooth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTexture_set_smooth */
  {__pyx_k_sfTexture_set_srgb, sizeof(__pyx_k_sfTexture_set_srgb), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTexture_set_srgb */
  {__pyx_k_sfTime, sizeof(__pyx_k_sfTime), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTime */
  {__pyx_k_sfTime___reduce_cython, sizeof(__pyx_k_sfTime___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTime___reduce_cython */
  {__pyx_k_sfTime___setstate_cython, sizeof(__pyx_k_sfTime___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTime___setstate_cython */
  {__pyx_k_sfTime_asMicroseconds, sizeof(__pyx_k_sfTime_asMicroseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTime_asMicroseconds */
  {__pyx_k_sfTime_asMilliseconds, sizeof(__pyx_k_sfTime_asMilliseconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTime_asMilliseconds */
  {__pyx_k_sfTime_asSeconds, sizeof(__pyx_k_sfTime_asSeconds), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfTime_asSeconds */
  {__pyx_k_sfVideoMode, sizeof(__pyx_k_sfVideoMode), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfVideoMode */
  {__pyx_k_sfVideoMode___reduce_cython, sizeof(__pyx_k_sfVideoMode___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfVideoMode___reduce_cython */
  {__pyx_k_sfVideoMode___setstate_cython, sizeof(__pyx_k_sfVideoMode___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfVideoMode___setstate_cython */
  {__pyx_k_sfVideoMode_get_desktop_mode, sizeof(__pyx_k_sfVideoMode_get_desktop_mode), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfVideoMode_get_desktop_mode */
  {__pyx_k_sfVideoMode_is_valid, sizeof(__pyx_k_sfVideoMode_is_valid), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfVideoMode_is_valid */
  {__pyx_k_sfView, sizeof(__pyx_k_sfView), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView */
  {__pyx_k_sfView___reduce_cython, sizeof(__pyx_k_sfView___reduce_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView___reduce_cython */
  {__pyx_k_sfView___setstate_cython, sizeof(__pyx_k_sfView___setstate_cython), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView___setstate_cython */
  {__pyx_k_sfView_get_center, sizeof(__pyx_k_sfView_get_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_get_center */
  {__pyx_k_sfView_get_left_top, sizeof(__pyx_k_sfView_get_left_top), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_get_left_top */
  {__pyx_k_sfView_get_rect, sizeof(__pyx_k_sfView_get_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_get_rect */
  {__pyx_k_sfView_get_rotation, sizeof(__pyx_k_sfView_get_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_get_rotation */
  {__pyx_k_sfView_get_size, sizeof(__pyx_k_sfView_get_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_get_size */
  {__pyx_k_sfView_move, sizeof(__pyx_k_sfView_move), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_move */
  {__pyx_k_sfView_rotate, sizeof(__pyx_k_sfView_rotate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_rotate */
  {__pyx_k_sfView_rotate_around_center, sizeof(__pyx_k_sfView_rotate_around_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_rotate_around_center */
  {__pyx_k_sfView_set_center, sizeof(__pyx_k_sfView_set_center), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_set_center */
  {__pyx_k_sfView_set_left_top, sizeof(__pyx_k_sfView_set_left_top), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_set_left_top */
  {__pyx_k_sfView_set_rotation, sizeof(__pyx_k_sfView_set_rotation), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_set_rotation */
  {__pyx_k_sfView_set_rotation_around_cente, sizeof(__pyx_k_sfView_set_rotation_around_cente), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_set_rotation_around_cente */
  {__pyx_k_sfView_set_size, sizeof(__pyx_k_sfView_set_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_set_size */
  {__pyx_k_sfView_zoom, sizeof(__pyx_k_sfView_zoom), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sfView_zoom */
  {__pyx_k_shader, sizeof(__pyx_k_shader), 0, 1, 1}, /* PyObject cname: __pyx_n_u_shader */
  {__pyx_k_shape, sizeof(__pyx_k_shape), 0, 1, 1}, /* PyObject cname: __pyx_n_u_shape */
  {__pyx_k_shift, sizeof(__pyx_k_shift), 0, 1, 1}, /* PyObject cname: __pyx_n_u_shift */
  {__pyx_k_shift_dx, sizeof(__pyx_k_shift_dx), 0, 1, 1}, /* PyObject cname: __pyx_n_u_shift_dx */
  {__pyx_k_shift_dy, sizeof(__pyx_k_shift_dy), 0, 1, 1}, /* PyObject cname: __pyx_n_u_shift_dy */
  {__pyx_k_similar, sizeof(__pyx_k_similar), 0, 1, 1}, /* PyObject cname: __pyx_n_u_similar */
  {__pyx_k_similar_pos, sizeof(__pyx_k_similar_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_similar_pos */
  {__pyx_k_similar_size, sizeof(__pyx_k_similar_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_similar_size */
  {__pyx_k_sinus, sizeof(__pyx_k_sinus), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sinus */
  {__pyx_k_size, sizeof(__pyx_k_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_size */
  {__pyx_k_smooth, sizeof(__pyx_k_smooth), 0, 1, 1}, /* PyObject cname: __pyx_n_u_smooth */
  {__pyx_k_speed, sizeof(__pyx_k_speed), 0, 1, 1}, /* PyObject cname: __pyx_n_u_speed */
  {__pyx_k_speed_2, sizeof(__pyx_k_speed_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_speed_2 */
  {__pyx_k_sprite, sizeof(__pyx_k_sprite), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sprite */
  {__pyx_k_sprite1, sizeof(__pyx_k_sprite1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sprite1 */
  {__pyx_k_sprite1Left, sizeof(__pyx_k_sprite1Left), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sprite1Left */
  {__pyx_k_sprite1Upper, sizeof(__pyx_k_sprite1Upper), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sprite1Upper */
  {__pyx_k_sprite1_main, sizeof(__pyx_k_sprite1_main), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sprite1_main */
  {__pyx_k_sprite2, sizeof(__pyx_k_sprite2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sprite2 */
  {__pyx_k_sprites, sizeof(__pyx_k_sprites), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sprites */
  {__pyx_k_srgb, sizeof(__pyx_k_srgb), 0, 1, 1}, /* PyObject cname: __pyx_n_u_srgb */
  {__pyx_k_state, sizeof(__pyx_k_state), 0, 1, 1}, /* PyObject cname: __pyx_n_u_state */
  {__pyx_k_states, sizeof(__pyx_k_states), 0, 1, 1}, /* PyObject cname: __pyx_n_u_states */
  {__pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 1, 1}, /* PyObject cname: __pyx_n_u_staticmethod */
  {__pyx_k_stop, sizeof(__pyx_k_stop), 0, 1, 1}, /* PyObject cname: __pyx_n_u_stop */
  {__pyx_k_str, sizeof(__pyx_k_str), 0, 1, 1}, /* PyObject cname: __pyx_n_u_str */
  {__pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_stringsource */
  {__pyx_k_style, sizeof(__pyx_k_style), 0, 1, 1}, /* PyObject cname: __pyx_n_u_style */
  {__pyx_k_sub, sizeof(__pyx_k_sub), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sub */
  {__pyx_k_sum, sizeof(__pyx_k_sum), 0, 1, 1}, /* PyObject cname: __pyx_n_u_sum */
  {__pyx_k_swap, sizeof(__pyx_k_swap), 0, 1, 1}, /* PyObject cname: __pyx_n_u_swap */
  {__pyx_k_swap_pos, sizeof(__pyx_k_swap_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_swap_pos */
  {__pyx_k_swap_size, sizeof(__pyx_k_swap_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_swap_size */
  {__pyx_k_t_x1, sizeof(__pyx_k_t_x1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_t_x1 */
  {__pyx_k_t_x2, sizeof(__pyx_k_t_x2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_t_x2 */
  {__pyx_k_t_y1, sizeof(__pyx_k_t_y1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_t_y1 */
  {__pyx_k_t_y2, sizeof(__pyx_k_t_y2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_t_y2 */
  {__pyx_k_test, sizeof(__pyx_k_test), 0, 1, 1}, /* PyObject cname: __pyx_n_u_test */
  {__pyx_k_text, sizeof(__pyx_k_text), 0, 1, 1}, /* PyObject cname: __pyx_n_u_text */
  {__pyx_k_texture, sizeof(__pyx_k_texture), 0, 1, 1}, /* PyObject cname: __pyx_n_u_texture */
  {__pyx_k_textureSize, sizeof(__pyx_k_textureSize), 0, 1, 1}, /* PyObject cname: __pyx_n_u_textureSize */
  {__pyx_k_theyRect, sizeof(__pyx_k_theyRect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_theyRect */
  {__pyx_k_title, sizeof(__pyx_k_title), 0, 1, 1}, /* PyObject cname: __pyx_n_u_title */
  {__pyx_k_to_degrees, sizeof(__pyx_k_to_degrees), 0, 1, 1}, /* PyObject cname: __pyx_n_u_to_degrees */
  {__pyx_k_to_radians, sizeof(__pyx_k_to_radians), 0, 1, 1}, /* PyObject cname: __pyx_n_u_to_radians */
  {__pyx_k_to_remove, sizeof(__pyx_k_to_remove), 0, 1, 1}, /* PyObject cname: __pyx_n_u_to_remove */
  {__pyx_k_top, sizeof(__pyx_k_top), 0, 1, 1}, /* PyObject cname: __pyx_n_u_top */
  {__pyx_k_top_2, sizeof(__pyx_k_top_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_top_2 */
  {__pyx_k_tuple_float_float, sizeof(__pyx_k_tuple_float_float), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_tuple_float_float */
  {__pyx_k_tuple_float_float_float, sizeof(__pyx_k_tuple_float_float_float), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_tuple_float_float_float */
  {__pyx_k_tuple_int_int, sizeof(__pyx_k_tuple_int_int), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_tuple_int_int */
  {__pyx_k_tuple_int_int_int, sizeof(__pyx_k_tuple_int_int_int), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_tuple_int_int_int */
  {__pyx_k_txt, sizeof(__pyx_k_txt), 0, 1, 1}, /* PyObject cname: __pyx_n_u_txt */
  {__pyx_k_txt_2, sizeof(__pyx_k_txt_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_txt_2 */
  {__pyx_k_type, sizeof(__pyx_k_type), 0, 1, 1}, /* PyObject cname: __pyx_n_u_type */
  {__pyx_k_update, sizeof(__pyx_k_update), 0, 1, 1}, /* PyObject cname: __pyx_n_u_update */
  {__pyx_k_use_setstate, sizeof(__pyx_k_use_setstate), 0, 1, 1}, /* PyObject cname: __pyx_n_u_use_setstate */
  {__pyx_k_v, sizeof(__pyx_k_v), 0, 1, 1}, /* PyObject cname: __pyx_n_u_v */
  {__pyx_k_value, sizeof(__pyx_k_value), 0, 1, 1}, /* PyObject cname: __pyx_n_u_value */
  {__pyx_k_vector_product, sizeof(__pyx_k_vector_product), 0, 1, 1}, /* PyObject cname: __pyx_n_u_vector_product */
  {__pyx_k_view, sizeof(__pyx_k_view), 0, 1, 1}, /* PyObject cname: __pyx_n_u_view */
  {__pyx_k_view_2, sizeof(__pyx_k_view_2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_view_2 */
  {__pyx_k_visible, sizeof(__pyx_k_visible), 0, 1, 1}, /* PyObject cname: __pyx_n_u_visible */
  {__pyx_k_volume, sizeof(__pyx_k_volume), 0, 1, 1}, /* PyObject cname: __pyx_n_u_volume */
  {__pyx_k_volumeFactor, sizeof(__pyx_k_volumeFactor), 0, 1, 1}, /* PyObject cname: __pyx_n_u_volumeFactor */
  {__pyx_k_vp, sizeof(__pyx_k_vp), 0, 1, 1}, /* PyObject cname: __pyx_n_u_vp */
  {__pyx_k_width, sizeof(__pyx_k_width), 0, 1, 1}, /* PyObject cname: __pyx_n_u_width */
  {__pyx_k_widthHeight, sizeof(__pyx_k_widthHeight), 0, 1, 1}, /* PyObject cname: __pyx_n_u_widthHeight */
  {__pyx_k_wnd, sizeof(__pyx_k_wnd), 0, 1, 1}, /* PyObject cname: __pyx_n_u_wnd */
  {__pyx_k_wnd_pos, sizeof(__pyx_k_wnd_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_wnd_pos */
  {__pyx_k_wnd_rect, sizeof(__pyx_k_wnd_rect), 0, 1, 1}, /* PyObject cname: __pyx_n_u_wnd_rect */
  {__pyx_k_wnd_size, sizeof(__pyx_k_wnd_size), 0, 1, 1}, /* PyObject cname: __pyx_n_u_wnd_size */
  {__pyx_k_world_pos, sizeof(__pyx_k_world_pos), 0, 1, 1}, /* PyObject cname: __pyx_n_u_world_pos */
  {__pyx_k_x, sizeof(__pyx_k_x), 0, 1, 1}, /* PyObject cname: __pyx_n_u_x */
  {__pyx_k_x1, sizeof(__pyx_k_x1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_x1 */
  {__pyx_k_x2, sizeof(__pyx_k_x2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_x2 */
  {__pyx_k_y, sizeof(__pyx_k_y), 0, 1, 1}, /* PyObject cname: __pyx_n_u_y */
  {__pyx_k_y1, sizeof(__pyx_k_y1), 0, 1, 1}, /* PyObject cname: __pyx_n_u_y1 */
  {__pyx_k_y2, sizeof(__pyx_k_y2), 0, 1, 1}, /* PyObject cname: __pyx_n_u_y2 */
  {__pyx_k_z, sizeof(__pyx_k_z), 0, 1, 1}, /* PyObject cname: __pyx_n_u_z */
  {__pyx_k_zoom, sizeof(__pyx_k_zoom), 0, 1, 1}, /* PyObject cname: __pyx_n_u_zoom */
  {0, 0, 0, 0, 0}
};
/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry const *t, PyObject **target, const char* const* encoding_names);

/* #### Code section: cached_builtins ### */

static int __Pyx_InitCachedBuiltins(__pyx_mstatetype *__pyx_mstate) {
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_mstate->__pyx_n_u_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 168, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_mstate->__pyx_n_u_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(0, 55, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_mstate->__pyx_n_u_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(0, 367, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static int __Pyx_InitCachedConstants(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "pysfml261.pyx":2284
 * 		cdef Vector2i mouse_pos = sf_Mouse.getPosition()
 * 		if not wnd_rect.contains(mouse_pos.x, mouse_pos.y):
 * 			return (0, 0)             # <<<<<<<<<<<<<<
 * 		cdef int x = mouse_pos.x - wnd_pos.x
 * 		cdef int y = mouse_pos.y - wnd_pos.y
*/
  __pyx_mstate_global->__pyx_tuple[0] = PyTuple_Pack(2, __pyx_mstate_global->__pyx_int_0, __pyx_mstate_global->__pyx_int_0); if (unlikely(!__pyx_mstate_global->__pyx_tuple[0])) __PYX_ERR(0, 2284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[0]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[0]);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
*/
  __pyx_mstate_global->__pyx_tuple[1] = PyTuple_Pack(3, __pyx_mstate_global->__pyx_int_238750788, __pyx_mstate_global->__pyx_int_228825662, __pyx_mstate_global->__pyx_int_222419149); if (unlikely(!__pyx_mstate_global->__pyx_tuple[1])) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[1]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[1]);

  /* "pysfml261.pyx":152
 * 		return self.scalar_product(v) == 0
 * 
 * 	def angle_between(self,             # <<<<<<<<<<<<<<
 * 		MathVector2f v,
 * 		bint degrees = True) -> float:
*/
  __pyx_mstate_global->__pyx_tuple[2] = PyTuple_Pack(1, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[2])) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[2]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[2]);

  /* "pysfml261.pyx":404
 * 		self.sound.resetBuffer()
 * 
 * 	def set_relative_to(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_mstate_global->__pyx_tuple[3] = PyTuple_Pack(3, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0); if (unlikely(!__pyx_mstate_global->__pyx_tuple[3])) __PYX_ERR(0, 404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[3]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[3]);

  /* "pysfml261.pyx":926
 * 		del self.rect
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0) -> bool:
*/
  __pyx_mstate_global->__pyx_tuple[4] = PyTuple_Pack(2, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0); if (unlikely(!__pyx_mstate_global->__pyx_tuple[4])) __PYX_ERR(0, 926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[4]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[4]);

  /* "pysfml261.pyx":1089
 * 		return (scale.x, scale.y)
 * 
 * 	def set_scale(self,             # <<<<<<<<<<<<<<
 * 		float kx = 1,
 * 		float ky = 1) -> None:
*/
  __pyx_mstate_global->__pyx_tuple[5] = PyTuple_Pack(2, __pyx_mstate_global->__pyx_float_1_0, __pyx_mstate_global->__pyx_float_1_0); if (unlikely(!__pyx_mstate_global->__pyx_tuple[5])) __PYX_ERR(0, 1089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[5]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[5]);

  /* "pysfml261.pyx":1117
 * 		self.text.rotate(degrees)
 * 
 * 	def contains(self,             # <<<<<<<<<<<<<<
 * 		float x = 0,
 * 		float y = 0,
*/
  __pyx_mstate_global->__pyx_tuple[6] = PyTuple_Pack(3, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[6])) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[6]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[6]);

  /* "pysfml261.pyx":1328
 * 		self.sprite.move(dx, dy)
 * 
 * 	def rotate(self, float degrees = 0) -> None:             # <<<<<<<<<<<<<<
 * 		self.sprite.rotate(degrees)
 * 
*/
  __pyx_mstate_global->__pyx_tuple[7] = PyTuple_Pack(1, __pyx_mstate_global->__pyx_float_0_0); if (unlikely(!__pyx_mstate_global->__pyx_tuple[7])) __PYX_ERR(0, 1328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[7]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[7]);

  /* "pysfml261.pyx":1461
 * 		return color.a
 * 
 * 	def in_area(self,             # <<<<<<<<<<<<<<
 * 		float x1 = 0,
 * 		float x2 = 0,
*/
  __pyx_mstate_global->__pyx_tuple[8] = PyTuple_Pack(5, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[8])) __PYX_ERR(0, 1461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[8]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[8]);

  /* "pysfml261.pyx":1490
 * cdef class TransformSfSprite:
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def keep_their_distance(
 * 		sfSprite sprite1,
*/
  __pyx_mstate_global->__pyx_tuple[9] = PyTuple_Pack(6, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, Py_False, Py_False, Py_False, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[9])) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[9]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[9]);

  /* "pysfml261.pyx":1545
 * 		return True
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def similar(
 * 		sfSprite sprite1,
*/
  __pyx_mstate_global->__pyx_tuple[10] = PyTuple_Pack(4, Py_False, Py_False, Py_False, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[10])) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[10]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[10]);

  /* "pysfml261.pyx":1612
 * 			sprite1.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def swap(
 * 		sfSprite sprite1,
*/
  __pyx_mstate_global->__pyx_tuple[11] = PyTuple_Pack(3, Py_False, Py_False, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[11])) __PYX_ERR(0, 1612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[11]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[11]);

  /* "pysfml261.pyx":1656
 * 			)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def scale(
 * 		sfSprite sprite,
*/
  __pyx_mstate_global->__pyx_tuple[12] = PyTuple_Pack(4, __pyx_mstate_global->__pyx_float_1_0, __pyx_mstate_global->__pyx_float_1_0, Py_True, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[12])) __PYX_ERR(0, 1656, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[12]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[12]);

  /* "pysfml261.pyx":1669
 * 			scaleSpriteKeepCenter(sprite.sprite, kx, ky, local)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def resize(
 * 		sfSprite sprite,
*/
  __pyx_mstate_global->__pyx_tuple[13] = PyTuple_Pack(7, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, Py_False, Py_False, Py_False, Py_False, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[13])) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[13]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[13]);

  /* "pysfml261.pyx":1732
 * 		sprite.sprite.move(dx, dy)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def set_rotation_around_center(
 * 		sfSprite sprite,
*/
  __pyx_mstate_global->__pyx_tuple[14] = PyTuple_Pack(2, __pyx_mstate_global->__pyx_float_0_0, Py_True); if (unlikely(!__pyx_mstate_global->__pyx_tuple[14])) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[14]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[14]);

  /* "pysfml261.pyx":2230
 * 		self.render_window.draw(shape.shape[0], Default)
 * 
 * 	def set_icon(self,             # <<<<<<<<<<<<<<
 * 		sfImage icon,
 * 		unsigned int width = 32,
*/
  __pyx_mstate_global->__pyx_tuple[15] = PyTuple_Pack(2, __pyx_mstate_global->__pyx_int_32, __pyx_mstate_global->__pyx_int_32); if (unlikely(!__pyx_mstate_global->__pyx_tuple[15])) __PYX_ERR(0, 2230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[15]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[15]);

  /* "pysfml261.pyx":2325
 * 		self.distance_y = distance_y_
 * 
 * 	def shift(self,             # <<<<<<<<<<<<<<
 * 		list[sfSprite] sprites,
 * 		float pivot_x = 0,
*/
  __pyx_mstate_global->__pyx_tuple[16] = PyTuple_Pack(4, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0, __pyx_mstate_global->__pyx_float_0_0); if (unlikely(!__pyx_mstate_global->__pyx_tuple[16])) __PYX_ERR(0, 2325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[16]);
  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[16]);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static int __Pyx_InitConstants(__pyx_mstatetype *__pyx_mstate) {
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __pyx_mstate->__pyx_umethod_PyDict_Type_pop.type = (PyObject*)&PyDict_Type;
  __pyx_mstate->__pyx_umethod_PyDict_Type_pop.method_name = &__pyx_mstate->__pyx_n_u_pop;
  if (__Pyx_InitStrings(__pyx_string_tab, __pyx_mstate->__pyx_string_tab, __pyx_string_tab_encodings) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_mstate->__pyx_float__2 = PyFloat_FromDouble(.2); if (unlikely(!__pyx_mstate->__pyx_float__2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_mstate->__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_mstate->__pyx_float_1_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_int_0 = PyLong_FromLong(0); if (unlikely(!__pyx_mstate->__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_int_32 = PyLong_FromLong(32); if (unlikely(!__pyx_mstate->__pyx_int_32)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_int_128 = PyLong_FromLong(128); if (unlikely(!__pyx_mstate->__pyx_int_128)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_int_222419149 = PyLong_FromLong(222419149L); if (unlikely(!__pyx_mstate->__pyx_int_222419149)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_int_228825662 = PyLong_FromLong(228825662L); if (unlikely(!__pyx_mstate->__pyx_int_228825662)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_int_238750788 = PyLong_FromLong(238750788L); if (unlikely(!__pyx_mstate->__pyx_int_238750788)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_codeobjects ### */
\
        typedef struct {
            unsigned int argcount : 4;
            unsigned int num_posonly_args : 1;
            unsigned int num_kwonly_args : 1;
            unsigned int nlocals : 5;
            unsigned int flags : 10;
            unsigned int first_line : 12;
            unsigned int line_table_length : 13;
        } __Pyx_PyCode_New_function_description;
/* NewCodeObj.proto */
static PyObject* __Pyx_PyCode_New(
        __Pyx_PyCode_New_function_description descr,
        PyObject **varnames,
        PyObject *filename,
        PyObject *funcname,
        const char *line_table,
        PyObject *tuple_dedup_map
);


static int __Pyx_CreateCodeObjects(__pyx_mstatetype *__pyx_mstate) {
  PyObject* tuple_dedup_map = PyDict_New();
  if (unlikely(!tuple_dedup_map)) return -1;
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 37, 25};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_degrees, __pyx_mstate->__pyx_n_u_pi};
    __pyx_mstate_global->__pyx_codeobj_tab[0] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_to_radians, __pyx_k_2XRq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[0])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 42, 25};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_radians, __pyx_mstate->__pyx_n_u_pi};
    __pyx_mstate_global->__pyx_codeobj_tab[1] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_to_degrees, __pyx_k_4r, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[1])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 70, 47};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_p};
    __pyx_mstate_global->__pyx_codeobj_tab[2] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_distance, __pyx_k_a_a_q_Cr_c_4q_Cr_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[2])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[3] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[3])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[4] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[4])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 103, 33};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[5] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_sum, __pyx_k_Q_s_AT_S_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[5])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 108, 33};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[6] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_sub, __pyx_k_Q_s_AT_S_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[6])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 113, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[7] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_scalar_product, __pyx_k_Q_S_3b_Cr, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[7])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 116, 40};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v, __pyx_mstate->__pyx_n_u_sc, __pyx_mstate->__pyx_n_u_m1, __pyx_mstate->__pyx_n_u_m2};
    __pyx_mstate_global->__pyx_codeobj_tab[8] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_cosin, __pyx_k_A_oQa_m1A_Cs_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[8])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 121, 35};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[9] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_vector_product, __pyx_k_Q_Q_s_AT_c_1A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[9])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 126, 42};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v, __pyx_mstate->__pyx_n_u_vp, __pyx_mstate->__pyx_n_u_m1, __pyx_mstate->__pyx_n_u_m2};
    __pyx_mstate_global->__pyx_codeobj_tab[10] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_sinus, __pyx_k_A__AQ_m1A_7_S, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[10])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 131, 47};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[11] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_distance, __pyx_k_q_a_q_Cr_c_4q_Cr_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[11])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 136, 19};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_num};
    __pyx_mstate_global->__pyx_codeobj_tab[12] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_multiply_num, __pyx_k_a_fA_fA, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[12])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 140, 36};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_mod};
    __pyx_mstate_global->__pyx_codeobj_tab[13] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_basis, __pyx_k_A_4q_Q_s_E_S, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[13])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 146, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[14] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_parallel, __pyx_k_S_3c_S_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[14])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 149, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[15] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_perpendicular, __pyx_k_q__AS_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[15])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 152, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v, __pyx_mstate->__pyx_n_u_degrees, __pyx_mstate->__pyx_n_u_pi, __pyx_mstate->__pyx_n_u_radians};
    __pyx_mstate_global->__pyx_codeobj_tab[16] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_angle_between, __pyx_k_t1D_aq_Q_D, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[16])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 168, 33};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_p1, __pyx_mstate->__pyx_n_u_p2};
    __pyx_mstate_global->__pyx_codeobj_tab[17] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_from_points, __pyx_k_45_Q_S_D_Rr, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[17])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[18] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[18])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[19] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[19])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 206, 65};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_p};
    __pyx_mstate_global->__pyx_codeobj_tab[20] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_distance, __pyx_k_a_a_q_Cr_c_4q_Cr_c_4q_Cr_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[20])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[21] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[21])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[22] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[22])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 250, 43};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[23] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_sum, __pyx_k_Q_s_AT_S_4t3b, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[23])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 255, 43};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[24] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_sub, __pyx_k_Q_s_AT_S_4t3b, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[24])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 260, 42};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[25] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_scalar_product, __pyx_k_Q_S_3b_Cr_Rt3b, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[25])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 263, 40};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v, __pyx_mstate->__pyx_n_u_sc, __pyx_mstate->__pyx_n_u_m1, __pyx_mstate->__pyx_n_u_m2};
    __pyx_mstate_global->__pyx_codeobj_tab[26] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_cosin, __pyx_k_A_oQa_m1A_Cs_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[26])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 268, 95};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_z};
    __pyx_mstate_global->__pyx_codeobj_tab[27] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_vector_product, __pyx_k_Q_S_3b_Cr_4s_AS_c_1A_S_3b_Cr_Qc, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[27])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 274, 42};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v, __pyx_mstate->__pyx_n_u_vp, __pyx_mstate->__pyx_n_u_m1, __pyx_mstate->__pyx_n_u_m2};
    __pyx_mstate_global->__pyx_codeobj_tab[28] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_sinus, __pyx_k_A__AQ_m1A_7_S, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[28])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 279, 65};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[29] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_distance, __pyx_k_q_a_q_Cr_c_4q_Cr_c_4q_Cr_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[29])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 284, 26};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_num};
    __pyx_mstate_global->__pyx_codeobj_tab[30] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_multiply_num, __pyx_k_a_fA_fA_fA, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[30])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 289, 44};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_mod};
    __pyx_mstate_global->__pyx_codeobj_tab[31] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_basis, __pyx_k_A_4q_Q_s_E_S_t3b, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[31])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 295, 51};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v, __pyx_mstate->__pyx_n_u_k};
    __pyx_mstate_global->__pyx_codeobj_tab[32] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_parallel, __pyx_k_S_1_3d_Rq_4r_D_2Qa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[32])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 299, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v};
    __pyx_mstate_global->__pyx_codeobj_tab[33] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_perpendicular, __pyx_k_q__AS_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[33])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 302, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_v, __pyx_mstate->__pyx_n_u_degrees, __pyx_mstate->__pyx_n_u_pi, __pyx_mstate->__pyx_n_u_radians};
    __pyx_mstate_global->__pyx_codeobj_tab[34] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_angle_between, __pyx_k_t1D_aq_Q_D, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[34])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 318, 43};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_p1, __pyx_mstate->__pyx_n_u_p2};
    __pyx_mstate_global->__pyx_codeobj_tab[35] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_from_points, __pyx_k_45_Q_S_D_Rr_Rs_Ba, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[35])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[36] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[36])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[37] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[37])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[38] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[38])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[39] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[39])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 386, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[40] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_play, __pyx_k_1_fE, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[40])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 389, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[41] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_pause, __pyx_k_A_fF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[41])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 392, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[42] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_stop, __pyx_k_1_fE, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[42])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 395, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[43] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_status, __pyx_k_V_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[43])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 398, 22};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_buffer};
    __pyx_mstate_global->__pyx_codeobj_tab[44] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_buffer, __pyx_k_q_fJavWAQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[44])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 401, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[45] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_reset_buffer, __pyx_k_1_fL, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[45])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 10, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 404, 158};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_z, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_minDistance, __pyx_mstate->__pyx_n_u_attenuation, __pyx_mstate->__pyx_n_u_distance, __pyx_mstate->__pyx_n_u_maxD, __pyx_mstate->__pyx_n_u_volumeFactor};
    __pyx_mstate_global->__pyx_codeobj_tab[46] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_relative_to, __pyx_k_d_A_4v_A_4v_A_Q_q_3b_3b_AS_2S_2, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[46])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 423, 31};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[47] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_1_d_A_T_D_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[47])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 427, 28};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_z};
    __pyx_mstate_global->__pyx_codeobj_tab[48] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_position, __pyx_k_fL_Cq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[48])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 433, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[49] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_min_distance, __pyx_k_q_V, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[49])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 436, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_distance};
    __pyx_mstate_global->__pyx_codeobj_tab[50] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_min_distance, __pyx_k_q_fO1A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[50])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 439, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[51] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_attenuation, __pyx_k_a_V, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[51])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 442, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_attenuation};
    __pyx_mstate_global->__pyx_codeobj_tab[52] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_attenuation, __pyx_k_1_fO1A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[52])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 445, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[53] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_loop, __pyx_k_q_V81, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[53])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 448, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_loop};
    __pyx_mstate_global->__pyx_codeobj_tab[54] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_loop, __pyx_k_fHAQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[54])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 451, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[55] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_volume, __pyx_k_V_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[55])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 454, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_volume};
    __pyx_mstate_global->__pyx_codeobj_tab[56] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_volume, __pyx_k_q_fJaq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[56])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 457, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[57] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_pitch, __pyx_k_V9A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[57])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 460, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pitch};
    __pyx_mstate_global->__pyx_codeobj_tab[58] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_pitch, __pyx_k_Q_fIQa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[58])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[59] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[59])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[60] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[60])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 481, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[61] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_play, __pyx_k_1_fE, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[61])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 484, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[62] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_pause, __pyx_k_A_fF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[62])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 487, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[63] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_stop, __pyx_k_1_fE, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[63])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 490, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[64] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_status, __pyx_k_V_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[64])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 10, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 493, 158};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_z, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_minDistance, __pyx_mstate->__pyx_n_u_attenuation, __pyx_mstate->__pyx_n_u_distance, __pyx_mstate->__pyx_n_u_maxD, __pyx_mstate->__pyx_n_u_volumeFactor};
    __pyx_mstate_global->__pyx_codeobj_tab[65] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_relative_to, __pyx_k_d_A_4v_A_4v_A_Q_q_3b_3b_AS_2S_2, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[65])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 512, 31};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[66] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_1_d_A_T_D_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[66])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 516, 28};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_z};
    __pyx_mstate_global->__pyx_codeobj_tab[67] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_position, __pyx_k_fL_Cq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[67])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 522, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[68] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_min_distance, __pyx_k_q_V, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[68])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 525, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_distance};
    __pyx_mstate_global->__pyx_codeobj_tab[69] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_min_distance, __pyx_k_q_fO1A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[69])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 528, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[70] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_attenuation, __pyx_k_a_V, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[70])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 531, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_attenuation};
    __pyx_mstate_global->__pyx_codeobj_tab[71] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_attenuation, __pyx_k_1_fO1A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[71])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 534, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[72] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_loop, __pyx_k_q_V81, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[72])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 537, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_loop};
    __pyx_mstate_global->__pyx_codeobj_tab[73] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_loop, __pyx_k_fHAQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[73])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 540, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[74] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_volume, __pyx_k_V_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[74])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 543, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_volume};
    __pyx_mstate_global->__pyx_codeobj_tab[75] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_volume, __pyx_k_q_fJaq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[75])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 546, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[76] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_pitch, __pyx_k_V9A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[76])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 549, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pitch};
    __pyx_mstate_global->__pyx_codeobj_tab[77] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_pitch, __pyx_k_Q_fIQa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[77])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[78] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[78])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[79] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[79])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 563, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[80] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_asSeconds, __pyx_k_U_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[80])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 566, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[81] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_asMilliseconds, __pyx_k_Q_U, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[81])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 569, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[82] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_asMicroseconds, __pyx_k_Q_U, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[82])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[83] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[83])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[84] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[84])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 583, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[85] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_elapsed_seconds, __pyx_k_V_Ja, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[85])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 586, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[86] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_elapsed_milliseconds, __pyx_k_q_V_O1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[86])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 589, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[87] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_elapsed_microseconds, __pyx_k_q_V_O1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[87])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 592, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[88] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_restart_asseconds, __pyx_k_V82Zq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[88])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 595, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[89] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_restart_asmilliseconds, __pyx_k_Q_V82_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[89])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 598, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[90] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_restart_asmicroseconds, __pyx_k_Q_V82_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[90])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[91] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[91])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[92] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[92])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 614, 27};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_elapsed};
    __pyx_mstate_global->__pyx_codeobj_tab[93] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_collect, __pyx_k_a_t6_m1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[93])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 618, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[94] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_reset, __pyx_k_A_l_fHA, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[94])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[95] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[95])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[96] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[96])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 647, 31};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_seconds};
    __pyx_mstate_global->__pyx_codeobj_tab[97] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_timed, __pyx_k_t6_Q_Yb, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[97])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 651, 12};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[98] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_value, __pyx_k_Q_2, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[98])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 654, 12};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_value};
    __pyx_mstate_global->__pyx_codeobj_tab[99] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_value, __pyx_k_Q_k, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[99])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[100] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[100])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[101] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[101])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 677, 124};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_index, __pyx_mstate->__pyx_n_u_maxIndex};
    __pyx_mstate_global->__pyx_codeobj_tab[102] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_current_index, __pyx_k_5_A_d_A_V2Q_1_1_V3a_q_S_q_q_m4q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[102])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[103] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[103])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[104] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[104])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[105] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[105])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[106] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[106])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {0, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 751, 27};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_current};
    __pyx_mstate_global->__pyx_codeobj_tab[107] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_desktop_mode, __pyx_k_O1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[107])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 756, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[108] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_valid, __pyx_k_q_WHA, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[108])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[109] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[109])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[110] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[110])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[111] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[111])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[112] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[112])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 841, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[113] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_type, __pyx_k_q_V1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[113])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 844, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[114] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_key_code, __pyx_k_1_V4q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[114])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 847, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[115] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_text_unicode, __pyx_k_q_V5, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[115])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 850, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[116] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_mouse_button, __pyx_k_q_V_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[116])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[117] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[117])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[118] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[118])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 856, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_key};
    __pyx_mstate_global->__pyx_codeobj_tab[119] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_key_pressed, __pyx_k_Qe1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[119])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 860, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_scancode};
    __pyx_mstate_global->__pyx_codeobj_tab[120] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_localize, __pyx_k_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[120])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 85};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_state, __pyx_mstate->__pyx_n_u_dict_2, __pyx_mstate->__pyx_n_u_use_setstate};
    __pyx_mstate_global->__pyx_codeobj_tab[121] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_A_G1F_a_vWA_q_q_q_4q_4q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[121])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 16, 11};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[122] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[122])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 926, 25};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y};
    __pyx_mstate_global->__pyx_codeobj_tab[123] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_contains, __pyx_k_U_1Cq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[123])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 931, 24};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_rect};
    __pyx_mstate_global->__pyx_codeobj_tab[124] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_intersects, __pyx_k_1_U_Qd_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[124])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 934, 27};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[125] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_1_d_1_T_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[125])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 6, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 938, 75};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_size, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_k};
    __pyx_mstate_global->__pyx_codeobj_tab[126] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_center, __pyx_k_d_1_t5_wa_c_Bd_Rq_c_Bd_Rq_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[126])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 946, 61};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_size, __pyx_mstate->__pyx_n_u_k};
    __pyx_mstate_global->__pyx_codeobj_tab[127] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_center, __pyx_k_t5_e7_Bd_Rq_e82Rt3b, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[127])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 954, 27};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[128] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_size, __pyx_k_q_t5_d_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[128])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 958, 51};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[129] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_move, __pyx_k_1_d_1_e7_S_e83c_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[129])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[130] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[130])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[131] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[131])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1015, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_smooth};
    __pyx_mstate_global->__pyx_codeobj_tab[132] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_smooth, __pyx_k_a_e_Qa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[132])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1018, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[133] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_smooth, __pyx_k_U_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[133])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[134] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[134])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[135] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[135])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1035, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[136] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_clear, __pyx_k_A_d, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[136])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1038, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[137] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_empty, __pyx_k_q_T, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[137])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1041, 26};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[138] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_as_pystring, __pyx_k_T_b_b_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[138])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1044, 132};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_pystring, __pyx_mstate->__pyx_n_u_items, __pyx_mstate->__pyx_n_u_to_remove};
    __pyx_mstate_global->__pyx_codeobj_tab[139] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_from_pystring, __pyx_k_Yc_1_c_Bha_HA_D_q_1HL_Kt1E_1A_H, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[139])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {0, 0, 0, 0, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1058, 14};
    PyObject* varnames[] = {0};
    __pyx_mstate_global->__pyx_codeobj_tab[140] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_drop_cache, __pyx_k__6, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[140])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1062, 12};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[141] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_cache_size, __pyx_k__7, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[141])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[142] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[142])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[143] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[143])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1081, 37};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_text};
    __pyx_mstate_global->__pyx_codeobj_tab[144] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_pystring, __pyx_k_1_4uJa_F_G1A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[144])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1085, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_scale};
    __pyx_mstate_global->__pyx_codeobj_tab[145] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_scale, __pyx_k_E_t5, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[145])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1089, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_kx, __pyx_mstate->__pyx_n_u_ky};
    __pyx_mstate_global->__pyx_codeobj_tab[146] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_scale, __pyx_k_1_e9AT, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[146])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1094, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[147] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_rotation, __pyx_k_1_U_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[147])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1097, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[148] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_rotation, __pyx_k_e_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[148])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1100, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[149] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_1_d_1_T_A_2, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[149])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1104, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_left, __pyx_mstate->__pyx_n_u_top};
    __pyx_mstate_global->__pyx_codeobj_tab[150] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_position, __pyx_k_A_e_q_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[150])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1109, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[151] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_move, __pyx_k_1_e5_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[151])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1114, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[152] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_rotate, __pyx_k_A_e7_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[152])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1117, 54};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect};
    __pyx_mstate_global->__pyx_codeobj_tab[153] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_contains, __pyx_k_Q_e_e_1_Yas, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[153])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1128, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_bounds};
    __pyx_mstate_global->__pyx_codeobj_tab[154] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_intersects, __pyx_k_Q_D__A_D_Q_4uAQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[154])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1138, 22};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_txt_2};
    __pyx_mstate_global->__pyx_codeobj_tab[155] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_string, __pyx_k_q_e_Qc_Qa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[155])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1141, 22};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_font};
    __pyx_mstate_global->__pyx_codeobj_tab[156] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_font, __pyx_k_A_e81D_Qa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[156])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1144, 17};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[157] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_character_size, __pyx_k_4A_e_AQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[157])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1147, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_style};
    __pyx_mstate_global->__pyx_codeobj_tab[158] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_style, __pyx_k_A_e9AQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[158])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1150, 22};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_color};
    __pyx_mstate_global->__pyx_codeobj_tab[159] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_fill_color, __pyx_k_A_e_fAQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[159])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1153, 39};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_bounds};
    __pyx_mstate_global->__pyx_codeobj_tab[160] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_local_bounds, __pyx_k_q_e_AV7_fHF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[160])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1157, 40};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_bounds};
    __pyx_mstate_global->__pyx_codeobj_tab[161] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_global_bounds, __pyx_k_e_31_AV7_fHF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[161])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[162] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[162])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[163] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[163])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1180, 27};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[164] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_size, __pyx_k_q_t881_d_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[164])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1184, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_smooth};
    __pyx_mstate_global->__pyx_codeobj_tab[165] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_smooth, __pyx_k_a_hj, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[165])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1187, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[166] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_smooth, __pyx_k_XYa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[166])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1190, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_srgb};
    __pyx_mstate_global->__pyx_codeobj_tab[167] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_srgb, __pyx_k_hhaq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[167])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1193, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[168] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_srgb, __pyx_k_a_XWA, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[168])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[169] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[169])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[170] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[170])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1290, 69};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_local_bounds, __pyx_mstate->__pyx_n_u_myRect, __pyx_mstate->__pyx_n_u_theyRect};
    __pyx_mstate_global->__pyx_codeobj_tab[171] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_intersects, __pyx_k_q_Q_D_a_d_D_q_d_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[171])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1302, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_local_bounds, __pyx_mstate->__pyx_n_u_myRect};
    __pyx_mstate_global->__pyx_codeobj_tab[172] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_intersects_rect, __pyx_k_q_Q_D_a_D_q_4uAQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[172])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1312, 54};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_local_bounds, __pyx_mstate->__pyx_n_u_rect};
    __pyx_mstate_global->__pyx_codeobj_tab[173] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_contains, __pyx_k_q_Q_g_A_g_Q_Yas, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[173])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1323, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[174] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_move, __pyx_k_1_gU_4q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[174])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1328, 18};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[175] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_rotate, __pyx_k_gWAQ, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[175])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 14, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1331, 212};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_myRect, __pyx_mstate->__pyx_n_u_theyRect, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy, __pyx_mstate->__pyx_n_u_x1, __pyx_mstate->__pyx_n_u_x2, __pyx_mstate->__pyx_n_u_t_x1, __pyx_mstate->__pyx_n_u_t_x2, __pyx_mstate->__pyx_n_u_center_t_x, __pyx_mstate->__pyx_n_u_dif_x};
    __pyx_mstate_global->__pyx_codeobj_tab[176] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_collide_shift_h, __pyx_k_Q_D_a_fG_D_q_fG_1_T_1_F_HN_1_V2, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[176])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 14, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1357, 212};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_myRect, __pyx_mstate->__pyx_n_u_theyRect, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_y1, __pyx_mstate->__pyx_n_u_y2, __pyx_mstate->__pyx_n_u_t_y1, __pyx_mstate->__pyx_n_u_t_y2, __pyx_mstate->__pyx_n_u_center_t_y, __pyx_mstate->__pyx_n_u_dif_y};
    __pyx_mstate_global->__pyx_codeobj_tab[177] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_collide_shift_v, __pyx_k_Q_D_a_fG_D_q_fG_1_T_1_6_b_a_HM, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[177])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1383, 39};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_rect};
    __pyx_mstate_global->__pyx_codeobj_tab[178] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_local_bounds, __pyx_k_q_G_AT_F_hd, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[178])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1387, 40};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_rect};
    __pyx_mstate_global->__pyx_codeobj_tab[179] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_global_bounds, __pyx_k_G_31_AT_F_hd, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[179])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1391, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[180] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_rotation, __pyx_k_1_WL, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[180])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1394, 18};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[181] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_rotation, __pyx_k_a_g, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[181])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1397, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_scale};
    __pyx_mstate_global->__pyx_codeobj_tab[182] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_scale, __pyx_k_G9A_t5, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[182])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1401, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_kx, __pyx_mstate->__pyx_n_u_ky};
    __pyx_mstate_global->__pyx_codeobj_tab[183] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_scale, __pyx_k_1_gYat1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[183])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1406, 41};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[184] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_color, __pyx_k_G9A_D_4s_c, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[184])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1410, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_color, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[185] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_color, __pyx_k_q_U_q_U_q_U_q_U_q_gYaq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[185])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1418, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[186] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_1_d_Q_T_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[186])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1422, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_left, __pyx_mstate->__pyx_n_u_top};
    __pyx_mstate_global->__pyx_codeobj_tab[187] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_position, __pyx_k_A_g, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[187])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 6, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1427, 83};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_center_x, __pyx_mstate->__pyx_n_u_center_y};
    __pyx_mstate_global->__pyx_codeobj_tab[188] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_center, __pyx_k_Q_g_A_g_Q_F_D_r_E_4xr_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[188])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 8, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1438, 91};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_center_x, __pyx_mstate->__pyx_n_u_center_y, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_left, __pyx_mstate->__pyx_n_u_top};
    __pyx_mstate_global->__pyx_codeobj_tab[189] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_center, __pyx_k_a_Q_g_A_g_Q_IRt7_A_9Bd_A_g, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[189])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1452, 36};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_a, __pyx_mstate->__pyx_n_u_color};
    __pyx_mstate_global->__pyx_codeobj_tab[190] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_alpha, __pyx_k_q_gYa_uA_gYaq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[190])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1457, 25};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_color};
    __pyx_mstate_global->__pyx_codeobj_tab[191] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_alpha, __pyx_k_gYa_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[191])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {6, 0, 0, 10, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1461, 109};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x1, __pyx_mstate->__pyx_n_u_x2, __pyx_mstate->__pyx_n_u_y1, __pyx_mstate->__pyx_n_u_y2, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_width, __pyx_mstate->__pyx_n_u_height, __pyx_mstate->__pyx_n_u_area};
    __pyx_mstate_global->__pyx_codeobj_tab[192] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_in_area, __pyx_k_Q_g_A_g_Q_T_R_T_Rq_ha_gQ_iq_j, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[192])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 7, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1480, 92};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_texture, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_scale, __pyx_mstate->__pyx_n_u_textureSize, __pyx_mstate->__pyx_n_u_width, __pyx_mstate->__pyx_n_u_height};
    __pyx_mstate_global->__pyx_codeobj_tab[193] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_clone, __pyx_k_q_d_Q_G9A_d_Bha_2U_RuA_7_T_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[193])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[194] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[194])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[195] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[195])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {8, 0, 0, 21, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1490, 388};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite1, __pyx_mstate->__pyx_n_u_sprite2, __pyx_mstate->__pyx_n_u_distance_x, __pyx_mstate->__pyx_n_u_distance_y, __pyx_mstate->__pyx_n_u_keep_x, __pyx_mstate->__pyx_n_u_keep_y, __pyx_mstate->__pyx_n_u_sprite1_main, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect1, __pyx_mstate->__pyx_n_u_rect2, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_centerX1, __pyx_mstate->__pyx_n_u_centerY1, __pyx_mstate->__pyx_n_u_centerX2, __pyx_mstate->__pyx_n_u_centerY2, __pyx_mstate->__pyx_n_u_difX, __pyx_mstate->__pyx_n_u_difY, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy, __pyx_mstate->__pyx_n_u_sprite1Left, __pyx_mstate->__pyx_n_u_sprite1Upper};
    __pyx_mstate_global->__pyx_codeobj_tab[196] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_keep_their_distance, __pyx_k_T_D_Q_7_7_7_7_vRuF_A_5_RuE_1_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[196])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {6, 0, 0, 8, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1545, 158};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite1, __pyx_mstate->__pyx_n_u_sprite2, __pyx_mstate->__pyx_n_u_sprite1_main, __pyx_mstate->__pyx_n_u_similar_pos, __pyx_mstate->__pyx_n_u_similar_size, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect1, __pyx_mstate->__pyx_n_u_rect2};
    __pyx_mstate_global->__pyx_codeobj_tab[197] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_similar, __pyx_k_Q_7_7_7_7_Q_a_7_auG5_7_auG5_Q_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[197])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {6, 0, 0, 13, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1572, 252};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite1, __pyx_mstate->__pyx_n_u_sprite2, __pyx_mstate->__pyx_n_u_like_sprite1, __pyx_mstate->__pyx_n_u_shift_dx, __pyx_mstate->__pyx_n_u_shift_dy, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect1, __pyx_mstate->__pyx_n_u_rect2, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_centerX1, __pyx_mstate->__pyx_n_u_centerX2, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[198] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_put_like, __pyx_k_Q_7_7_7_7_Q_Qe7_q_Qe7_q_Q_e6_5, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[198])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {5, 0, 0, 7, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1612, 145};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite1, __pyx_mstate->__pyx_n_u_sprite2, __pyx_mstate->__pyx_n_u_swap_pos, __pyx_mstate->__pyx_n_u_swap_size, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect1, __pyx_mstate->__pyx_n_u_rect2};
    __pyx_mstate_global->__pyx_codeobj_tab[199] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_swap, __pyx_k_Q_7_7_7_7_Q_Qe7_q_Qe7_q_Q_q_y_X, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[199])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 10, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1634, 170};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite1, __pyx_mstate->__pyx_n_u_sprite2, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect1, __pyx_mstate->__pyx_n_u_rect2, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_centerX1, __pyx_mstate->__pyx_n_u_centerY1, __pyx_mstate->__pyx_n_u_centerX2, __pyx_mstate->__pyx_n_u_centerY2};
    __pyx_mstate_global->__pyx_codeobj_tab[200] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_distance, __pyx_k_Q_7_7_7_7_V2U_1_U_E_1_V2U_1_U_E, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[200])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {5, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1656, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_kx, __pyx_mstate->__pyx_n_u_ky, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_keep_left_top};
    __pyx_mstate_global->__pyx_codeobj_tab[201] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_scale, __pyx_k_Q_Q_y_D, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[201])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {8, 0, 0, 15, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1669, 226};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_width, __pyx_mstate->__pyx_n_u_height, __pyx_mstate->__pyx_n_u_keep_w, __pyx_mstate->__pyx_n_u_keep_h, __pyx_mstate->__pyx_n_u_shift_dx, __pyx_mstate->__pyx_n_u_shift_dy, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_before, __pyx_mstate->__pyx_n_u_after, __pyx_mstate->__pyx_n_u_centerX1, __pyx_mstate->__pyx_n_u_centerX2, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy, __pyx_mstate->__pyx_n_u_k};
    __pyx_mstate_global->__pyx_codeobj_tab[202] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_resize, __pyx_k_Q_F_F_Q_y_q_iwa_hgWA_Yc_a_F_F_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[202])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 10, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1705, 171};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_flipX, __pyx_mstate->__pyx_n_u_flipY, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_scale, __pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_kx, __pyx_mstate->__pyx_n_u_ky, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[203] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_flip, __pyx_k_gYa_Q_a_q_y_Q_Q_Q_y_Q_S_A_S_A_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[203])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 12, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1732, 186};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_degrees, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_before, __pyx_mstate->__pyx_n_u_center_x1, __pyx_mstate->__pyx_n_u_center_y1, __pyx_mstate->__pyx_n_u_after, __pyx_mstate->__pyx_n_u_center_x2, __pyx_mstate->__pyx_n_u_center_y2, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[204] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_rotation_around_center, __pyx_k_Q_F_F_vRvWBa_uBfHBa_1A_Q_6_q_6, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[204])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 12, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1758, 186};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_degrees, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_before, __pyx_mstate->__pyx_n_u_center_x1, __pyx_mstate->__pyx_n_u_center_y1, __pyx_mstate->__pyx_n_u_after, __pyx_mstate->__pyx_n_u_center_x2, __pyx_mstate->__pyx_n_u_center_y2, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[205] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_rotate_around_center, __pyx_k_Q_F_F_vRvWBa_uBfHBa_waq_Q_6_q_6, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[205])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 7, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1784, 66};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_degrees, __pyx_mstate->__pyx_n_u_speed_2, __pyx_mstate->__pyx_n_u_pi, __pyx_mstate->__pyx_n_u_radians, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[206] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_move_with_angle, __pyx_k_xr_Ba_Qa_Qa_uAT, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[206])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 86};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_state, __pyx_mstate->__pyx_n_u_dict_2, __pyx_mstate->__pyx_n_u_use_setstate};
    __pyx_mstate_global->__pyx_codeobj_tab[207] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_A_G1F_a_vWA_q_q_q_2_awk_PQ_2_aw, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[207])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 16, 11};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[208] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_q_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[208])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1822, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[209] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_move, __pyx_k_1_fE_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[209])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1827, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[210] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_rotate, __pyx_k_A_fG1A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[210])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1830, 54};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect};
    __pyx_mstate_global->__pyx_codeobj_tab[211] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_contains, __pyx_k_Q_fO1_f_A_Yas, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[211])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1841, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_r};
    __pyx_mstate_global->__pyx_codeobj_tab[212] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_intersects, __pyx_k_Q_t6_t6_Qd_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[212])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1851, 36};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_a, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[213] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_alpha, __pyx_k_q_F_q_U_fM, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[213])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1856, 25};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[214] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_alpha, __pyx_k_F_q_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[214])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1860, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_left, __pyx_mstate->__pyx_n_u_top};
    __pyx_mstate_global->__pyx_codeobj_tab[215] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_position, __pyx_k_A_fL_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[215])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1865, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[216] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_1_d_A_T_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[216])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1869, 33};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_color, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[217] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_fill_color, __pyx_k_A_5_aq_fM_Qa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[217])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1873, 41};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[218] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_fill_color, __pyx_k_Q_F_q_D_4s_c, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[218])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1877, 41};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_width, __pyx_mstate->__pyx_n_u_height, __pyx_mstate->__pyx_n_u_widthHeight, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[219] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_size, __pyx_k_U_U_aq_fHAT, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[219])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1886, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[220] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_size, __pyx_k_q_t6_d_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[220])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1890, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[221] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_rotation, __pyx_k_fL, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[221])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1893, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[222] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_rotation, __pyx_k_1_V_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[222])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1896, 40};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_bounds};
    __pyx_mstate_global->__pyx_codeobj_tab[223] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_global_bounds, __pyx_k_f_4A_AV7_fHF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[223])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1900, 39};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_bounds};
    __pyx_mstate_global->__pyx_codeobj_tab[224] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_local_bounds, __pyx_k_q_fO1_AV7_fHF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[224])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1904, 68};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_clr, __pyx_mstate->__pyx_n_u_size, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[225] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_clone, __pyx_k_A_T_t6_d_A_t4t4s_c, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[225])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[226] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[226])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[227] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[227])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1931, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[228] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_move, __pyx_k_1_fE_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[228])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1936, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[229] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_rotate, __pyx_k_A_fG1A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[229])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1939, 54};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_rect};
    __pyx_mstate_global->__pyx_codeobj_tab[230] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_contains, __pyx_k_Q_fO1_f_A_Yas, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[230])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1950, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_local, __pyx_mstate->__pyx_n_u_r};
    __pyx_mstate_global->__pyx_codeobj_tab[231] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_intersects, __pyx_k_Q_t6_t6_Qd_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[231])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1960, 36};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_a, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[232] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_alpha, __pyx_k_q_F_q_U_fM, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[232])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1965, 25};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[233] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_alpha, __pyx_k_F_q_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[233])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1969, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[234] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_rotation, __pyx_k_fL, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[234])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1972, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[235] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_rotation, __pyx_k_1_V_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[235])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1975, 33};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_color, __pyx_mstate->__pyx_n_u_clr};
    __pyx_mstate_global->__pyx_codeobj_tab[236] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_fill_color, __pyx_k_A_5_aq_fM_Qa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[236])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1979, 41};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_color};
    __pyx_mstate_global->__pyx_codeobj_tab[237] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_fill_color, __pyx_k_Q_fM_d_t5_E, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[237])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1983, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_left, __pyx_mstate->__pyx_n_u_top};
    __pyx_mstate_global->__pyx_codeobj_tab[238] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_position, __pyx_k_A_fL_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[238])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1988, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[239] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_1_d_A_T_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[239])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1992, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_radius};
    __pyx_mstate_global->__pyx_codeobj_tab[240] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_radius, __pyx_k_q_fJaq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[240])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1995, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[241] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_radius, __pyx_k_V_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[241])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1998, 39};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_bounds};
    __pyx_mstate_global->__pyx_codeobj_tab[242] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_local_bounds, __pyx_k_q_fO1_AV7_fHF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[242])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2002, 40};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_bounds};
    __pyx_mstate_global->__pyx_codeobj_tab[243] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_global_bounds, __pyx_k_f_4A_AV7_fHF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[243])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2006, 58};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_clr, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_radius};
    __pyx_mstate_global->__pyx_codeobj_tab[244] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_clone, __pyx_k_A_T_d_A_d_auHCt3a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[244])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[245] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[245])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[246] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[246])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2029, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy};
    __pyx_mstate_global->__pyx_codeobj_tab[247] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_move, __pyx_k_1_e5_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[247])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2034, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[248] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_rotate, __pyx_k_A_e7_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[248])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2037, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_factor};
    __pyx_mstate_global->__pyx_codeobj_tab[249] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_zoom, __pyx_k_e5, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[249])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2040, 47};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees, __pyx_mstate->__pyx_n_u_center};
    __pyx_mstate_global->__pyx_codeobj_tab[250] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_rotate_around_center, __pyx_k_2_U_A_e7_1_e_QfD_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[250])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2045, 47};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees, __pyx_mstate->__pyx_n_u_center};
    __pyx_mstate_global->__pyx_codeobj_tab[251] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_rotation_around_center, __pyx_k_8_U_A_e_q_e_QfD_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[251])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2050, 42};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_rect};
    __pyx_mstate_global->__pyx_codeobj_tab[252] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_rect, __pyx_k_q_U_a_AT_F_hd, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[252])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 6, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2054, 78};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_center, __pyx_mstate->__pyx_n_u_size, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_left, __pyx_mstate->__pyx_n_u_top};
    __pyx_mstate_global->__pyx_codeobj_tab[253] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_left_top, __pyx_k_1_U_A_t5_F_Rt3b_s_D_2Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[253])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 7, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2061, 71};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_left, __pyx_mstate->__pyx_n_u_top, __pyx_mstate->__pyx_n_u_size, __pyx_mstate->__pyx_n_u_k, __pyx_mstate->__pyx_n_u_centerX, __pyx_mstate->__pyx_n_u_centerY};
    __pyx_mstate_global->__pyx_codeobj_tab[254] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_left_top, __pyx_k_A_t5_uBd_R_D_c_1_e_Qiq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[254])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2069, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_center};
    __pyx_mstate_global->__pyx_codeobj_tab[255] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_center, __pyx_k_U_A_F, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[255])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2073, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_center_x, __pyx_mstate->__pyx_n_u_center_y};
    __pyx_mstate_global->__pyx_codeobj_tab[256] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_center, __pyx_k_e_Qj, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[256])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2078, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[257] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_size, __pyx_k_q_t5_d_a_2, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[257])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2082, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_width, __pyx_mstate->__pyx_n_u_height};
    __pyx_mstate_global->__pyx_codeobj_tab[258] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_size, __pyx_k_q_e81G1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[258])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2087, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[259] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_rotation, __pyx_k_1_U_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[259])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2090, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_degrees};
    __pyx_mstate_global->__pyx_codeobj_tab[260] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_rotation, __pyx_k_e_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[260])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[261] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[261])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[262] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[262])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2115, 33};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_name, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_name_3};
    __pyx_mstate_global->__pyx_codeobj_tab[263] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_uniform, __pyx_k_U_6_g_q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[263])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {0, 0, 0, 0, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2121, 12};
    PyObject* varnames[] = {0};
    __pyx_mstate_global->__pyx_codeobj_tab[264] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_available, __pyx_k_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[264])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[265] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[265])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[266] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[266])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[267] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[267])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[268] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[268])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 6, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2156, 60};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_pos_2, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_pixel};
    __pyx_mstate_global->__pyx_codeobj_tab[269] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_map_coords_to_pixel, __pyx_k_e1_e1_Qa_N_1Cq_t5, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[269])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 6, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2166, 64};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_pos_2, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_coord};
    __pyx_mstate_global->__pyx_codeobj_tab[270] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_map_pixel_to_coords, __pyx_k_e5_e5_Qa_N_1Cq_t5, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[270])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2176, 50};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[271] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_desktop_rect, __pyx_k_q_d_A_t_AS_Ct4t4q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[271])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2181, 33};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_view, __pyx_mstate->__pyx_n_u_view_2};
    __pyx_mstate_global->__pyx_codeobj_tab[272] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_view, __pyx_k_Q_5_Qa_nHAT, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[272])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2185, 65};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_view_2, __pyx_mstate->__pyx_n_u_center, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[273] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_view, __pyx_k_q_t_Zq_t81_q_d_D_D, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[273])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2191, 27};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[274] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_1_d_A_T_A_2, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[274])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2195, 46};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_const_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[275] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_position, __pyx_k_U_U_1A_nL_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[275])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2204, 57};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_const_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[276] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_move, __pyx_k_d_A_V1_V1_1A_nL_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[276])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2213, 24};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_sprite};
    __pyx_mstate_global->__pyx_codeobj_tab[277] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_draw_sprite, __pyx_k_1_nE_q_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[277])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 3, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2216, 30};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_sprite, __pyx_mstate->__pyx_n_u_states};
    __pyx_mstate_global->__pyx_codeobj_tab[278] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_draw_sprite_use_state, __pyx_k_nE_q_F, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[278])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2221, 24};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_text};
    __pyx_mstate_global->__pyx_codeobj_tab[279] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_draw_text, __pyx_k_Q_nE_e1D, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[279])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2224, 24};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_shape};
    __pyx_mstate_global->__pyx_codeobj_tab[280] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_draw_rect_shape, __pyx_k_6a_nE_vQd, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[280])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2227, 24};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_shape};
    __pyx_mstate_global->__pyx_codeobj_tab[281] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_draw_circle_shape, __pyx_k_5Q_nE_vQd, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[281])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {4, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2230, 31};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_icon, __pyx_mstate->__pyx_n_u_width, __pyx_mstate->__pyx_n_u_height};
    __pyx_mstate_global->__pyx_codeobj_tab[282] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_icon, __pyx_k_q_nHAWHD_m1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[282])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2236, 22};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_color};
    __pyx_mstate_global->__pyx_codeobj_tab[283] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_clear, __pyx_k_1_nF_5_aq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[283])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2239, 24};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_event};
    __pyx_mstate_global->__pyx_codeobj_tab[284] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_poll_event, __pyx_k_Qe6, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[284])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2242, 18};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_visible};
    __pyx_mstate_global->__pyx_codeobj_tab[285] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_visible, __pyx_k_iq_nKq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[285])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2245, 16};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[286] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_open, __pyx_k_a_7, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[286])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2248, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[287] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_close, __pyx_k_A_nF, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[287])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2251, 14};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[288] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_display, __pyx_k_a_nHA, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[288])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2254, 17};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_visible};
    __pyx_mstate_global->__pyx_codeobj_tab[289] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_mouse_cursor_visible, __pyx_k_5Q_n_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[289])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2257, 17};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_limit};
    __pyx_mstate_global->__pyx_codeobj_tab[290] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_framerate_limit, __pyx_k_6a_n_aq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[290])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2260, 20};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_active};
    __pyx_mstate_global->__pyx_codeobj_tab[291] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_set_active, __pyx_k_IQ_Qa, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[291])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2263, 27};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_size};
    __pyx_mstate_global->__pyx_codeobj_tab[292] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_size, __pyx_k_q_t_d_a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[292])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[293] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[293])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[294] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[294])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2270, 52};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_wnd, __pyx_mstate->__pyx_n_u_mouse_pos, __pyx_mstate->__pyx_n_u_mouse_pos_2, __pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[295] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_world_pos, __pyx_k_1A_c_8_1_s_e3a, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[295])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 7, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2277, 117};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_wnd, __pyx_mstate->__pyx_n_u_wnd_pos, __pyx_mstate->__pyx_n_u_wnd_size, __pyx_mstate->__pyx_n_u_wnd_rect, __pyx_mstate->__pyx_n_u_mouse_pos_2, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y};
    __pyx_mstate_global->__pyx_codeobj_tab[296] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_relative_pos, __pyx_k_q_3nHA_IQgT_HD_PQ_L_T_9D_3a_y_2, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[296])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2289, 73};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_rect, __pyx_mstate->__pyx_n_u_pos, __pyx_mstate->__pyx_n_u_x, __pyx_mstate->__pyx_n_u_y};
    __pyx_mstate_global->__pyx_codeobj_tab[297] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_relative_to_rect, __pyx_k_l_T_U_1Ct3a_3a_s_Rt1_s_Rt1_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[297])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {0, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2298, 23};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_pos};
    __pyx_mstate_global->__pyx_codeobj_tab[298] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_get_position, __pyx_k_l_T_A, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[298])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2303, 17};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_button};
    __pyx_mstate_global->__pyx_codeobj_tab[299] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_is_button_pressed, __pyx_k__8, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[299])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 4, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 85};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_state, __pyx_mstate->__pyx_n_u_dict_2, __pyx_mstate->__pyx_n_u_use_setstate};
    __pyx_mstate_global->__pyx_codeobj_tab[300] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_A_G1F_a_vWA_q_q_q_AWKwa_AWKq, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[300])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 16, 11};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[301] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_QfA, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[301])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {6, 0, 0, 11, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 2325, 95};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_sprites, __pyx_mstate->__pyx_n_u_pivot_x, __pyx_mstate->__pyx_n_u_pivot_y, __pyx_mstate->__pyx_n_u_dx, __pyx_mstate->__pyx_n_u_dy, __pyx_mstate->__pyx_n_u_lengthX, __pyx_mstate->__pyx_n_u_lengthY, __pyx_mstate->__pyx_n_u_offsetX, __pyx_mstate->__pyx_n_u_offsetY, __pyx_mstate->__pyx_n_u_sprite};
    __pyx_mstate_global->__pyx_codeobj_tab[302] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_pysfml261_pyx, __pyx_mstate->__pyx_n_u_shift, __pyx_k_t1D_b_t1D_Rq_t_r_1_t_r_1_6_Qiy, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[302])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {1, 0, 0, 1, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self};
    __pyx_mstate_global->__pyx_codeobj_tab[303] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_reduce_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[303])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {2, 0, 0, 2, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 3, 9};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_self, __pyx_mstate->__pyx_n_u_pyx_state};
    __pyx_mstate_global->__pyx_codeobj_tab[304] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_setstate_cython, __pyx_k_Q, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[304])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 75};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_pyx_type, __pyx_mstate->__pyx_n_u_pyx_checksum, __pyx_mstate->__pyx_n_u_pyx_state, __pyx_mstate->__pyx_n_u_pyx_PickleError, __pyx_mstate->__pyx_n_u_pyx_result};
    __pyx_mstate_global->__pyx_codeobj_tab[305] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_pyx_unpickle_sfKeyboard, __pyx_k_hk_A_1_kkmmn_XQa_7_A_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[305])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 78};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_pyx_type, __pyx_mstate->__pyx_n_u_pyx_checksum, __pyx_mstate->__pyx_n_u_pyx_state, __pyx_mstate->__pyx_n_u_pyx_PickleError, __pyx_mstate->__pyx_n_u_pyx_result};
    __pyx_mstate_global->__pyx_codeobj_tab[306] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_pyx_unpickle_TransformSfSprite, __pyx_k_hk_A_1_kkmmn_HAQ_7_314H_VW_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[306])) goto bad;
  }
  {
    __Pyx_PyCode_New_function_description descr = {3, 0, 0, 5, (unsigned int)(CO_OPTIMIZED|CO_NEWLOCALS), 1, 75};
    PyObject* varnames[] = {__pyx_mstate->__pyx_n_u_pyx_type, __pyx_mstate->__pyx_n_u_pyx_checksum, __pyx_mstate->__pyx_n_u_pyx_state, __pyx_mstate->__pyx_n_u_pyx_PickleError, __pyx_mstate->__pyx_n_u_pyx_result};
    __pyx_mstate_global->__pyx_codeobj_tab[307] = __Pyx_PyCode_New(descr, varnames, __pyx_mstate->__pyx_kp_u_stringsource, __pyx_mstate->__pyx_n_u_pyx_unpickle_sfMouse, __pyx_k_hk_A_1_kkmmn_7_1_7_N_1, tuple_dedup_map); if (unlikely(!__pyx_mstate_global->__pyx_codeobj_tab[307])) goto bad;
  }
  Py_DECREF(tuple_dedup_map);
  return 0;
  bad:
  Py_DECREF(tuple_dedup_map);
  return -1;
}
/* #### Code section: init_globals ### */

static int __Pyx_InitGlobals(void) {
  /* PythonCompatibility.init */
  if (likely(__Pyx_init_co_variables() == 0)); else

if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L1_error)

  /* CachedMethodType.init */
  #if CYTHON_COMPILING_IN_LIMITED_API
{
    PyObject *typesModule=NULL;
    typesModule = PyImport_ImportModule("types");
    if (typesModule) {
        __pyx_mstate_global->__Pyx_CachedMethodType = PyObject_GetAttrString(typesModule, "MethodType");
        Py_DECREF(typesModule);
    }
} // error handling follows
#endif

if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L1_error)

  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
#if __PYX_LIMITED_VERSION_HEX < 0x030d0000
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);
    return result;
#else
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_mstate_global->__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
            "name '%U' is not defined", name);
    }
    return result;
}

/* TupleAndListFromArray */
#if !CYTHON_COMPILING_IN_CPYTHON && CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    Py_ssize_t i;
    if (n <= 0) {
        return __Pyx_NewRef(__pyx_mstate_global->__pyx_empty_tuple);
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    for (i = 0; i < n; i++) {
        if (unlikely(__Pyx_PyTuple_SET_ITEM(res, i, src[i]) < 0)) {
            Py_DECREF(res);
            return NULL;
        }
        Py_INCREF(src[i]);
    }
    return res;
}
#elif CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return __Pyx_NewRef(__pyx_mstate_global->__pyx_empty_tuple);
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_GRAAL ||\
        !(CYTHON_ASSUME_SAFE_SIZE && CYTHON_ASSUME_SAFE_MACROS)
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_GRAAL
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length, length2;
        int kind;
        void *data1, *data2;
        #if !CYTHON_COMPILING_IN_LIMITED_API
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        #endif
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        #if !CYTHON_ASSUME_SAFE_SIZE
        if (unlikely(length < 0)) return -1;
        #endif
        length2 = __Pyx_PyUnicode_GET_LENGTH(s2);
        #if !CYTHON_ASSUME_SAFE_SIZE
        if (unlikely(length2 < 0)) return -1;
        #endif
        if (length != length2) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    return (equals == Py_EQ);
return_ne:
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = __Pyx_PyTuple_GET_SIZE(kwnames);
    #if !CYTHON_ASSUME_SAFE_SIZE
    if (unlikely(n == -1)) return NULL;
    #endif
    for (i = 0; i < n; i++)
    {
        PyObject *namei = __Pyx_PyTuple_GET_ITEM(kwnames, i);
        #if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely(!namei)) return NULL;
        #endif
        if (s == namei) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        PyObject *namei = __Pyx_PyTuple_GET_ITEM(kwnames, i);
        #if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely(!namei)) return NULL;
        #endif
        int eq = __Pyx_PyUnicode_Equals(s, namei, Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;
            return kwvalues[i];
        }
    }
    return NULL;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000 || CYTHON_COMPILING_IN_LIMITED_API
CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues) {
    Py_ssize_t i, nkwargs;
    PyObject *dict;
#if !CYTHON_ASSUME_SAFE_SIZE
    nkwargs = PyTuple_Size(kwnames);
    if (unlikely(nkwargs < 0)) return NULL;
#else
    nkwargs = PyTuple_GET_SIZE(kwnames);
#endif
    dict = PyDict_New();
    if (unlikely(!dict))
        return NULL;
    for (i=0; i<nkwargs; i++) {
#if !CYTHON_ASSUME_SAFE_MACROS
        PyObject *key = PyTuple_GetItem(kwnames, i);
        if (!key) goto bad;
#else
        PyObject *key = PyTuple_GET_ITEM(kwnames, i);
#endif
        if (unlikely(PyDict_SetItem(dict, key, kwvalues[i]) < 0))
            goto bad;
    }
    return dict;
bad:
    Py_DECREF(dict);
    return NULL;
}
#endif
#endif

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject *const *args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject *const *args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
    PyObject *kwdefs;
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {
        return NULL;
    }
    if (
            co->co_kwonlyargcount == 0 &&
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);
    self = __Pyx_CyOrPyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject * const*args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result = 0;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) != (0)) goto bad;
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
  bad:
    Py_DECREF(argstuple);
    return result;
}
#endif
#if CYTHON_VECTORCALL && !CYTHON_COMPILING_IN_LIMITED_API
  #if PY_VERSION_HEX < 0x03090000
    #define __Pyx_PyVectorcall_Function(callable) _PyVectorcall_Function(callable)
  #elif CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE vectorcallfunc __Pyx_PyVectorcall_Function(PyObject *callable) {
    PyTypeObject *tp = Py_TYPE(callable);
    #if defined(__Pyx_CyFunction_USED)
    if (__Pyx_CyFunction_CheckExact(callable)) {
        return __Pyx_CyFunction_func_vectorcall(callable);
    }
    #endif
    if (!PyType_HasFeature(tp, Py_TPFLAGS_HAVE_VECTORCALL)) {
        return NULL;
    }
    assert(PyCallable_Check(callable));
    Py_ssize_t offset = tp->tp_vectorcall_offset;
    assert(offset > 0);
    vectorcallfunc ptr;
    memcpy(&ptr, (char *) callable + offset, sizeof(ptr));
    return ptr;
}
  #else
    #define __Pyx_PyVectorcall_Function(callable) PyVectorcall_Function(callable)
  #endif
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject *const *args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))
            return __Pyx_PyObject_CallMethO(func, NULL);
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))
            return __Pyx_PyObject_CallMethO(func, args[0]);
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    if (kwargs == NULL) {
        #if CYTHON_VECTORCALL && !CYTHON_COMPILING_IN_LIMITED_API
        vectorcallfunc f = __Pyx_PyVectorcall_Function(func);
        if (f) {
            return f(func, args, _nargs, NULL);
        }
        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
        if (__Pyx_CyFunction_CheckExact(func)) {
            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
            if (f) return f(func, args, _nargs, NULL);
        }
        #elif CYTHON_COMPILING_IN_LIMITED_API && CYTHON_VECTORCALL
        return PyObject_Vectorcall(func, args, _nargs, NULL);
        #endif
    }
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_mstate_global->__pyx_empty_tuple, kwargs);
    }
    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);
    #else
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
    #endif
}

/* UnpackUnboundCMethod */
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030C0000
static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {
    PyObject *result;
    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
    if (unlikely(!selfless_args)) return NULL;
    result = PyObject_Call(method, selfless_args, kwargs);
    Py_DECREF(selfless_args);
    return result;
}
#else
static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *const *args, Py_ssize_t nargs, PyObject *kwnames) {
    return
#if PY_VERSION_HEX < 0x03090000
    _PyObject_Vectorcall
#else
    PyObject_Vectorcall
#endif
        (method, args ? args+1 : NULL, nargs ? (size_t) nargs-1 : 0, kwnames);
}
#endif
static PyMethodDef __Pyx_UnboundCMethod_Def = {
     "CythonUnboundCMethod",
     __PYX_REINTERPRET_FUNCION(PyCFunction, __Pyx_SelflessCall),
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030C0000
     METH_VARARGS | METH_KEYWORDS,
#else
     METH_FASTCALL | METH_KEYWORDS,
#endif
     NULL
};
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method, *result=NULL;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    result = method;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    } else
#endif
#if CYTHON_COMPILING_IN_PYPY
#else
    if (PyCFunction_Check(method))
#endif
    {
        PyObject *self;
        int self_found;
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        self = PyObject_GetAttrString(method, "__self__");
        if (!self) {
            PyErr_Clear();
        }
#else
        self = PyCFunction_GET_SELF(method);
#endif
        self_found = (self && self != Py_None);
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        Py_XDECREF(self);
#endif
        if (self_found) {
            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);
            if (unlikely(!unbound_method)) return -1;
            Py_DECREF(method);
            result = unbound_method;
        }
    }
#if !CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    if (unlikely(target->method)) {
        Py_DECREF(result);
    } else
#endif
    target->method = result;
    return 0;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    int was_initialized = __Pyx_CachedCFunction_GetAndSetInitializing(cfunc);
    if (likely(was_initialized == 2 && cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            return __Pyx_CallCFunctionFast(cfunc, self, args, 2);
        }
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return __Pyx_CallCFunctionFastWithKeywords(cfunc, self, args, 2, NULL);
    }
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    else if (unlikely(was_initialized == 1)) {
        __Pyx_CachedCFunction tmp_cfunc = {
#ifndef __cplusplus
            0
#endif
        };
        tmp_cfunc.type = cfunc->type;
        tmp_cfunc.method_name = cfunc->method_name;
        return __Pyx__CallUnboundCMethod2(&tmp_cfunc, self, arg1, arg2);
    }
#endif
    PyObject *result = __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
    __Pyx_CachedCFunction_SetFinishedInitializing(cfunc);
    return result;
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        PyObject *result = NULL;
        PyObject *args = PyTuple_New(2);
        if (unlikely(!args)) return NULL;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = __Pyx_CallCFunctionWithKeywords(cfunc, self, args, NULL);
        else
            result = __Pyx_CallCFunction(cfunc, self, args);
        Py_DECREF(args);
        return result;
    }
#endif
    {
        PyObject *args[4] = {NULL, self, arg1, arg2};
        return __Pyx_PyObject_FastCall(cfunc->method, args+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
    }
}

/* ParseKeywords */
static int __Pyx_ValidateDuplicatePosArgs(
    PyObject *kwds,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    const char* function_name)
{
    PyObject ** const *name = argnames;
    while (name != first_kw_arg) {
        PyObject *key = **name;
        int found = PyDict_Contains(kwds, key);
        if (unlikely(found)) {
            if (found == 1) __Pyx_RaiseDoubleKeywordsError(function_name, key);
            goto bad;
        }
        name++;
    }
    return 0;
bad:
    return -1;
}
#if CYTHON_USE_UNICODE_INTERNALS
static CYTHON_INLINE int __Pyx_UnicodeKeywordsEqual(PyObject *s1, PyObject *s2) {
    int kind;
    Py_ssize_t len = PyUnicode_GET_LENGTH(s1);
    if (len != PyUnicode_GET_LENGTH(s2)) return 0;
    kind = PyUnicode_KIND(s1);
    if (kind != PyUnicode_KIND(s2)) return 0;
    const void *data1 = PyUnicode_DATA(s1);
    const void *data2 = PyUnicode_DATA(s2);
    return (memcmp(data1, data2, (size_t) len * (size_t) kind) == 0);
}
#endif
static int __Pyx_MatchKeywordArg_str(
    PyObject *key,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    size_t *index_found,
    const char *function_name)
{
    PyObject ** const *name;
    #if CYTHON_USE_UNICODE_INTERNALS
    Py_hash_t key_hash = ((PyASCIIObject*)key)->hash;
    if (unlikely(key_hash == -1)) {
        key_hash = PyObject_Hash(key);
        if (unlikely(key_hash == -1))
            goto bad;
    }
    #endif
    name = first_kw_arg;
    while (*name) {
        PyObject *name_str = **name;
        #if CYTHON_USE_UNICODE_INTERNALS
        if (key_hash == ((PyASCIIObject*)name_str)->hash && __Pyx_UnicodeKeywordsEqual(name_str, key)) {
            *index_found = (size_t) (name - argnames);
            return 1;
        }
        #else
        #if CYTHON_ASSUME_SAFE_SIZE
        if (PyUnicode_GET_LENGTH(name_str) == PyUnicode_GET_LENGTH(key))
        #endif
        {
            int cmp = PyUnicode_Compare(name_str, key);
            if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
            if (cmp == 0) {
                *index_found = (size_t) (name - argnames);
                return 1;
            }
        }
        #endif
        name++;
    }
    name = argnames;
    while (name != first_kw_arg) {
        PyObject *name_str = **name;
        #if CYTHON_USE_UNICODE_INTERNALS
        if (unlikely(key_hash == ((PyASCIIObject*)name_str)->hash)) {
            if (__Pyx_UnicodeKeywordsEqual(name_str, key))
                goto arg_passed_twice;
        }
        #else
        #if CYTHON_ASSUME_SAFE_SIZE
        if (PyUnicode_GET_LENGTH(name_str) == PyUnicode_GET_LENGTH(key))
        #endif
        {
            if (unlikely(name_str == key)) goto arg_passed_twice;
            int cmp = PyUnicode_Compare(name_str, key);
            if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
            if (cmp == 0) goto arg_passed_twice;
        }
        #endif
        name++;
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
bad:
    return -1;
}
static int __Pyx_MatchKeywordArg_nostr(
    PyObject *key,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    size_t *index_found,
    const char *function_name)
{
    PyObject ** const *name;
    if (unlikely(!PyUnicode_Check(key))) goto invalid_keyword_type;
    name = first_kw_arg;
    while (*name) {
        int cmp = PyObject_RichCompareBool(**name, key, Py_EQ);
        if (cmp == 1) {
            *index_found = (size_t) (name - argnames);
            return 1;
        }
        if (unlikely(cmp == -1)) goto bad;
        name++;
    }
    name = argnames;
    while (name != first_kw_arg) {
        int cmp = PyObject_RichCompareBool(**name, key, Py_EQ);
        if (unlikely(cmp != 0)) {
            if (cmp == 1) goto arg_passed_twice;
            else goto bad;
        }
        name++;
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
bad:
    return -1;
}
static CYTHON_INLINE int __Pyx_MatchKeywordArg(
    PyObject *key,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    size_t *index_found,
    const char *function_name)
{
    return likely(PyUnicode_CheckExact(key)) ?
        __Pyx_MatchKeywordArg_str(key, argnames, first_kw_arg, index_found, function_name) :
        __Pyx_MatchKeywordArg_nostr(key, argnames, first_kw_arg, index_found, function_name);
}
static void __Pyx_RejectUnknownKeyword(
    PyObject *kwds,
    PyObject ** const argnames[],
    PyObject ** const *first_kw_arg,
    const char *function_name)
{
    Py_ssize_t pos = 0;
    PyObject *key = NULL;
    __Pyx_BEGIN_CRITICAL_SECTION(kwds);
    while (PyDict_Next(kwds, &pos, &key, NULL)) {
        PyObject** const *name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (!*name) {
            #if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(key);
            #endif
            size_t index_found = 0;
            int cmp = __Pyx_MatchKeywordArg(key, argnames, first_kw_arg, &index_found, function_name);
            if (cmp != 1) {
                if (cmp == 0) {
                    PyErr_Format(PyExc_TypeError,
                        "%s() got an unexpected keyword argument '%U'",
                        function_name, key);
                }
                #if CYTHON_AVOID_BORROWED_REFS
                Py_DECREF(key);
                #endif
                break;
            }
            #if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(key);
            #endif
        }
    }
    __Pyx_END_CRITICAL_SECTION();
    assert(PyErr_Occurred());
}
static int __Pyx_ParseKeywordDict(
    PyObject *kwds,
    PyObject ** const argnames[],
    PyObject *values[],
    Py_ssize_t num_pos_args,
    Py_ssize_t num_kwargs,
    const char* function_name,
    int ignore_unknown_kwargs)
{
    PyObject** const *name;
    PyObject** const *first_kw_arg = argnames + num_pos_args;
    Py_ssize_t extracted = 0;
    if (unlikely(!PyArg_ValidateKeywordArguments(kwds))) return -1;
    name = first_kw_arg;
    while (*name && num_kwargs > extracted) {
        PyObject * key = **name;
        PyObject *value;
        int found = 0;
        #if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
        found = PyDict_GetItemRef(kwds, key, &value);
        #else
        value = PyDict_GetItemWithError(kwds, key);
        if (value) {
            Py_INCREF(value);
            found = 1;
        } else {
            if (unlikely(PyErr_Occurred())) goto bad;
        }
        #endif
        if (found) {
            if (unlikely(found < 0)) goto bad;
            values[name-argnames] = value;
            extracted++;
        }
        name++;
    }
    if (num_kwargs > extracted) {
        if (ignore_unknown_kwargs) {
            if (unlikely(__Pyx_ValidateDuplicatePosArgs(kwds, argnames, first_kw_arg, function_name) == -1))
                goto bad;
        } else {
            __Pyx_RejectUnknownKeyword(kwds, argnames, first_kw_arg, function_name);
            goto bad;
        }
    }
    return 0;
bad:
    return -1;
}
static int __Pyx_ParseKeywordDictToDict(
    PyObject *kwds,
    PyObject ** const argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject** const *name;
    PyObject** const *first_kw_arg = argnames + num_pos_args;
    Py_ssize_t len;
    if (unlikely(!PyArg_ValidateKeywordArguments(kwds))) return -1;
    if (PyDict_Update(kwds2, kwds) < 0) goto bad;
    name = first_kw_arg;
    while (*name) {
        PyObject *key = **name;
        PyObject *value;
#if !CYTHON_COMPILING_IN_LIMITED_API && (PY_VERSION_HEX >= 0x030d00A2 || defined(PyDict_Pop))
        int found = PyDict_Pop(kwds2, key, &value);
        if (found) {
            if (unlikely(found < 0)) goto bad;
            values[name-argnames] = value;
        }
#elif __PYX_LIMITED_VERSION_HEX >= 0x030d0000
        int found = PyDict_GetItemRef(kwds2, key, &value);
        if (found) {
            if (unlikely(found < 0)) goto bad;
            values[name-argnames] = value;
            if (unlikely(PyDict_DelItem(kwds2, key) < 0)) goto bad;
        }
#else
    #if CYTHON_COMPILING_IN_CPYTHON
        value = _PyDict_Pop(kwds2, key, kwds2);
    #else
        value = __Pyx_CallUnboundCMethod2(&__pyx_mstate_global->__pyx_umethod_PyDict_Type_pop, kwds2, key, kwds2);
    #endif
        if (value == kwds2) {
            Py_DECREF(value);
        } else {
            if (unlikely(!value)) goto bad;
            values[name-argnames] = value;
        }
#endif
        name++;
    }
    len = PyDict_Size(kwds2);
    if (len > 0) {
        return __Pyx_ValidateDuplicatePosArgs(kwds, argnames, first_kw_arg, function_name);
    } else if (unlikely(len == -1)) {
        goto bad;
    }
    return 0;
bad:
    return -1;
}
static int __Pyx_ParseKeywordsTuple(
    PyObject *kwds,
    PyObject * const *kwvalues,
    PyObject ** const argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    Py_ssize_t num_kwargs,
    const char* function_name,
    int ignore_unknown_kwargs)
{
    PyObject *key = NULL;
    PyObject** const * name;
    PyObject** const *first_kw_arg = argnames + num_pos_args;
    for (Py_ssize_t pos = 0; pos < num_kwargs; pos++) {
#if CYTHON_AVOID_BORROWED_REFS
        key = __Pyx_PySequence_ITEM(kwds, pos);
#else
        key = __Pyx_PyTuple_GET_ITEM(kwds, pos);
#endif
#if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely(!key)) goto bad;
#endif
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            PyObject *value = kwvalues[pos];
            values[name-argnames] = __Pyx_NewRef(value);
        } else {
            size_t index_found = 0;
            int cmp = __Pyx_MatchKeywordArg(key, argnames, first_kw_arg, &index_found, function_name);
            if (cmp == 1) {
                PyObject *value = kwvalues[pos];
                values[index_found] = __Pyx_NewRef(value);
            } else {
                if (unlikely(cmp == -1)) goto bad;
                if (kwds2) {
                    PyObject *value = kwvalues[pos];
                    if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                } else if (!ignore_unknown_kwargs) {
                    goto invalid_keyword;
                }
            }
        }
        #if CYTHON_AVOID_BORROWED_REFS
        Py_DECREF(key);
        key = NULL;
        #endif
    }
    return 0;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    goto bad;
bad:
    #if CYTHON_AVOID_BORROWED_REFS
    Py_XDECREF(key);
    #endif
    return -1;
}
static int __Pyx_ParseKeywords(
    PyObject *kwds,
    PyObject * const *kwvalues,
    PyObject ** const argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    Py_ssize_t num_kwargs,
    const char* function_name,
    int ignore_unknown_kwargs)
{
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds)))
        return __Pyx_ParseKeywordsTuple(kwds, kwvalues, argnames, kwds2, values, num_pos_args, num_kwargs, function_name, ignore_unknown_kwargs);
    else if (kwds2)
        return __Pyx_ParseKeywordDictToDict(kwds, argnames, kwds2, values, num_pos_args, function_name);
    else
        return __Pyx_ParseKeywordDict(kwds, argnames, values, num_pos_args, num_kwargs, function_name, ignore_unknown_kwargs);
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* decode_c_bytes */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    if (unlikely((start < 0) | (stop < 0))) {
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (stop > length)
        stop = length;
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_mstate_global->__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* RaiseException */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
#elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    __Pyx_TypeName type_name;
    __Pyx_TypeName obj_type_name;
    PyObject *extra_info = __pyx_mstate_global->__pyx_empty_unicode;
    int from_annotation_subclass = 0;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (!exact) {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    } else if (exact == 2) {
        if (__Pyx_TypeCheck(obj, type)) {
            from_annotation_subclass = 1;
            extra_info = __pyx_mstate_global->__pyx_kp_u_Note_that_Cython_is_deliberately;
        }
    }
    type_name = __Pyx_PyType_GetFullyQualifiedName(type);
    obj_type_name = __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected " __Pyx_FMT_TYPENAME
        ", got " __Pyx_FMT_TYPENAME ")"
#if __PYX_LIMITED_VERSION_HEX < 0x030C0000
        "%s%U"
#endif
        , name, type_name, obj_type_name
#if __PYX_LIMITED_VERSION_HEX < 0x030C0000
        , (from_annotation_subclass ? ". " : ""), extra_info
#endif
        );
#if __PYX_LIMITED_VERSION_HEX >= 0x030C0000
    if (exact == 2 && from_annotation_subclass) {
        PyObject *res;
        PyObject *vargs[2];
        vargs[0] = PyErr_GetRaisedException();
        vargs[1] = extra_info;
        res = PyObject_VectorcallMethod(__pyx_mstate_global->__pyx_kp_u_add_note, vargs, 2, NULL);
        Py_XDECREF(res);
        PyErr_SetRaisedException(vargs[0]);
    }
#endif
    __Pyx_DECREF_TypeName(type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* RejectKeywords */
static void __Pyx_RejectKeywords(const char* function_name, PyObject *kwds) {
    PyObject *key = NULL;
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds))) {
        key = __Pyx_PySequence_ITEM(kwds, 0);
    } else {
        Py_ssize_t pos = 0;
        if (unlikely(!PyArg_ValidateKeywordArguments(kwds))) return;
        PyDict_Next(kwds, &pos, &key, NULL);
        Py_INCREF(key);
    }
    if (likely(key)) {
        PyErr_Format(PyExc_TypeError,
            "%s() got an unexpected keyword argument '%U'",
            function_name, key);
        Py_DECREF(key);
    }
}

/* PyObjectFastCallMethod */
#if !CYTHON_VECTORCALL || PY_VERSION_HEX < 0x03090000
static PyObject *__Pyx_PyObject_FastCallMethod(PyObject *name, PyObject *const *args, size_t nargsf) {
    PyObject *result;
    PyObject *attr = PyObject_GetAttr(args[0], name);
    if (unlikely(!attr))
        return NULL;
    result = __Pyx_PyObject_FastCall(attr, args+1, nargsf - 1);
    Py_DECREF(attr);
    return result;
}
#endif

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    __Pyx_TypeName obj_type_name;
    __Pyx_TypeName type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    obj_type_name = __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(obj));
    type_name = __Pyx_PyType_GetFullyQualifiedName(type);
    PyErr_Format(PyExc_TypeError,
                 "Cannot convert " __Pyx_FMT_TYPENAME " to " __Pyx_FMT_TYPENAME,
                 obj_type_name, type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    return 0;
}

/* PyLongCompare */
static CYTHON_INLINE PyObject* __Pyx_PyLong_EqObjC(PyObject *op1, PyObject *op2, long intval, long inplace) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_UNUSED_VAR(inplace);
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = __Pyx_PyLong_DigitCount(op1);
        const digit* digits = __Pyx_PyLong_Digits(op1);
        if (intval == 0) {
            if (__Pyx_PyLong_IsZero(op1) == 1) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (__Pyx_PyLong_IsNonNeg(op1))
                Py_RETURN_FALSE;
            intval = -intval;
        } else {
            if (__Pyx_PyLong_IsNeg(op1))
                Py_RETURN_FALSE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = __Pyx_PyFloat_AS_DOUBLE(op1);
        if ((double)a == (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_EQ));
}

/* PyUnicode_Unicode */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj) {
    if (unlikely(obj == Py_None))
        obj = __pyx_mstate_global->__pyx_kp_u_None;
    return __Pyx_NewRef(obj);
}

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject** values, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind, kind_shift;
    Py_ssize_t i, char_pos;
    void *result_udata;
    if (max_char > 1114111) max_char = 1114111;
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    kind_shift = (result_ukind == PyUnicode_4BYTE_KIND) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_DATA(result_uval);
    assert(kind_shift == 2 || kind_shift == 1 || kind_shift == 0);
    if (unlikely((PY_SSIZE_T_MAX >> kind_shift) - result_ulength < 0))
        goto overflow;
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = values[i];
        #if !CYTHON_COMPILING_IN_LIMITED_API
        if (__Pyx_PyUnicode_READY(uval) == (-1))
            goto bad;
        #endif
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        #if !CYTHON_ASSUME_SAFE_SIZE
        if (unlikely(ulength < 0)) goto bad;
        #endif
        if (unlikely(!ulength))
            continue;
        if (unlikely((PY_SSIZE_T_MAX >> kind_shift) - ulength < char_pos))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (ukind == result_ukind) {
            memcpy((char *)result_udata + (char_pos << kind_shift), udata, (size_t) (ulength << kind_shift));
        } else {
            #if PY_VERSION_HEX >= 0x030d0000
            if (unlikely(PyUnicode_CopyCharacters(result_uval, char_pos, uval, 0, ulength) < 0)) goto bad;
            #elif CYTHON_COMPILING_IN_CPYTHON || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    Py_ssize_t i;
    PyObject *result = NULL;
    PyObject *value_tuple = PyTuple_New(value_count);
    if (unlikely(!value_tuple)) return NULL;
    CYTHON_UNUSED_VAR(max_char);
    CYTHON_UNUSED_VAR(result_ulength);
    for (i=0; i<value_count; i++) {
        if (__Pyx_PyTuple_SET_ITEM(value_tuple, i, values[i]) != (0)) goto bad;
        Py_INCREF(values[i]);
    }
    result = PyUnicode_Join(__pyx_mstate_global->__pyx_empty_unicode, value_tuple);
bad:
    Py_DECREF(value_tuple);
    return result;
#endif
}

/* RaiseUnexpectedTypeError */
static int
__Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj)
{
    __Pyx_TypeName obj_type_name = __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError, "Expected %s, got " __Pyx_FMT_TYPENAME,
                 expected, obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* GetAttr3 */
#if __PYX_LIMITED_VERSION_HEX < 0x030d0000
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
#endif
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
    int res = PyObject_GetOptionalAttr(o, n, &r);
    return (res != 0) ? r : __Pyx_NewRef(d);
#else
  #if CYTHON_USE_TYPE_SLOTS
    if (likely(PyUnicode_Check(n))) {
        r = __Pyx_PyObject_GetAttrStrNoError(o, n);
        if (unlikely(!r) && likely(!PyErr_Occurred())) {
            r = __Pyx_NewRef(d);
        }
        return r;
    }
  #endif
    r = PyObject_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
#endif
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        if (!PyErr_Occurred())
            PyErr_SetNone(PyExc_NameError);
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
    PyErr_Clear();
#elif CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    if (unlikely(__Pyx_PyDict_GetItemRef(__pyx_mstate_global->__pyx_d, name, &result) == -1)) PyErr_Clear();
    __PYX_UPDATE_DICT_CACHE(__pyx_mstate_global->__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return result;
    }
#else
    result = _PyDict_GetItem_KnownHash(__pyx_mstate_global->__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_mstate_global->__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* decode_c_string */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    Py_ssize_t length;
    if (unlikely((start < 0) | (stop < 0))) {
        size_t slen = strlen(cstring);
        if (unlikely(slen > (size_t) PY_SSIZE_T_MAX)) {
            PyErr_SetString(PyExc_OverflowError,
                            "c-string too long to convert to Python");
            return NULL;
        }
        length = (Py_ssize_t) slen;
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_mstate_global->__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* DictGetItem */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    if (unlikely(__Pyx_PyDict_GetItemRef(d, key, &value) == 0)) { // no value, no error
        if (unlikely(PyTuple_Check(key))) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args)) {
                PyErr_SetObject(PyExc_KeyError, args);
                Py_DECREF(args);
            }
        } else {
            PyErr_SetObject(PyExc_KeyError, key);
        }
    }
    return value;
}
#endif

/* SliceTupleAndList */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_crop_slice(Py_ssize_t* _start, Py_ssize_t* _stop, Py_ssize_t* _length) {
    Py_ssize_t start = *_start, stop = *_stop, length = *_length;
    if (start < 0) {
        start += length;
        if (start < 0)
            start = 0;
    }
    if (stop < 0)
        stop += length;
    else if (stop > length)
        stop = length;
    *_length = stop - start;
    *_start = start;
    *_stop = stop;
}
static CYTHON_INLINE PyObject* __Pyx_PyTuple_GetSlice(
            PyObject* src, Py_ssize_t start, Py_ssize_t stop) {
    Py_ssize_t length = PyTuple_GET_SIZE(src);
    __Pyx_crop_slice(&start, &stop, &length);
    return __Pyx_PyTuple_FromArray(((PyTupleObject*)src)->ob_item + start, length);
}
static CYTHON_INLINE PyObject* __Pyx_PyList_GetSlice_locked(
            PyObject* src, Py_ssize_t start, Py_ssize_t stop) {
    Py_ssize_t length = PyList_GET_SIZE(src);
    __Pyx_crop_slice(&start, &stop, &length);
    if (length <= 0) {
        return PyList_New(0);
    }
    return __Pyx_PyList_FromArray(((PyListObject*)src)->ob_item + start, length);
}
static CYTHON_INLINE PyObject* __Pyx_PyList_GetSlice(
            PyObject* src, Py_ssize_t start, Py_ssize_t stop) {
    PyObject *result;
    __Pyx_BEGIN_CRITICAL_SECTION(src);
    result = __Pyx_PyList_GetSlice_locked(src, start, stop);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
#endif // CYTHON_COMPILING_IN_CPYTHON

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    if (level == -1) {
        if (strchr(__Pyx_MODULE_NAME, '.') != (0)) {
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_mstate_global->__pyx_d, empty_dict, from_list, 1);
            if (unlikely(!module)) {
                if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                    goto bad;
                PyErr_Clear();
            }
        }
        level = 0;
    }
    if (!module) {
        module = PyImport_ImportModuleLevelObject(
            name, __pyx_mstate_global->__pyx_d, empty_dict, from_list, level);
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        const char* module_name_str = 0;
        PyObject* module_name = 0;
        PyObject* module_dot = 0;
        PyObject* full_name = 0;
        PyErr_Clear();
        module_name_str = PyModule_GetName(module);
        if (unlikely(!module_name_str)) { goto modbad; }
        module_name = PyUnicode_FromString(module_name_str);
        if (unlikely(!module_name)) { goto modbad; }
        module_dot = PyUnicode_Concat(module_name, __pyx_mstate_global->__pyx_kp_u__4);
        if (unlikely(!module_dot)) { goto modbad; }
        full_name = PyUnicode_Concat(module_dot, name);
        if (unlikely(!full_name)) { goto modbad; }
        #if (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400) ||\
                CYTHON_COMPILING_IN_GRAAL
        {
            PyObject *modules = PyImport_GetModuleDict();
            if (unlikely(!modules))
                goto modbad;
            value = PyObject_GetItem(modules, full_name);
        }
        #else
        value = PyImport_GetModule(full_name);
        #endif
      modbad:
        Py_XDECREF(full_name);
        Py_XDECREF(module_dot);
        Py_XDECREF(module_name);
    }
    if (unlikely(!value)) {
        PyErr_Format(PyExc_ImportError, "cannot import name %S", name);
    }
    return value;
}

/* HasAttr */
#if __PYX_LIMITED_VERSION_HEX < 0x030d0000
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!PyUnicode_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_PyObject_GetAttrStrNoError(o, n);
    if (!r) {
        return (unlikely(PyErr_Occurred())) ? -1 : 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE && !CYTHON_AVOID_BORROWED_REFS && !CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyLong_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyLong_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            return __Pyx_PyList_GetItemRef(o, n);
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyLong_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || !PyMapping_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyLong_FromSsize_t(i));
}

/* FixUpExtensionType */
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg[2] = {NULL, NULL};
    return __Pyx_PyObject_FastCall(func, arg + 1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetFullyQualifiedName(tp);
    PyErr_Format(PyExc_AttributeError,
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* ValidateBasesTuple */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n;
#if CYTHON_ASSUME_SAFE_SIZE
    n = PyTuple_GET_SIZE(bases);
#else
    n = PyTuple_Size(bases);
    if (unlikely(n < 0)) return -1;
#endif
    for (i = 1; i < n; i++)
    {
        PyTypeObject *b;
#if CYTHON_AVOID_BORROWED_REFS
        PyObject *b0 = PySequence_GetItem(bases, i);
        if (!b0) return -1;
#elif CYTHON_ASSUME_SAFE_MACROS
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
#else
        PyObject *b0 = PyTuple_GetItem(bases, i);
        if (!b0) return -1;
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetFullyQualifiedName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
        if (dictoffset == 0)
        {
            Py_ssize_t b_dictoffset = 0;
#if CYTHON_USE_TYPE_SLOTS
            b_dictoffset = b->tp_dictoffset;
#else
            PyObject *py_b_dictoffset = PyObject_GetAttrString((PyObject*)b, "__dictoffset__");
            if (!py_b_dictoffset) goto dictoffset_return;
            b_dictoffset = PyLong_AsSsize_t(py_b_dictoffset);
            Py_DECREF(py_b_dictoffset);
            if (b_dictoffset == -1 && PyErr_Occurred()) goto dictoffset_return;
#endif
            if (b_dictoffset) {
                {
                    __Pyx_TypeName b_name = __Pyx_PyType_GetFullyQualifiedName(b);
                    PyErr_Format(PyExc_TypeError,
                        "extension type '%.200s' has no __dict__ slot, "
                        "but base type '" __Pyx_FMT_TYPENAME "' has: "
                        "either add 'cdef dict __dict__' to the extension type "
                        "or add '__slots__ = [...]' to the base type",
                        type_name, b_name);
                    __Pyx_DECREF_TypeName(b_name);
                }
#if !CYTHON_USE_TYPE_SLOTS
              dictoffset_return:
#endif
#if CYTHON_AVOID_BORROWED_REFS
                Py_DECREF(b0);
#endif
                return -1;
            }
        }
#if CYTHON_AVOID_BORROWED_REFS
        Py_DECREF(b0);
#endif
    }
    return 0;
}
#endif

/* PyType_Ready */
CYTHON_UNUSED static int __Pyx_PyType_HasMultipleInheritance(PyTypeObject *t) {
    while (t) {
        PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
        if (bases) {
            return 1;
        }
        t = __Pyx_PyType_GetSlot(t, tp_base, PyTypeObject*);
    }
    return 0;
}
static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !CYTHON_COMPILING_IN_CPYTHON || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    if (!__Pyx_PyType_HasMultipleInheritance(t)) {
        return PyType_Ready(t);
    }
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400) &&\
                !CYTHON_COMPILING_IN_GRAAL
        gc = PyImport_GetModule(__pyx_mstate_global->__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_mstate_global->__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_mstate_global->__pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_mstate_global->__pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_mstate_global->__pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* LimitedApiGetTypeDict */
#if CYTHON_COMPILING_IN_LIMITED_API
static Py_ssize_t __Pyx_GetTypeDictOffset(void) {
    PyObject *tp_dictoffset_o;
    Py_ssize_t tp_dictoffset;
    tp_dictoffset_o = PyObject_GetAttrString((PyObject*)(&PyType_Type), "__dictoffset__");
    if (unlikely(!tp_dictoffset_o)) return -1;
    tp_dictoffset = PyLong_AsSsize_t(tp_dictoffset_o);
    Py_DECREF(tp_dictoffset_o);
    if (unlikely(tp_dictoffset == 0)) {
        PyErr_SetString(
            PyExc_TypeError,
            "'type' doesn't have a dictoffset");
        return -1;
    } else if (unlikely(tp_dictoffset < 0)) {
        PyErr_SetString(
            PyExc_TypeError,
            "'type' has an unexpected negative dictoffset. "
            "Please report this as Cython bug");
        return -1;
    }
    return tp_dictoffset;
}
static PyObject *__Pyx_GetTypeDict(PyTypeObject *tp) {
    static Py_ssize_t tp_dictoffset = 0;
    if (unlikely(tp_dictoffset == 0)) {
        tp_dictoffset = __Pyx_GetTypeDictOffset();
        if (unlikely(tp_dictoffset == -1 && PyErr_Occurred())) {
            tp_dictoffset = 0; // try again next time?
            return NULL;
        }
    }
    return *(PyObject**)((char*)tp + tp_dictoffset);
}
#endif

/* DelItemOnTypeDict */
static int __Pyx__DelItemOnTypeDict(PyTypeObject *tp, PyObject *k) {
    int result;
    PyObject *tp_dict;
#if CYTHON_COMPILING_IN_LIMITED_API
    tp_dict = __Pyx_GetTypeDict(tp);
    if (unlikely(!tp_dict)) return -1;
#else
    tp_dict = tp->tp_dict;
#endif
    result = PyDict_DelItem(tp_dict, k);
    if (likely(!result)) PyType_Modified(tp);
    return result;
}

/* SetItemOnTypeDict */
static int __Pyx__SetItemOnTypeDict(PyTypeObject *tp, PyObject *k, PyObject *v) {
    int result;
    PyObject *tp_dict;
#if CYTHON_COMPILING_IN_LIMITED_API
    tp_dict = __Pyx_GetTypeDict(tp);
    if (unlikely(!tp_dict)) return -1;
#else
    tp_dict = tp->tp_dict;
#endif
    result = PyDict_SetItem(tp_dict, k, v);
    if (likely(!result)) {
        PyType_Modified(tp);
        if (unlikely(PyObject_HasAttr(v, __pyx_mstate_global->__pyx_n_u_set_name))) {
            PyObject *setNameResult = PyObject_CallMethodObjArgs(v, __pyx_mstate_global->__pyx_n_u_set_name,  (PyObject *) tp, k, NULL);
            if (!setNameResult) return -1;
            Py_DECREF(setNameResult);
        }
    }
    return result;
}

/* SetupReduce */
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStrNoError(meth, __pyx_mstate_global->__pyx_n_u_name_2);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_mstate_global->__pyx_n_u_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_mstate_global->__pyx_n_u_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_mstate_global->__pyx_n_u_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_mstate_global->__pyx_n_u_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_mstate_global->__pyx_n_u_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_mstate_global->__pyx_n_u_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_mstate_global->__pyx_n_u_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_mstate_global->__pyx_n_u_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_mstate_global->__pyx_n_u_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_mstate_global->__pyx_n_u_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_mstate_global->__pyx_n_u_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_mstate_global->__pyx_n_u_reduce_cython);
            if (likely(reduce_cython)) {
                ret = __Pyx_SetItemOnTypeDict((PyTypeObject*)type_obj, __pyx_mstate_global->__pyx_n_u_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = __Pyx_DelItemOnTypeDict((PyTypeObject*)type_obj, __pyx_mstate_global->__pyx_n_u_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_mstate_global->__pyx_n_u_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_mstate_global->__pyx_n_u_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_mstate_global->__pyx_n_u_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = __Pyx_SetItemOnTypeDict((PyTypeObject*)type_obj, __pyx_mstate_global->__pyx_n_u_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = __Pyx_DelItemOnTypeDict((PyTypeObject*)type_obj, __pyx_mstate_global->__pyx_n_u_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred()) {
        __Pyx_TypeName type_obj_name =
            __Pyx_PyType_GetFullyQualifiedName((PyTypeObject*)type_obj);
        PyErr_Format(PyExc_RuntimeError,
            "Unable to initialize pickling for " __Pyx_FMT_TYPENAME, type_obj_name);
        __Pyx_DECREF_TypeName(type_obj_name);
    }
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    return __Pyx_PyImport_AddModuleRef(__PYX_ABI_MODULE_NAME);
}

/* dict_setdefault */
static CYTHON_INLINE PyObject *__Pyx_PyDict_SetDefault(PyObject *d, PyObject *key, PyObject *default_value,
                                                       int is_safe_type) {
    PyObject* value;
    CYTHON_MAYBE_UNUSED_VAR(is_safe_type);
#if CYTHON_COMPILING_IN_LIMITED_API
    value = PyObject_CallMethod(d, "setdefault", "OO", key, default_value);
#elif PY_VERSION_HEX >= 0x030d0000
    PyDict_SetDefaultRef(d, key, default_value, &value);
#else
    value = PyDict_SetDefault(d, key, default_value);
    if (unlikely(!value)) return NULL;
    Py_INCREF(value);
#endif
    return value;
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t expected_basicsize) {
    Py_ssize_t basicsize;
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
    if (unlikely(!py_basicsize)) return -1;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = NULL;
    if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) return -1;
#else
    basicsize = ((PyTypeObject*) cached_type)->tp_basicsize;
#endif
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module = NULL, *cached_type = NULL, *abi_module_dict, *new_cached_type, *py_object_name;
    int get_item_ref_result;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    py_object_name = PyUnicode_FromString(object_name);
    if (!py_object_name) return NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) goto done;
    abi_module_dict = PyModule_GetDict(abi_module);
    if (!abi_module_dict) goto done;
    get_item_ref_result = __Pyx_PyDict_GetItemRef(abi_module_dict, py_object_name, &cached_type);
    if (get_item_ref_result == 1) {
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    } else if (unlikely(get_item_ref_result == -1)) {
        goto bad;
    }
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    new_cached_type = __Pyx_PyDict_SetDefault(abi_module_dict, py_object_name, cached_type, 1);
    if (unlikely(new_cached_type != cached_type)) {
        if (unlikely(!new_cached_type)) goto bad;
        Py_DECREF(cached_type);
        cached_type = new_cached_type;
        if (__Pyx_VerifyCachedType(
                cached_type,
                object_name,
                spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    } else {
        Py_DECREF(new_cached_type);
    }
done:
    Py_XDECREF(abi_module);
    Py_DECREF(py_object_name);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CallTypeTraverse */
#if !CYTHON_USE_TYPE_SPECS || (!CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x03090000)
#else
static int __Pyx_call_type_traverse(PyObject *o, int always_call, visitproc visit, void *arg) {
    #if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x03090000
    if (__Pyx_get_runtime_version() < 0x03090000) return 0;
    #endif
    if (!always_call) {
        PyTypeObject *base = __Pyx_PyObject_GetSlot(o, tp_base, PyTypeObject*);
        unsigned long flags = PyType_GetFlags(base);
        if (flags & Py_TPFLAGS_HEAPTYPE) {
            return 0;
        }
    }
    Py_VISIT((PyObject*)Py_TYPE(o));
    return 0;
}
#endif

/* PyMethodNew */
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    PyObject *result;
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    #if __PYX_LIMITED_VERSION_HEX >= 0x030C0000
    {
        PyObject *args[] = {func, self};
        result = PyObject_Vectorcall(__pyx_mstate_global->__Pyx_CachedMethodType, args, 2, NULL);
    }
    #else
    result = PyObject_CallFunctionObjArgs(__pyx_mstate_global->__Pyx_CachedMethodType, func, self, NULL);
    #endif
    return result;
}
#else
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL && (CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL)
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    #if !CYTHON_ASSUME_SAFE_SIZE
    Py_ssize_t nkw = PyDict_Size(kw);
    if (unlikely(nkw == -1)) return NULL;
    #else
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    #endif
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &=
        #if CYTHON_COMPILING_IN_LIMITED_API
            PyType_GetFlags(Py_TYPE(key));
        #else
            Py_TYPE(key)->tp_flags;
        #endif
        Py_INCREF(key);
        Py_INCREF(value);
        #if !CYTHON_ASSUME_SAFE_MACROS
        if (unlikely(PyTuple_SetItem(kwnames, i, key) < 0)) goto cleanup;
        #else
        PyTuple_SET_ITEM(kwnames, i, key);
        #endif
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    Py_ssize_t kw_size =
        likely(kw == NULL) ?
        0 :
#if !CYTHON_ASSUME_SAFE_SIZE
        PyDict_Size(kw);
#else
        PyDict_GET_SIZE(kw);
#endif
    if (kw_size == 0) {
        return vc(func, args, nargs, NULL);
    }
#if !CYTHON_ASSUME_SAFE_SIZE
    else if (unlikely(kw_size == -1)) {
        return NULL;
    }
#endif
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunctionNoMethod(PyObject *func, void (*cfunc)(void)) {
    if (__Pyx_CyFunction_Check(func)) {
        return PyCFunction_GetFunction(((__pyx_CyFunctionObject*)func)->func) == (PyCFunction) cfunc;
    } else if (PyCFunction_Check(func)) {
        return PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void (*cfunc)(void)) {
    if ((PyObject*)Py_TYPE(func) == __pyx_mstate_global->__Pyx_CachedMethodType) {
        int result;
        PyObject *newFunc = PyObject_GetAttr(func, __pyx_mstate_global->__pyx_n_u_func);
        if (unlikely(!newFunc)) {
            PyErr_Clear(); // It's only an optimization, so don't throw an error
            return 0;
        }
        result = __Pyx__IsSameCyOrCFunctionNoMethod(newFunc, cfunc);
        Py_DECREF(newFunc);
        return result;
    }
    return __Pyx__IsSameCyOrCFunctionNoMethod(func, cfunc);
}
#else
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void (*cfunc)(void)) {
    if (PyMethod_Check(func)) {
        func = PyMethod_GET_FUNCTION(func);
    }
    return __Pyx_CyOrPyCFunction_Check(func) && __Pyx_CyOrPyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
}
#endif
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc_locked(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_doc == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_doc = PyObject_GetAttrString(op->func, "__doc__");
        if (unlikely(!op->func_doc)) return NULL;
#else
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
#endif
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure) {
    PyObject *result;
    CYTHON_UNUSED_VAR(closure);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_doc_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name_locked(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_name == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_name = PyObject_GetAttrString(op->func, "__name__");
#else
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    PyObject *result = NULL;
    CYTHON_UNUSED_VAR(context);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_name_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    PyObject *result;
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    Py_INCREF(op->func_qualname);
    result = op->func_qualname;
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict_locked(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    PyObject *result;
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_dict_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = __Pyx_PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = __Pyx_PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults_locked(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = NULL;
    CYTHON_UNUSED_VAR(context);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_defaults_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults_locked(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result;
    CYTHON_UNUSED_VAR(context);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_kwdefaults_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    __Pyx_END_CRITICAL_SECTION();
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations_locked(__pyx_CyFunctionObject *op) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject *result;
    CYTHON_UNUSED_VAR(context);
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    result = __Pyx_CyFunction_get_annotations_locked(op);
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine_value(__pyx_CyFunctionObject *op) {
    int is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
    if (is_coroutine) {
        PyObject *is_coroutine_value, *module, *fromlist, *marker = __pyx_mstate_global->__pyx_n_u_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
#if CYTHON_ASSUME_SAFE_MACROS
        PyList_SET_ITEM(fromlist, 0, marker);
#else
        if (unlikely(PyList_SetItem(fromlist, 0, marker) < 0)) {
            Py_DECREF(marker);
            Py_DECREF(fromlist);
            return NULL;
        }
#endif
        module = PyImport_ImportModuleLevelObject(__pyx_mstate_global->__pyx_n_u_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(is_coroutine_value)) {
            return is_coroutine_value;
        }
ignore:
        PyErr_Clear();
    }
    return __Pyx_PyBool_FromLong(is_coroutine);
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    PyObject *result;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    result = __Pyx_CyFunction_get_is_coroutine_value(op);
    if (unlikely(!result))
        return NULL;
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    if (op->func_is_coroutine) {
        Py_DECREF(result);
        result = __Pyx_NewRef(op->func_is_coroutine);
    } else {
        op->func_is_coroutine = __Pyx_NewRef(result);
    }
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static void __Pyx_CyFunction_raise_argument_count_error(__pyx_CyFunctionObject *func, const char* message, Py_ssize_t size) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_name = __Pyx_CyFunction_get_name(func, NULL);
    if (!py_name) return;
    PyErr_Format(PyExc_TypeError,
        "%.200S() %s (%" CYTHON_FORMAT_SSIZE_T "d given)",
        py_name, message, size);
    Py_DECREF(py_name);
#else
    const char* name = ((PyCFunctionObject*)func)->m_ml->ml_name;
    PyErr_Format(PyExc_TypeError,
        "%.200s() %s (%" CYTHON_FORMAT_SSIZE_T "d given)",
        name, message, size);
#endif
}
static void __Pyx_CyFunction_raise_type_error(__pyx_CyFunctionObject *func, const char* message) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_name = __Pyx_CyFunction_get_name(func, NULL);
    if (!py_name) return;
    PyErr_Format(PyExc_TypeError,
        "%.200S() %s",
        py_name, message);
    Py_DECREF(py_name);
#else
    const char* name = ((PyCFunctionObject*)func)->m_ml->ml_name;
    PyErr_Format(PyExc_TypeError,
        "%.200s() %s",
        name, message);
#endif
}
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *
__Pyx_CyFunction_get_module(__pyx_CyFunctionObject *op, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_GetAttrString(op->func, "__module__");
}
static int
__Pyx_CyFunction_set_module(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_SetAttrString(op->func, "__module__", value);
}
#endif
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {"func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {"__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {"func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {"__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {"__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {"func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {"__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {"func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {"__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {"func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {"__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {"func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {"__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {"func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {"__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {"__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {"__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {"_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", (getter)__Pyx_CyFunction_get_module, (setter)__Pyx_CyFunction_set_module, 0, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
#if !CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#endif
    {"__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL || CYTHON_COMPILING_IN_LIMITED_API
    {"__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
    {"__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {"__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    PyObject *result = NULL;
    CYTHON_UNUSED_VAR(args);
    __Pyx_BEGIN_CRITICAL_SECTION(m);
    Py_INCREF(m->func_qualname);
    result = m->func_qualname;
    __Pyx_END_CRITICAL_SECTION();
    return result;
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
#if !CYTHON_COMPILING_IN_LIMITED_API
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
#endif
    if (unlikely(op == NULL))
        return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    op->func = PyCFunction_NewEx(ml, (PyObject*)op, module);
    if (unlikely(!op->func)) return NULL;
#endif
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
#if !CYTHON_COMPILING_IN_LIMITED_API
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
#endif
    Py_XINCREF(closure);
    op->func_closure = closure;
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_XINCREF(module);
    cf->m_module = module;
#endif
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_CLEAR(m->func);
#else
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
#endif
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    Py_CLEAR(m->defaults);
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    {
        int e = __Pyx_call_type_traverse((PyObject*)m, 1, visit, arg);
        if (e) return e;
    }
    Py_VISIT(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(m->func);
#else
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
#endif
    Py_VISIT(m->func_dict);
    __Pyx_VISIT_CONST(m->func_name);
    __Pyx_VISIT_CONST(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    __Pyx_VISIT_CONST(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
#endif
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    Py_VISIT(m->defaults);
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
    PyObject *repr;
    __Pyx_BEGIN_CRITICAL_SECTION(op);
    repr = PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
    __Pyx_END_CRITICAL_SECTION();
    return repr;
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *f = ((__pyx_CyFunctionObject*)func)->func;
    PyCFunction meth;
    int flags;
    meth = PyCFunction_GetFunction(f);
    if (unlikely(!meth)) return NULL;
    flags = PyCFunction_GetFlags(f);
    if (unlikely(flags < 0)) return NULL;
#else
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    int flags = f->m_ml->ml_flags;
#endif
    Py_ssize_t size;
    switch (flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void(*)(void))meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_SIZE
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 0))
                return (*meth)(self, NULL);
            __Pyx_CyFunction_raise_argument_count_error(
                (__pyx_CyFunctionObject*)func,
                "takes no arguments", size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_SIZE
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = __Pyx_PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            __Pyx_CyFunction_raise_argument_count_error(
                (__pyx_CyFunctionObject*)func,
                "takes exactly one argument", size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
    __Pyx_CyFunction_raise_type_error(
        (__pyx_CyFunctionObject*)func, "takes no keyword arguments");
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *self, *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)func)->func);
    if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
    self = ((PyCFunctionObject*)func)->m_self;
#endif
    result = __Pyx_CyFunction_CallMethod(func, self, arg, kw);
    return result;
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL && (CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL)
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS && CYTHON_ASSUME_SAFE_SIZE
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
#if CYTHON_ASSUME_SAFE_SIZE
        argc = PyTuple_GET_SIZE(args);
#else
        argc = PyTuple_Size(args);
        if (unlikely(argc < 0)) return NULL;
#endif
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL && (CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL)
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            __Pyx_CyFunction_raise_type_error(
                cyfunc, "needs an argument");
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(__Pyx_PyTuple_GET_SIZE(kwnames))) {
        __Pyx_CyFunction_raise_type_error(
            cyfunc, "takes no keyword arguments");
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyCFunction meth = PyCFunction_GetFunction(cyfunc->func);
    if (unlikely(!meth)) return NULL;
#else
    PyCFunction meth = ((PyCFunctionObject*)cyfunc)->m_ml->ml_meth;
#endif
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
#if CYTHON_COMPILING_IN_LIMITED_API
        self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)cyfunc)->func);
        if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
        self = ((PyCFunctionObject*)cyfunc)->m_self;
#endif
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        __Pyx_CyFunction_raise_argument_count_error(
            cyfunc, "takes no arguments", nargs);
        return NULL;
    }
    return meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyCFunction meth = PyCFunction_GetFunction(cyfunc->func);
    if (unlikely(!meth)) return NULL;
#else
    PyCFunction meth = ((PyCFunctionObject*)cyfunc)->m_ml->ml_meth;
#endif
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
#if CYTHON_COMPILING_IN_LIMITED_API
        self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)cyfunc)->func);
        if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
        self = ((PyCFunctionObject*)cyfunc)->m_self;
#endif
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        __Pyx_CyFunction_raise_argument_count_error(
            cyfunc, "takes exactly one argument", nargs);
        return NULL;
    }
    return meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyCFunction meth = PyCFunction_GetFunction(cyfunc->func);
    if (unlikely(!meth)) return NULL;
#else
    PyCFunction meth = ((PyCFunctionObject*)cyfunc)->m_ml->ml_meth;
#endif
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
#if CYTHON_COMPILING_IN_LIMITED_API
        self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)cyfunc)->func);
        if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
        self = ((PyCFunctionObject*)cyfunc)->m_self;
#endif
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyCFunction meth = PyCFunction_GetFunction(cyfunc->func);
    if (unlikely(!meth)) return NULL;
#else
    PyCFunction meth = ((PyCFunctionObject*)cyfunc)->m_ml->ml_meth;
#endif
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
#if CYTHON_COMPILING_IN_LIMITED_API
        self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)cyfunc)->func);
        if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
        self = ((PyCFunctionObject*)cyfunc)->m_self;
#endif
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if CYTHON_METH_FASTCALL
#if defined(Py_TPFLAGS_HAVE_VECTORCALL)
    Py_TPFLAGS_HAVE_VECTORCALL |
#elif defined(_Py_TPFLAGS_HAVE_VECTORCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
#endif // CYTHON_METH_FASTCALL
#if PY_VERSION_HEX >= 0x030A0000
    Py_TPFLAGS_IMMUTABLETYPE |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
static int __pyx_CyFunction_init(PyObject *module) {
    __pyx_mstatetype *mstate = __Pyx_PyModule_GetState(module);
    mstate->__pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
    if (unlikely(mstate->__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_InitDefaults(PyObject *func, PyTypeObject *defaults_type) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_CallObject((PyObject*)defaults_type, NULL); // _PyObject_New(defaults_type);
    if (unlikely(!m->defaults))
        return NULL;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_mstate_global->__pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* GetNameInClass */
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    PyObject *dict;
    assert(PyType_Check(nmspace));
#if CYTHON_USE_TYPE_SLOTS
    dict = ((PyTypeObject*)nmspace)->tp_dict;
    Py_XINCREF(dict);
#else
    dict = PyObject_GetAttr(nmspace, __pyx_mstate_global->__pyx_n_u_dict);
#endif
    if (likely(dict)) {
        result = PyObject_GetItem(dict, name);
        Py_DECREF(dict);
        if (result) {
            return result;
        }
    }
    PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}

/* CLineInTraceback */
#if CYTHON_CLINE_IN_TRACEBACK && CYTHON_CLINE_IN_TRACEBACK_RUNTIME
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_mstate_global->__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_mstate_global->__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __Pyx_BEGIN_CRITICAL_SECTION(*cython_runtime_dict);
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_mstate_global->__pyx_n_u_cline_in_traceback))
        Py_XINCREF(use_cline);
        __Pyx_END_CRITICAL_SECTION();
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_mstate_global->__pyx_cython_runtime, __pyx_mstate_global->__pyx_n_u_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_INCREF(use_cline);
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_mstate_global->__pyx_cython_runtime, __pyx_mstate_global->__pyx_n_u_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    Py_XDECREF(use_cline);
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static __Pyx_CachedCodeObjectType *__pyx__find_code_object(struct __Pyx_CodeObjectCache *code_cache, int code_line) {
    __Pyx_CachedCodeObjectType* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!code_cache->entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(code_cache->entries, code_cache->count, code_line);
    if (unlikely(pos >= code_cache->count) || unlikely(code_cache->entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = code_cache->entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static __Pyx_CachedCodeObjectType *__pyx_find_code_object(int code_line) {
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && !CYTHON_ATOMICS
    (void)__pyx__find_code_object;
    return NULL; // Most implementation should have atomics. But otherwise, don't make it thread-safe, just miss.
#else
    struct __Pyx_CodeObjectCache *code_cache = &__pyx_mstate_global->__pyx_code_cache;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_nonatomic_int_type old_count = __pyx_atomic_incr_acq_rel(&code_cache->accessor_count);
    if (old_count < 0) {
        __pyx_atomic_decr_acq_rel(&code_cache->accessor_count);
        return NULL;
    }
#endif
    __Pyx_CachedCodeObjectType *result = __pyx__find_code_object(code_cache, code_line);
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_decr_acq_rel(&code_cache->accessor_count);
#endif
    return result;
#endif
}
static void __pyx__insert_code_object(struct __Pyx_CodeObjectCache *code_cache, int code_line, __Pyx_CachedCodeObjectType* code_object)
{
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = code_cache->entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            code_cache->entries = entries;
            code_cache->max_count = 64;
            code_cache->count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(code_cache->entries, code_cache->count, code_line);
    if ((pos < code_cache->count) && unlikely(code_cache->entries[pos].code_line == code_line)) {
        __Pyx_CachedCodeObjectType* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_INCREF(code_object);
        Py_DECREF(tmp);
        return;
    }
    if (code_cache->count == code_cache->max_count) {
        int new_max = code_cache->max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            code_cache->entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        code_cache->entries = entries;
        code_cache->max_count = new_max;
    }
    for (i=code_cache->count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    code_cache->count++;
    Py_INCREF(code_object);
}
static void __pyx_insert_code_object(int code_line, __Pyx_CachedCodeObjectType* code_object) {
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && !CYTHON_ATOMICS
    (void)__pyx__insert_code_object;
    return; // Most implementation should have atomics. But otherwise, don't make it thread-safe, just fail.
#else
    struct __Pyx_CodeObjectCache *code_cache = &__pyx_mstate_global->__pyx_code_cache;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_nonatomic_int_type expected = 0;
    if (!__pyx_atomic_int_cmp_exchange(&code_cache->accessor_count, &expected, INT_MIN)) {
        return;
    }
#endif
    __pyx__insert_code_object(code_cache, code_line, code_object);
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_sub(&code_cache->accessor_count, INT_MIN);
#endif
#endif
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API && !defined(PYPY_VERSION)
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,
                                                       PyObject *firstlineno, PyObject *name) {
    PyObject *replace = NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;
    replace = PyObject_GetAttrString(code, "replace");
    if (likely(replace)) {
        PyObject *result = PyObject_Call(replace, __pyx_mstate_global->__pyx_empty_tuple, scratch_dict);
        Py_DECREF(replace);
        return result;
    }
    PyErr_Clear();
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;
    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;
    PyObject *exc_type, *exc_value, *exc_traceback;
    int success = 0;
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);
    code_object = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!code_object) {
        code_object = Py_CompileString("_getframe()", filename, Py_eval_input);
        if (unlikely(!code_object)) goto bad;
        py_py_line = PyLong_FromLong(py_line);
        if (unlikely(!py_py_line)) goto bad;
        py_funcname = PyUnicode_FromString(funcname);
        if (unlikely(!py_funcname)) goto bad;
        dict = PyDict_New();
        if (unlikely(!dict)) goto bad;
        {
            PyObject *old_code_object = code_object;
            code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);
            Py_DECREF(old_code_object);
        }
        if (unlikely(!code_object)) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, code_object);
    } else {
        dict = PyDict_New();
    }
    getframe = PySys_GetObject("_getframe");
    if (unlikely(!getframe)) goto bad;
    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;
    frame = PyEval_EvalCode(code_object, dict, dict);
    if (unlikely(!frame) || frame == Py_None) goto bad;
    success = 1;
  bad:
    PyErr_Restore(exc_type, exc_value, exc_traceback);
    Py_XDECREF(code_object);
    Py_XDECREF(py_py_line);
    Py_XDECREF(py_funcname);
    Py_XDECREF(dict);
    Py_XDECREF(replace);
    if (success) {
        PyTraceBack_Here(
            (struct _frame*)frame);
    }
    Py_XDECREF(frame);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    if (c_line) {
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
    }
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    Py_XDECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_mstate_global->__pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyLong_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (unlikely(!PyLong_Check(x))) {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Long(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyLong_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (int) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(int) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(int) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        int val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (int) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (int) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (int) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (int) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((int) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((int) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (int) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE unsigned int __Pyx_PyLong_As_unsigned_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (unlikely(!PyLong_Check(x))) {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_Long(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyLong_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(unsigned int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT)) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(unsigned int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT)) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(unsigned int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT)) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (unsigned int) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(unsigned int) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT)) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(unsigned int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT)) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT)) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(unsigned int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT)) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT)) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(unsigned int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT)) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(unsigned int) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(unsigned int) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        unsigned int val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (unsigned int) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (unsigned int) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (unsigned int) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (unsigned int) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(unsigned int) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((unsigned int) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(unsigned int) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((unsigned int) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((unsigned int) 1) << (sizeof(unsigned int) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (unsigned int) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyLong_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (unlikely(!PyLong_Check(x))) {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Long(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyLong_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (long) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(long) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(long) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        long val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (long) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (long) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (long) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (long) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((long) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((long) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (long) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* PyObjectVectorCallKwBuilder */
#if CYTHON_VECTORCALL
static int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    (void)__Pyx_PyObject_FastCallDict;
    if (__Pyx_PyTuple_SET_ITEM(builder, n, key) != (0)) return -1;
    Py_INCREF(key);
    args[n] = value;
    return 0;
}
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    (void)__Pyx_VectorcallBuilder_AddArgStr;
    if (unlikely(!PyUnicode_Check(key))) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        return -1;
    }
    return __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n);
}
static int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    PyObject *pyKey = PyUnicode_FromString(key);
    if (!pyKey) return -1;
    return __Pyx_VectorcallBuilder_AddArg(pyKey, value, builder, args, n);
}
#else // CYTHON_VECTORCALL
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, CYTHON_UNUSED PyObject **args, CYTHON_UNUSED int n) {
    if (unlikely(!PyUnicode_Check(key))) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        return -1;
    }
    return PyDict_SetItem(builder, key, value);
}
#endif

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum__sf_3a__3a_SoundSource_3a__3a_Status(enum sf::SoundSource::Status value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const enum sf::SoundSource::Status neg_one = (enum sf::SoundSource::Status) -1, const_zero = (enum sf::SoundSource::Status) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum sf::SoundSource::Status) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(enum sf::SoundSource::Status) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum sf::SoundSource::Status) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum sf::SoundSource::Status) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum sf::SoundSource::Status) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(enum sf::SoundSource::Status),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(enum sf::SoundSource::Status));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(int));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_unsigned_int(unsigned int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned int) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(unsigned int) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(unsigned int));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum__sf_3a__3a_Event_3a__3a_EventType(enum sf::Event::EventType value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const enum sf::Event::EventType neg_one = (enum sf::Event::EventType) -1, const_zero = (enum sf::Event::EventType) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum sf::Event::EventType) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(enum sf::Event::EventType) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum sf::Event::EventType) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum sf::Event::EventType) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum sf::Event::EventType) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(enum sf::Event::EventType),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(enum sf::Event::EventType));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum__sf_3a__3a_Keyboard_3a__3a_Key(enum sf::Keyboard::Key value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const enum sf::Keyboard::Key neg_one = (enum sf::Keyboard::Key) -1, const_zero = (enum sf::Keyboard::Key) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum sf::Keyboard::Key) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(enum sf::Keyboard::Key) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum sf::Keyboard::Key) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum sf::Keyboard::Key) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum sf::Keyboard::Key) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(enum sf::Keyboard::Key),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(enum sf::Keyboard::Key));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_enum__sf_3a__3a_Mouse_3a__3a_Button(enum sf::Mouse::Button value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const enum sf::Mouse::Button neg_one = (enum sf::Mouse::Button) -1, const_zero = (enum sf::Mouse::Button) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum sf::Mouse::Button) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(enum sf::Mouse::Button) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum sf::Mouse::Button) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum sf::Mouse::Button) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum sf::Mouse::Button) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(enum sf::Mouse::Button),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(enum sf::Mouse::Button));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030d0000
static __Pyx_TypeName
__Pyx_PyType_GetFullyQualifiedName(PyTypeObject* tp)
{
    PyObject *module = NULL, *name = NULL, *result = NULL;
    #if __PYX_LIMITED_VERSION_HEX < 0x030b0000
    name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_mstate_global->__pyx_n_u_qualname);
    #else
    name = PyType_GetQualName(tp);
    #endif
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) goto bad;
    module = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_mstate_global->__pyx_n_u_module);
    if (unlikely(module == NULL) || unlikely(!PyUnicode_Check(module))) goto bad;
    if (PyUnicode_CompareWithASCIIString(module, "builtins") == 0) {
        result = name;
        name = NULL;
        goto done;
    }
    result = PyUnicode_FromFormat("%U.%U", module, name);
    if (unlikely(result == NULL)) goto bad;
  done:
    Py_XDECREF(name);
    Py_XDECREF(module);
    return result;
  bad:
    PyErr_Clear();
    if (name) {
        result = name;
        name = NULL;
    } else {
        result = __Pyx_NewRef(__pyx_mstate_global->__pyx_kp_u__5);
    }
    goto done;
}
#endif

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* GetRuntimeVersion */
static unsigned long __Pyx_get_runtime_version(void) {
#if __PYX_LIMITED_VERSION_HEX >= 0x030b0000
    return Py_Version & ~0xFFUL;
#else
    static unsigned long __Pyx_cached_runtime_version = 0;
    if (__Pyx_cached_runtime_version == 0) {
        const char* rt_version = Py_GetVersion();
        unsigned long version = 0;
        unsigned long factor = 0x01000000UL;
        unsigned int digit = 0;
        int i = 0;
        while (factor) {
            while ('0' <= rt_version[i] && rt_version[i] <= '9') {
                digit = digit * 10 + (unsigned int) (rt_version[i] - '0');
                ++i;
            }
            version += factor * digit;
            if (rt_version[i] != '.')
                break;
            digit = 0;
            factor >>= 8;
            ++i;
        }
        __Pyx_cached_runtime_version = version;
    }
    return __Pyx_cached_runtime_version;
#endif
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {
    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;
    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))
        return 0;
    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))
        return 1;
    {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compile time Python version %d.%d "
                      "of module '%.100s' "
                      "%s "
                      "runtime version %d.%d",
                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),
                       __Pyx_MODULE_NAME,
                       (allow_newer) ? "was newer than" : "does not match",
                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)
       );
        return PyErr_WarnEx(NULL, message, 1);
    }
}

/* NewCodeObj */
#if CYTHON_COMPILING_IN_LIMITED_API
    static PyObject* __Pyx__PyCode_New(int a, int p, int k, int l, int s, int f,
                                       PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                       PyObject *fv, PyObject *cell, PyObject* fn,
                                       PyObject *name, int fline, PyObject *lnos) {
        PyObject *exception_table = NULL;
        PyObject *types_module=NULL, *code_type=NULL, *result=NULL;
        #if __PYX_LIMITED_VERSION_HEX < 0x030b0000
        PyObject *version_info;
        PyObject *py_minor_version = NULL;
        #endif
        long minor_version = 0;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        #if __PYX_LIMITED_VERSION_HEX >= 0x030b0000
        minor_version = 11;
        #else
        if (!(version_info = PySys_GetObject("version_info"))) goto end;
        if (!(py_minor_version = PySequence_GetItem(version_info, 1))) goto end;
        minor_version = PyLong_AsLong(py_minor_version);
        Py_DECREF(py_minor_version);
        if (minor_version == -1 && PyErr_Occurred()) goto end;
        #endif
        if (!(types_module = PyImport_ImportModule("types"))) goto end;
        if (!(code_type = PyObject_GetAttrString(types_module, "CodeType"))) goto end;
        if (minor_version <= 7) {
            (void)p;
            result = PyObject_CallFunction(code_type, "iiiiiOOOOOOiOOO", a, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else if (minor_version <= 10) {
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOiOOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else {
            if (!(exception_table = PyBytes_FromStringAndSize(NULL, 0))) goto end;
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOOiOOOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, name, fline, lnos, exception_table, fv, cell);
        }
    end:
        Py_XDECREF(code_type);
        Py_XDECREF(exception_table);
        Py_XDECREF(types_module);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
#elif PY_VERSION_HEX >= 0x030B0000
  static PyCodeObject* __Pyx__PyCode_New(int a, int p, int k, int l, int s, int f,
                                         PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                         PyObject *fv, PyObject *cell, PyObject* fn,
                                         PyObject *name, int fline, PyObject *lnos) {
    PyCodeObject *result;
    result =
      #if PY_VERSION_HEX >= 0x030C0000
        PyUnstable_Code_NewWithPosOnlyArgs
      #else
        PyCode_NewWithPosOnlyArgs
      #endif
        (a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, name, fline, lnos, __pyx_mstate_global->__pyx_empty_bytes);
    return result;
  }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx__PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx__PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
static PyObject* __Pyx_PyCode_New(
        __Pyx_PyCode_New_function_description descr,
        PyObject **varnames,
        PyObject* filename,
        PyObject *funcname,
        const char *line_table,
        PyObject *tuple_dedup_map
) {
    PyObject *code_obj = NULL, *varnames_tuple_dedup = NULL, *code_bytes = NULL, *line_table_bytes = NULL;
    Py_ssize_t var_count = (Py_ssize_t) descr.nlocals;
    PyObject *varnames_tuple = PyTuple_New(var_count);
    if (unlikely(!varnames_tuple)) return NULL;
    for (Py_ssize_t i=0; i < var_count; i++) {
        Py_INCREF(varnames[i]);
        if (__Pyx_PyTuple_SET_ITEM(varnames_tuple, i, varnames[i]) != (0)) goto done;
    }
    #if CYTHON_COMPILING_IN_LIMITED_API
    varnames_tuple_dedup = PyDict_GetItem(tuple_dedup_map, varnames_tuple);
    if (!varnames_tuple_dedup) {
        if (unlikely(PyDict_SetItem(tuple_dedup_map, varnames_tuple, varnames_tuple) < 0)) goto done;
        varnames_tuple_dedup = varnames_tuple;
    }
    #else
    varnames_tuple_dedup = PyDict_SetDefault(tuple_dedup_map, varnames_tuple, varnames_tuple);
    if (unlikely(!varnames_tuple_dedup)) goto done;
    #endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(varnames_tuple_dedup);
    #endif
    if (__PYX_LIMITED_VERSION_HEX >= (0x030b0000) && line_table != NULL
        && !CYTHON_COMPILING_IN_GRAAL) {
        line_table_bytes = PyBytes_FromStringAndSize(line_table, descr.line_table_length);
        if (unlikely(!line_table_bytes)) goto done;
        Py_ssize_t code_len = (descr.line_table_length * 2 + 4) & ~3;
        code_bytes = PyBytes_FromStringAndSize(NULL, code_len);
        if (unlikely(!code_bytes)) goto done;
        char* c_code_bytes = PyBytes_AsString(code_bytes);
        if (unlikely(!c_code_bytes)) goto done;
        memset(c_code_bytes, 0, (size_t) code_len);
    }
    code_obj = (PyObject*) __Pyx__PyCode_New(
        (int) descr.argcount,
        (int) descr.num_posonly_args,
        (int) descr.num_kwonly_args,
        (int) descr.nlocals,
        0,
        (int) descr.flags,
        code_bytes ? code_bytes : __pyx_mstate_global->__pyx_empty_bytes,
        __pyx_mstate_global->__pyx_empty_tuple,
        __pyx_mstate_global->__pyx_empty_tuple,
        varnames_tuple_dedup,
        __pyx_mstate_global->__pyx_empty_tuple,
        __pyx_mstate_global->__pyx_empty_tuple,
        filename,
        funcname,
        (int) descr.first_line,
        (__PYX_LIMITED_VERSION_HEX >= (0x030b0000) && line_table_bytes) ? line_table_bytes : __pyx_mstate_global->__pyx_empty_bytes
    );
done:
    Py_XDECREF(code_bytes);
    Py_XDECREF(line_table_bytes);
    #if CYTHON_AVOID_BORROWED_REFS
    Py_XDECREF(varnames_tuple_dedup);
    #endif
    Py_DECREF(varnames_tuple);
    return code_obj;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry const *t, PyObject **target, const char* const* encoding_names) {
    while (t->s) {
        PyObject *str;
        if (t->is_unicode) {
            if (t->intern) {
                str = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                str = PyUnicode_Decode(t->s, t->n - 1, encoding_names[t->encoding], NULL);
            } else {
                str = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            str = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        if (!str)
            return -1;
        *target = str;
        if (PyObject_Hash(str) == -1)
            return -1;
        ++t;
        ++target;
    }
    return 0;
}

#include <string.h>
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {
    size_t len = strlen(s);
    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {
        PyErr_SetString(PyExc_OverflowError, "byte string is too long");
        return -1;
    }
    return (Py_ssize_t) len;
}
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return PyByteArray_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    {
        const char* result;
        Py_ssize_t unicode_length;
        CYTHON_MAYBE_UNUSED_VAR(unicode_length); // only for __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        #if __PYX_LIMITED_VERSION_HEX < 0x030A0000
        if (unlikely(PyArg_Parse(o, "s#", &result, length) < 0)) return NULL;
        #else
        result = PyUnicode_AsUTF8AndSize(o, length);
        #endif
        #if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        unicode_length = PyUnicode_GetLength(o);
        if (unlikely(unicode_length < 0)) return NULL;
        if (unlikely(unicode_length != *length)) {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
        #endif
        return result;
    }
#else
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
}
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
    if (PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
    if (PyByteArray_Check(o)) {
#if (CYTHON_ASSUME_SAFE_SIZE && CYTHON_ASSUME_SAFE_MACROS) || (CYTHON_COMPILING_IN_PYPY && (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE)))
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
#else
        *length = PyByteArray_Size(o);
        if (*length == -1) return NULL;
        return PyByteArray_AsString(o);
#endif
    } else
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_LongWrongResultType(PyObject* result) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(result));
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
    PyErr_Format(PyExc_TypeError,
                 "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ")",
                 result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Long(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  PyObject *res = NULL;
  if (likely(PyLong_Check(x)))
      return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  if (likely(m && m->nb_int)) {
      res = m->nb_int(x);
  }
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
      res = PyNumber_Long(x);
  }
#endif
  if (likely(res)) {
      if (unlikely(!PyLong_CheckExact(res))) {
          return __Pyx_PyNumber_LongWrongResultType(res);
      }
  }
  else if (!PyErr_Occurred()) {
      PyErr_SetString(PyExc_TypeError,
                      "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyLong_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyLong_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject *__Pyx_Owned_Py_None(int b) {
    CYTHON_UNUSED_VAR(b);
    return __Pyx_NewRef(Py_None);
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyLong_FromSize_t(size_t ival) {
    return PyLong_FromSize_t(ival);
}


/* MultiPhaseInitModuleState */
#if CYTHON_PEP489_MULTI_PHASE_INIT && CYTHON_USE_MODULE_STATE
#ifndef CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
#if (CYTHON_COMPILING_IN_LIMITED_API || PY_VERSION_HEX >= 0x030C0000)
  #define CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE 1
#else
  #define CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE 0
#endif
#endif
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE && !CYTHON_ATOMICS
#error "Module state with PEP489 requires atomics. Currently that's one of\
 C11, C++11, gcc atomic intrinsics or MSVC atomic intrinsics"
#endif
#if !CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
#define __Pyx_ModuleStateLookup_Lock()
#define __Pyx_ModuleStateLookup_Unlock()
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d0000
static PyMutex __Pyx_ModuleStateLookup_mutex = {0};
#define __Pyx_ModuleStateLookup_Lock() PyMutex_Lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() PyMutex_Unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(__cplusplus) && __cplusplus >= 201103L
#include <mutex>
static std::mutex __Pyx_ModuleStateLookup_mutex;
#define __Pyx_ModuleStateLookup_Lock() __Pyx_ModuleStateLookup_mutex.lock()
#define __Pyx_ModuleStateLookup_Unlock() __Pyx_ModuleStateLookup_mutex.unlock()
#elif defined(__STDC_VERSION__) && (__STDC_VERSION__ > 201112L) && !defined(__STDC_NO_THREADS__)
#include <threads.h>
static mtx_t __Pyx_ModuleStateLookup_mutex;
static once_flag __Pyx_ModuleStateLookup_mutex_once_flag = ONCE_FLAG_INIT;
static void __Pyx_ModuleStateLookup_initialize_mutex(void) {
    mtx_init(&__Pyx_ModuleStateLookup_mutex, mtx_plain);
}
#define __Pyx_ModuleStateLookup_Lock()\
  call_once(&__Pyx_ModuleStateLookup_mutex_once_flag, __Pyx_ModuleStateLookup_initialize_mutex);\
  mtx_lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() mtx_unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(HAVE_PTHREAD_H)
#include <pthread.h>
static pthread_mutex_t __Pyx_ModuleStateLookup_mutex = PTHREAD_MUTEX_INITIALIZER;
#define __Pyx_ModuleStateLookup_Lock() pthread_mutex_lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() pthread_mutex_unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(_WIN32)
#include <Windows.h>  // synchapi.h on its own doesn't work
static SRWLOCK __Pyx_ModuleStateLookup_mutex = SRWLOCK_INIT;
#define __Pyx_ModuleStateLookup_Lock() AcquireSRWLockExclusive(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() ReleaseSRWLockExclusive(&__Pyx_ModuleStateLookup_mutex)
#else
#error "No suitable lock available for CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE.\
 Requires C standard >= C11, or C++ standard >= C++11,\
 or pthreads, or the Windows 32 API, or Python >= 3.13."
#endif
typedef struct {
    int64_t id;
    PyObject *module;
} __Pyx_InterpreterIdAndModule;
typedef struct {
    char interpreter_id_as_index;
    Py_ssize_t count;
    Py_ssize_t allocated;
    __Pyx_InterpreterIdAndModule table[1];
} __Pyx_ModuleStateLookupData;
#define __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE 32
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static __pyx_atomic_int_type __Pyx_ModuleStateLookup_read_counter = 0;
#endif
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static __pyx_atomic_ptr_type __Pyx_ModuleStateLookup_data = 0;
#else
static __Pyx_ModuleStateLookupData* __Pyx_ModuleStateLookup_data = NULL;
#endif
static __Pyx_InterpreterIdAndModule* __Pyx_State_FindModuleStateLookupTableLowerBound(
        __Pyx_InterpreterIdAndModule* table,
        Py_ssize_t count,
        int64_t interpreterId) {
    __Pyx_InterpreterIdAndModule* begin = table;
    __Pyx_InterpreterIdAndModule* end = begin + count;
    if (begin->id == interpreterId) {
        return begin;
    }
    while ((end - begin) > __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE) {
        __Pyx_InterpreterIdAndModule* halfway = begin + (end - begin)/2;
        if (halfway->id == interpreterId) {
            return halfway;
        }
        if (halfway->id < interpreterId) {
            begin = halfway;
        } else {
            end = halfway;
        }
    }
    for (; begin < end; ++begin) {
        if (begin->id >= interpreterId) return begin;
    }
    return begin;
}
static PyObject *__Pyx_State_FindModule(CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return NULL;
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData* data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_relaxed(&__Pyx_ModuleStateLookup_data);
    {
        __pyx_atomic_incr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
        if (likely(data)) {
            __Pyx_ModuleStateLookupData* new_data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_acquire(&__Pyx_ModuleStateLookup_data);
            if (likely(data == new_data)) {
                goto read_finished;
            }
        }
        __pyx_atomic_decr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
        __Pyx_ModuleStateLookup_Lock();
        __pyx_atomic_incr_relaxed(&__Pyx_ModuleStateLookup_read_counter);
        data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_relaxed(&__Pyx_ModuleStateLookup_data);
        __Pyx_ModuleStateLookup_Unlock();
    }
  read_finished:;
#else
    __Pyx_ModuleStateLookupData* data = __Pyx_ModuleStateLookup_data;
#endif
    __Pyx_InterpreterIdAndModule* found = NULL;
    if (unlikely(!data)) goto end;
    if (data->interpreter_id_as_index) {
        if (interpreter_id < data->count) {
            found = data->table+interpreter_id;
        }
    } else {
        found = __Pyx_State_FindModuleStateLookupTableLowerBound(
            data->table, data->count, interpreter_id);
    }
  end:
    {
        PyObject *result=NULL;
        if (found && found->id == interpreter_id) {
            result = found->module;
        }
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
        __pyx_atomic_decr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
#endif
        return result;
    }
}
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static void __Pyx_ModuleStateLookup_wait_until_no_readers(void) {
    while (__pyx_atomic_load(&__Pyx_ModuleStateLookup_read_counter) != 0);
}
#else
#define __Pyx_ModuleStateLookup_wait_until_no_readers()
#endif
static int __Pyx_State_AddModuleInterpIdAsIndex(__Pyx_ModuleStateLookupData **old_data, PyObject* module, int64_t interpreter_id) {
    Py_ssize_t to_allocate = (*old_data)->allocated;
    while (to_allocate <= interpreter_id) {
        if (to_allocate == 0) to_allocate = 1;
        else to_allocate *= 2;
    }
    __Pyx_ModuleStateLookupData *new_data = *old_data;
    if (to_allocate != (*old_data)->allocated) {
         new_data = (__Pyx_ModuleStateLookupData *)realloc(
            *old_data,
            sizeof(__Pyx_ModuleStateLookupData)+(to_allocate-1)*sizeof(__Pyx_InterpreterIdAndModule));
        if (!new_data) {
            PyErr_NoMemory();
            return -1;
        }
        for (Py_ssize_t i = new_data->allocated; i < to_allocate; ++i) {
            new_data->table[i].id = i;
            new_data->table[i].module = NULL;
        }
        new_data->allocated = to_allocate;
    }
    new_data->table[interpreter_id].module = module;
    if (new_data->count < interpreter_id+1) {
        new_data->count = interpreter_id+1;
    }
    *old_data = new_data;
    return 0;
}
static void __Pyx_State_ConvertFromInterpIdAsIndex(__Pyx_ModuleStateLookupData *data) {
    __Pyx_InterpreterIdAndModule *read = data->table;
    __Pyx_InterpreterIdAndModule *write = data->table;
    __Pyx_InterpreterIdAndModule *end = read + data->count;
    for (; read<end; ++read) {
        if (read->module) {
            write->id = read->id;
            write->module = read->module;
            ++write;
        }
    }
    data->count = write - data->table;
    for (; write<end; ++write) {
        write->id = 0;
        write->module = NULL;
    }
    data->interpreter_id_as_index = 0;
}
static int __Pyx_State_AddModule(PyObject* module, CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return -1;
    int result = 0;
    __Pyx_ModuleStateLookup_Lock();
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData *old_data = (__Pyx_ModuleStateLookupData *)
            __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, 0);
#else
    __Pyx_ModuleStateLookupData *old_data = __Pyx_ModuleStateLookup_data;
#endif
    __Pyx_ModuleStateLookupData *new_data = old_data;
    if (!new_data) {
        new_data = (__Pyx_ModuleStateLookupData *)calloc(1, sizeof(__Pyx_ModuleStateLookupData));
        if (!new_data) {
            result = -1;
            PyErr_NoMemory();
            goto end;
        }
        new_data->allocated = 1;
        new_data->interpreter_id_as_index = 1;
    }
    __Pyx_ModuleStateLookup_wait_until_no_readers();
    if (new_data->interpreter_id_as_index) {
        if (interpreter_id < __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE) {
            result = __Pyx_State_AddModuleInterpIdAsIndex(&new_data, module, interpreter_id);
            goto end;
        }
        __Pyx_State_ConvertFromInterpIdAsIndex(new_data);
    }
    {
        Py_ssize_t insert_at = 0;
        {
            __Pyx_InterpreterIdAndModule* lower_bound = __Pyx_State_FindModuleStateLookupTableLowerBound(
                new_data->table, new_data->count, interpreter_id);
            assert(lower_bound);
            insert_at = lower_bound - new_data->table;
            if (unlikely(insert_at < new_data->count && lower_bound->id == interpreter_id)) {
                lower_bound->module = module;
                goto end;  // already in table, nothing more to do
            }
        }
        if (new_data->count+1 >= new_data->allocated) {
            Py_ssize_t to_allocate = (new_data->count+1)*2;
            new_data =
                (__Pyx_ModuleStateLookupData*)realloc(
                    new_data,
                    sizeof(__Pyx_ModuleStateLookupData) +
                    (to_allocate-1)*sizeof(__Pyx_InterpreterIdAndModule));
            if (!new_data) {
                result = -1;
                new_data = old_data;
                PyErr_NoMemory();
                goto end;
            }
            new_data->allocated = to_allocate;
        }
        ++new_data->count;
        int64_t last_id = interpreter_id;
        PyObject *last_module = module;
        for (Py_ssize_t i=insert_at; i<new_data->count; ++i) {
            int64_t current_id = new_data->table[i].id;
            new_data->table[i].id = last_id;
            last_id = current_id;
            PyObject *current_module = new_data->table[i].module;
            new_data->table[i].module = last_module;
            last_module = current_module;
        }
    }
  end:
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, new_data);
#else
    __Pyx_ModuleStateLookup_data = new_data;
#endif
    __Pyx_ModuleStateLookup_Unlock();
    return result;
}
static int __Pyx_State_RemoveModule(CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return -1;
    __Pyx_ModuleStateLookup_Lock();
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData *data = (__Pyx_ModuleStateLookupData *)
            __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, 0);
#else
    __Pyx_ModuleStateLookupData *data = __Pyx_ModuleStateLookup_data;
#endif
    if (data->interpreter_id_as_index) {
        if (interpreter_id < data->count) {
            data->table[interpreter_id].module = NULL;
        }
        goto done;
    }
    {
        __Pyx_ModuleStateLookup_wait_until_no_readers();
        __Pyx_InterpreterIdAndModule* lower_bound = __Pyx_State_FindModuleStateLookupTableLowerBound(
            data->table, data->count, interpreter_id);
        if (!lower_bound) goto done;
        if (lower_bound->id != interpreter_id) goto done;
        __Pyx_InterpreterIdAndModule *end = data->table+data->count;
        for (;lower_bound<end-1; ++lower_bound) {
            lower_bound->id = (lower_bound+1)->id;
            lower_bound->module = (lower_bound+1)->module;
        }
    }
    --data->count;
    if (data->count == 0) {
        free(data);
        data = NULL;
    }
  done:
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, data);
#else
    __Pyx_ModuleStateLookup_data = data;
#endif
    __Pyx_ModuleStateLookup_Unlock();
    return 0;
}
#endif

/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
